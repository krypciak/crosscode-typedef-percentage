{
    "__all__": {},
    "dom.ready": {},
    "game.beta": {},
    "game.config": {
        "ig.Languages": {
            "fields": {
                "en_US": {
                    "type": "never",
                    "isOptional": false
                },
                "de_DE": {
                    "type": "never",
                    "isOptional": false
                },
                "fr_FR": {
                    "type": "never",
                    "isOptional": false
                },
                "zh_CN": {
                    "type": "never",
                    "isOptional": false
                },
                "zh_TW": {
                    "type": "never",
                    "isOptional": false
                },
                "ja_JP": {
                    "type": "never",
                    "isOptional": false
                },
                "ko_KR": {
                    "type": "never",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig": {
            "fields": {
                "SUPPORTED_LANG": {
                    "type": "LANGUAGE_UNION[]"
                },
                "LANG_DETAILS": {
                    "type": "{ [locale: string]: ig.LangOptions }"
                },
                "SYSTEM_FONT_METRICS": {
                    "type": "{ size: number[]; baseLine: number[] }"
                },
                "size": {
                    "type": "number[]",
                    "isOptional": false
                },
                "baseLine": {
                    "type": "number[]",
                    "isOptional": false
                },
                "TERRAIN_DEFAULT": {
                    "type": "ig.TERRAIN.NORMAL"
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.LangOptions": {
            "fields": {
                "systemFont": {
                    "type": "string",
                    "isOptional": true
                },
                "useFor": {
                    "type": "string",
                    "isOptional": true
                },
                "commaDigits": {
                    "type": "boolean",
                    "isOptional": true
                },
                "fixedMsgWidth": {
                    "type": "boolean",
                    "isOptional": true
                },
                "newlineAnywhere": {
                    "type": "boolean",
                    "isOptional": true
                },
                "newlineException": {
                    "type": "string[]",
                    "isOptional": true
                },
                "newlineAfter": {
                    "type": "string[]",
                    "isOptional": true
                },
                "metrics": {
                    "type": "typeof ig.SYSTEM_FONT_METRICS",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.constants": {
        "": {
            "fields": {
                "Constants": {
                    "type": "{\n        BALL_HEIGHT: 12\n        BALL_SIZE: 8\n        BALL_Z_HEIGHT: 8\n    }"
                },
                "BALL_HEIGHT": {
                    "type": "12",
                    "isOptional": false
                },
                "BALL_SIZE": {
                    "type": "8",
                    "isOptional": false
                },
                "BALL_Z_HEIGHT": {
                    "type": "8",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.achievements.achievements": {
        "sc.TrophyIcon": {
            "fields": {
                "index": {
                    "type": "number",
                    "isOptional": false
                },
                "cat": {
                    "type": "'GENERAL' | 'COMBAT' | 'EXPLORATION'",
                    "isOptional": false
                },
                "hidden": {
                    "type": "boolean",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "sc": {
            "fields": {
                "TROPHY_ICONS": {
                    "type": "Record<string, sc.TrophyIcon>"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.achievements.plug-in": {},
    "game.feature.achievements.stats-model": {
        "sc.StatsModel": {
            "fields": {
                "values": {
                    "type": "Record<string, Record<string, any>>",
                    "isOptional": false
                },
                "statsEnabled": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "set": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "stat",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "value",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "setMax": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "stat",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "value",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "setMin": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "stat",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "value",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "add": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "stat",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "value",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "subtract": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "stat",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "value",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "getMap": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "map",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "stat",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "setMap": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "map",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "stat",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "value",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "addMap": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "map",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "stat",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "value",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "subMap": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "map",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "stat",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "value",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "StatsModel",
                    "args": []
                }
            },
            "parents": [
                "ig.GameAddon"
            ]
        },
        "sc": {
            "fields": {
                "StatsModel": {
                    "type": "StatsModelConstructor"
                },
                "stats": {
                    "type": "StatsModel"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.ar.plug-in": {},
    "game.feature.arena.arena-bonus-objectives": {},
    "game.feature.arena.arena-challenges": {
        "sc.ArenaChallengeBase": {
            "fields": {
                "state": {
                    "type": "boolean",
                    "isOptional": false
                },
                "icon": {
                    "type": "number",
                    "isOptional": false
                },
                "callback": {
                    "type": "() => void",
                    "isOptional": true
                }
            },
            "functions": {
                "toggle": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "state",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "init": {
                    "returnType": "ArenaChallengeBase",
                    "args": [
                        {
                            "name": "icon",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "callback",
                            "type": "(state?: boolean) => void",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "sc": {
            "fields": {
                "ArenaChallengeBase": {
                    "type": "ArenaChallengeBaseConstructor"
                },
                "ArenaChallengePlayerBase": {
                    "type": "sc.ArenaChallengePlayerBaseConstructor"
                },
                "ARENA_CHALLENGES": {
                    "type": "ARENA_CHALLENGES"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.ArenaChallengePlayerBase": {
            "fields": {
                "core": {
                    "type": "keyof typeof sc.PLAYER_CORE",
                    "isOptional": false
                }
            },
            "functions": {
                "onToggle": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "ArenaChallengePlayerBase",
                    "args": [
                        {
                            "name": "core",
                            "type": "keyof typeof sc.PLAYER_CORE",
                            "isOptional": false
                        },
                        {
                            "name": "icon",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "sc.ArenaChallengeBase"
            ]
        },
        "sc.ARENA_CHALLENGES": {
            "fields": {
                "NO_MELEE": {
                    "type": "sc.ArenaChallengePlayerBase",
                    "isOptional": false
                },
                "NO_RANGED": {
                    "type": "sc.ArenaChallengePlayerBase",
                    "isOptional": false
                },
                "NO_DASH": {
                    "type": "sc.ArenaChallengePlayerBase",
                    "isOptional": false
                },
                "NO_GUARD": {
                    "type": "sc.ArenaChallengePlayerBase",
                    "isOptional": false
                },
                "NO_COMBAT_ARTS": {
                    "type": "sc.ArenaChallengePlayerBase",
                    "isOptional": false
                },
                "NO_HP_REGEN": {
                    "type": "sc.ArenaChallengeBase",
                    "isOptional": false
                },
                "NO_ITEMS": {
                    "type": "sc.ArenaChallengeBase",
                    "isOptional": false
                },
                "LEA_MUST_DIE": {
                    "type": "sc.ArenaChallengeBase",
                    "isOptional": false
                },
                "ENVIRO_HAZARD": {
                    "type": "sc.ArenaChallengeBase",
                    "isOptional": false
                },
                "PVP_BATTLE": {
                    "type": "sc.ArenaChallengeBase",
                    "isOptional": false
                },
                "WEAPON_ADJUST": {
                    "type": "sc.ArenaChallengeBase",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.arena.arena-cheer": {
        "sc.ArenaCrowdCheerController.SoundEntry": {
            "fields": {
                "sounds": {
                    "type": "{\n          sound: ig.Sound;\n          volume: number;\n        }[]",
                    "isOptional": false
                },
                "sound": {
                    "type": "ig.Sound",
                    "isOptional": false
                },
                "volume": {
                    "type": "number",
                    "isOptional": false
                },
                "maxVariance": {
                    "type": "number",
                    "isOptional": false
                },
                "cooldown": {
                    "type": "number",
                    "isOptional": false
                },
                "cooldownVariance": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.ArenaCrowdCheerController.Sounds": {
            "fields": {
                "APPLAUSE": {
                    "type": "SoundEntry",
                    "isOptional": false
                },
                "SURPRISED": {
                    "type": "SoundEntry",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.ArenaCrowdCheerController.SoundPoolEntry": {
            "fields": {
                "sounds": {
                    "type": "ig.Sound[]",
                    "isOptional": false
                },
                "timer": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.ArenaCrowdCheerController": {
            "fields": {
                "soundPool": {
                    "type": "Record<\n        keyof sc.ArenaCrowdCheerController.Sounds,\n        sc.ArenaCrowdCheerController.SoundPoolEntry\n      >",
                    "isOptional": false
                }
            },
            "functions": {
                "update": {
                    "returnType": "void",
                    "args": []
                },
                "play": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "type",
                            "type": "keyof sc.ArenaCrowdCheerController.Sounds | 'RANDOM'",
                            "isOptional": false
                        }
                    ]
                },
                "resetTimers": {
                    "returnType": "void",
                    "args": []
                },
                "loadCache": {
                    "returnType": "void",
                    "args": []
                },
                "clearCache": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "ArenaCrowdCheerController",
                    "args": []
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "sc": {
            "fields": {
                "ArenaCrowdCheerController": {
                    "type": "ArenaCrowdCheerControllerConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.arena.arena-score-types": {
        "sc.ArenaScoreType": {
            "fields": {
                "order": {
                    "type": "number",
                    "isOptional": false
                },
                "staticMultiplier": {
                    "type": "number",
                    "isOptional": true
                },
                "static": {
                    "type": "boolean",
                    "isOptional": true
                },
                "asBonus": {
                    "type": "boolean",
                    "isOptional": true
                },
                "asMali": {
                    "type": "boolean",
                    "isOptional": true
                },
                "dimReturns": {
                    "type": "boolean",
                    "isOptional": true
                },
                "points": {
                    "type": "number",
                    "isOptional": true
                },
                "chain": {
                    "type": "number",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.ARENA_SCORE_TYPES": {
            "fields": {
                "DAMAGE_DONE": {
                    "type": "ArenaScoreType",
                    "isOptional": false
                },
                "DAMAGE_DONE_EFFECTIVE": {
                    "type": "ArenaScoreType",
                    "isOptional": false
                },
                "DAMAGE_TAKEN": {
                    "type": "ArenaScoreType",
                    "isOptional": false
                },
                "KILL": {
                    "type": "ArenaScoreType",
                    "isOptional": false
                },
                "BOSS_KILL": {
                    "type": "ArenaScoreType",
                    "isOptional": false
                },
                "TARGET_KILL": {
                    "type": "ArenaScoreType",
                    "isOptional": false
                },
                "MULTI_KILL": {
                    "type": "ArenaScoreType",
                    "isOptional": false
                },
                "ENVIRONMENT_KILL": {
                    "type": "ArenaScoreType",
                    "isOptional": false
                },
                "ONE_HIT_KILL": {
                    "type": "ArenaScoreType",
                    "isOptional": false
                },
                "LOCK_FINISH": {
                    "type": "ArenaScoreType",
                    "isOptional": false
                },
                "LOCK_FINISH_3": {
                    "type": "ArenaScoreType",
                    "isOptional": false
                },
                "ELEMENT_OVERLOAD": {
                    "type": "ArenaScoreType",
                    "isOptional": false
                },
                "PERFECT_SHIELD": {
                    "type": "ArenaScoreType",
                    "isOptional": false
                },
                "PERFECT_DODGE": {
                    "type": "ArenaScoreType",
                    "isOptional": false
                },
                "ENEMY_BREAK": {
                    "type": "ArenaScoreType",
                    "isOptional": false
                },
                "GUARD_COUNTER": {
                    "type": "ArenaScoreType",
                    "isOptional": false
                },
                "STATUS_INFLICT": {
                    "type": "ArenaScoreType",
                    "isOptional": false
                },
                "PVP_ROUND_WON": {
                    "type": "ArenaScoreType",
                    "isOptional": false
                },
                "PVP_ROUND_LOST": {
                    "type": "ArenaScoreType",
                    "isOptional": false
                },
                "ENEMY_HEAL": {
                    "type": "ArenaScoreType",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc": {
            "fields": {
                "ARENA_SCORE_TYPES": {
                    "type": "ARENA_SCORE_TYPES"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.arena.arena": {
        "sc": {
            "fields": {
                "ARENA_CHAIN_MAX_TIME": {
                    "type": "number"
                },
                "ARENA_SILVER_MEDAL_QUOTA": {
                    "type": "number"
                },
                "ARENA_RUSH_COIN_QUOTA": {
                    "type": "number"
                },
                "ARENA_TROPHY_QUOTA": {
                    "type": "number"
                },
                "ARENA_MAX_CHAIN_HITS": {
                    "type": "number"
                },
                "ARENA_MAX_CHAIN_MULTIPLIER": {
                    "type": "number"
                },
                "Arena": {
                    "type": "ArenaConstructor"
                },
                "arena": {
                    "type": "Arena"
                },
                "ARENA_BONUS_OBJECTIVE": {
                    "type": "ARENA_BONUS_OBJECTIVE"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.Arena.CupOptions": {
            "fields": {
                "order": {
                    "type": "number",
                    "isOptional": true
                },
                "id": {
                    "type": "string",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.Arena.Cup": {
            "fields": {
                "order": {
                    "type": "number",
                    "isOptional": false
                },
                "name": {
                    "type": "ig.LangLabel.Data",
                    "isOptional": false
                },
                "condition": {
                    "type": "string",
                    "isOptional": true
                },
                "noRush": {
                    "type": "boolean",
                    "isOptional": true
                },
                "progress": {
                    "type": "Arena.CupProgress",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.Arena.CupData.CupCore": {
            "fields": {
                "name": {
                    "type": "ig.LangLabel.Data",
                    "isOptional": false
                },
                "info": {
                    "type": "ig.LangLabel.Data",
                    "isOptional": false
                },
                "difficulty": {
                    "type": "number",
                    "isOptional": false
                },
                "level": {
                    "type": "number",
                    "isOptional": false
                },
                "creator": {
                    "type": "ig.LangLabel.Data",
                    "isOptional": false
                },
                "music": {
                    "type": "string",
                    "isOptional": false
                },
                "rushMusic": {
                    "type": "string",
                    "isOptional": false
                },
                "noRush": {
                    "type": "boolean",
                    "isOptional": true
                },
                "condition": {
                    "type": "string",
                    "isOptional": true
                },
                "type": {
                    "type": "sc.ARENA_BASE_TYPE",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.Arena.CupData": {
            "fields": {
                "core": {
                    "type": "CupData.CupCore",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.Arena.CupProgress": {
            "fields": {
                "rush": {
                    "type": "RushProgress",
                    "isOptional": false
                },
                "rounds": {
                    "type": "RoundProgress[]",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.Arena.RoundProgress": {
            "fields": {
                "medal": {
                    "type": "number",
                    "isOptional": false
                },
                "points": {
                    "type": "number",
                    "isOptional": false
                },
                "time": {
                    "type": "number",
                    "isOptional": false
                },
                "cleared": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.Arena.RushProgress": {
            "fields": {
                "chain": {
                    "type": "number",
                    "isOptional": false
                },
                "cleared": {
                    "type": "number",
                    "isOptional": false
                },
                "medal": {
                    "type": "number",
                    "isOptional": false
                },
                "points": {
                    "type": "number",
                    "isOptional": false
                },
                "time": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": [
                "RoundProgress"
            ]
        },
        "sc.Arena.ArenaBonusObjective": {
            "fields": {
                "_type": {
                    "type": "'Integer' | 'EMPTY'",
                    "isOptional": false
                },
                "_prefix": {
                    "type": "'seconds' | 'value' | 'target'",
                    "isOptional": true
                },
                "order": {
                    "type": "number",
                    "isOptional": false
                },
                "displayRangePoints": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "a_",
                            "type": "any",
                            "isOptional": false
                        },
                        {
                            "name": "b_",
                            "type": "any",
                            "isOptional": false
                        }
                    ]
                },
                "check": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "a_",
                            "type": "any",
                            "isOptional": false
                        }
                    ]
                },
                "getText": {
                    "returnType": "string",
                    "args": [
                        {
                            "name": "a_",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "b_",
                            "type": "any",
                            "isOptional": false
                        },
                        {
                            "name": "c_",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "getPoints": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "a_",
                            "type": "any",
                            "isOptional": false
                        },
                        {
                            "name": "b_",
                            "type": "any",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": []
        },
        "sc.Arena.KnownCupAttributes": {
            "fields": {
                "noRush": {
                    "type": "boolean",
                    "isOptional": false
                },
                "name": {
                    "type": "ig.LangLabel.Data",
                    "isOptional": false
                },
                "condition": {
                    "type": "string",
                    "isOptional": false
                },
                "type": {
                    "type": "sc.ARENA_BASE_TYPE",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.Arena.Runtime": {
            "fields": {
                "score": {
                    "type": "number",
                    "isOptional": false
                },
                "prevScore": {
                    "type": "number",
                    "isOptional": false
                },
                "timer": {
                    "type": "number",
                    "isOptional": false
                },
                "chain": {
                    "type": "number",
                    "isOptional": false
                },
                "rushChain": {
                    "type": "number",
                    "isOptional": false
                },
                "rushChainMax": {
                    "type": "number",
                    "isOptional": false
                },
                "chainTimer": {
                    "type": "number",
                    "isOptional": false
                },
                "roundKills": {
                    "type": "number",
                    "isOptional": false
                },
                "currentWave": {
                    "type": "number",
                    "isOptional": false
                },
                "waveKillsNeeded": {
                    "type": "number",
                    "isOptional": false
                },
                "rush": {
                    "type": "boolean",
                    "isOptional": false
                },
                "roundStarted": {
                    "type": "boolean",
                    "isOptional": false
                },
                "currentRound": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.Arena.Data": {
            "fields": {
                "coins": {
                    "type": "number",
                    "isOptional": false
                },
                "coinsSpend": {
                    "type": "number",
                    "isOptional": false
                },
                "cupData": {
                    "type": "Record<string, CupProgress>",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.Arena": {
            "fields": {
                "active": {
                    "type": "boolean",
                    "isOptional": false
                },
                "runtime": {
                    "type": "sc.Arena.Runtime",
                    "isOptional": false
                },
                "coins": {
                    "type": "number",
                    "isOptional": false
                },
                "coinsSpend": {
                    "type": "number",
                    "isOptional": false
                },
                "cups": {
                    "type": "Record<string, sc.Arena.Cup>",
                    "isOptional": false
                },
                "partyStash": {
                    "type": "string[]",
                    "isOptional": false
                },
                "sounds": {
                    "type": "sc.ArenaCrowdCheerController",
                    "isOptional": false
                },
                "effects": {
                    "type": "ig.EffectSheet",
                    "isOptional": false
                },
                "_pauseBlock": {
                    "type": "boolean",
                    "isOptional": false
                },
                "_endRoundEnd": {
                    "type": "boolean",
                    "isOptional": false
                },
                "_exitCup": {
                    "type": "boolean",
                    "isOptional": false
                },
                "_pauseAction": {
                    "type": "number",
                    "isOptional": false
                },
                "_isFinalHit": {
                    "type": "boolean",
                    "isOptional": false
                },
                "_partySettingBehaviour": {
                    "type": "null | keyof sc.PARTY_STRATEGY.BehaviourStrategies",
                    "isOptional": false
                },
                "_hasCustomCups": {
                    "type": "boolean",
                    "isOptional": false
                },
                "order": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "registerCup": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "cupName",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "cupOptions",
                            "type": "Arena.CupOptions",
                            "isOptional": false
                        },
                        {
                            "name": "isExtension",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "onPreDamageApply": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "combatant",
                            "type": "ig.ENTITY.Combatant",
                            "isOptional": false
                        },
                        {
                            "name": "damageResult",
                            "type": "sc.CombatParams.DamageResult",
                            "isOptional": false
                        },
                        {
                            "name": "shieldResult",
                            "type": "sc.SHIELD_RESULT",
                            "isOptional": false
                        },
                        {
                            "name": "attacker",
                            "type": "ig.ENTITY.Combatant",
                            "isOptional": false
                        },
                        {
                            "name": "attackInfo",
                            "type": "sc.AttackInfo",
                            "isOptional": false
                        }
                    ]
                },
                "addScore": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "scoreType",
                            "type": "keyof sc.ARENA_SCORE_TYPES",
                            "isOptional": false
                        },
                        {
                            "name": "points",
                            "type": "number",
                            "isOptional": true
                        }
                    ]
                },
                "getTotalArenaCompletion": {
                    "returnType": "number",
                    "args": []
                },
                "getCupCompletion": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "cupName",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "getTotalDefaultTrophies": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "a_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "c_",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "getCupTrophy": {
                    "returnType": "sc.ARENA_MEDALS_TROPHIES | -1",
                    "args": [
                        {
                            "name": "cupName",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "isCupUnlocked": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "cupName",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "getTotalDefaultCups": {
                    "returnType": "{ [key: string]: { order: number } }",
                    "args": [
                        {
                            "name": "sorted",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "isCupCustom": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "cupName",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "getTotalArenaCoins": {
                    "returnType": "number",
                    "args": []
                },
                "isEnemyBlocked": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "entity",
                            "type": "ig.ENTITY.Enemy",
                            "isOptional": false
                        }
                    ]
                },
                "onCombatantHeal": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "entity",
                            "type": "ig.ENTITY.Combatant",
                            "isOptional": false
                        },
                        {
                            "name": "healAmount",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "startRound": {
                    "returnType": "void",
                    "args": []
                },
                "endRound": {
                    "returnType": "void",
                    "args": []
                },
                "initMetaData": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "cupName",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "onLevelLoadStart": {
                    "returnType": "void",
                    "args": []
                },
                "getCupRounds": {
                    "returnType": "sc.Arena.CupData.ArenaRound[]",
                    "args": [
                        {
                            "name": "cupName",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "getCupCoreAttrib": {
                    "returnType": "Arena.KnownCupAttributes[K]",
                    "args": [
                        {
                            "name": "cupName",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "attribute",
                            "type": "K",
                            "isOptional": false
                        }
                    ]
                },
                "onEnemyBreak": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "enemy",
                            "type": "ig.ENTITY.Enemy",
                            "isOptional": false
                        }
                    ]
                },
                "hasChallenge": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "challenge",
                            "type": "keyof sc.ARENA_CHALLENGES",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "Arena",
                    "args": []
                }
            },
            "parents": [
                "ig.GameAddon",
                "ig.Vars.Accessor",
                "sc.Model.Observer"
            ]
        },
        "sc.ARENA_BONUS_OBJECTIVE": {
            "fields": {
                "NO_DAMAGE_TAKEN": {
                    "type": "sc.Arena.ArenaBonusObjective",
                    "isOptional": false
                },
                "NO_ITEMS_USED": {
                    "type": "sc.Arena.ArenaBonusObjective",
                    "isOptional": false
                },
                "PVP_FLAWLESS": {
                    "type": "sc.Arena.ArenaBonusObjective",
                    "isOptional": false
                },
                "EFFECTIVE_DAMAGE": {
                    "type": "sc.Arena.ArenaBonusObjective",
                    "isOptional": false
                },
                "HIT_COUNTER": {
                    "type": "sc.Arena.ArenaBonusObjective",
                    "isOptional": false
                },
                "TIME": {
                    "type": "sc.Arena.ArenaBonusObjective",
                    "isOptional": false
                },
                "COMBAT_ARTS_USED": {
                    "type": "sc.Arena.ArenaBonusObjective",
                    "isOptional": false
                },
                "CHAIN": {
                    "type": "sc.Arena.ArenaBonusObjective",
                    "isOptional": false
                },
                "ITEMS_USED": {
                    "type": "sc.Arena.ArenaBonusObjective",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.arena.entities.arena-spawn": {},
    "game.feature.arena.gui.arena-effect-display": {},
    "game.feature.arena.gui.arena-gui": {},
    "game.feature.arena.gui.arena-round-gui": {
        "sc.ArenaRoundEndButtons": {
            "fields": {
                "buttons": {
                    "type": "sc.ButtonGui[]",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "ArenaRoundEndButtons",
                    "args": [
                        {
                            "name": "callback",
                            "type": "(rushMode: boolean, buttonIndex: number, isLastRound: boolean) => void",
                            "isOptional": false
                        },
                        {
                            "name": "info",
                            "type": "sc.InfoBar",
                            "isOptional": false
                        },
                        {
                            "name": "playerDeath",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc": {
            "fields": {
                "ArenaRoundEndButtons": {
                    "type": "ArenaRoundEndButtonsConstructor"
                },
                "ArenaSummary": {
                    "type": "ArenaSummaryConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.ArenaSummary.Entry": {
            "fields": {
                "keyGui": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "valueGui": {
                    "type": "sc.NumberGui",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "Entry",
                    "args": [
                        {
                            "name": "a_",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "b_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "d_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "g_",
                            "type": "unknown",
                            "isOptional": false
                        },
                        {
                            "name": "h_",
                            "type": "unknown",
                            "isOptional": false
                        },
                        {
                            "name": "i_",
                            "type": "boolean",
                            "isOptional": false
                        },
                        {
                            "name": "j_",
                            "type": "boolean",
                            "isOptional": false
                        },
                        {
                            "name": "k_",
                            "type": "unknown",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.SimpleGui"
            ]
        },
        "sc.ArenaSummary": {
            "fields": {
                "Entry": {
                    "type": "ArenaSummary.EntryConstructor",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.arena.gui.arena-rush-gui": {},
    "game.feature.arena.gui.arena-start-gui": {},
    "game.feature.arena.gui.arena-trophy-gui": {},
    "game.feature.arena.plug-in": {},
    "game.feature.auto-control.plug-in": {},
    "game.feature.base.plug-in": {},
    "game.feature.beta.beta-controls": {
        "sc.BetaControls": {
            "fields": {},
            "functions": {
                "onPostUpdate": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "BetaControls",
                    "args": []
                }
            },
            "parents": [
                "ig.GameAddon"
            ]
        },
        "sc": {
            "fields": {
                "BetaControls": {
                    "type": "BetaControlsConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.beta.plug-in": {},
    "game.feature.bgm.plug-in": {},
    "game.feature.bgm.volume-map": {},
    "game.feature.character.abstract-face": {},
    "game.feature.character.char-templates": {},
    "game.feature.character.character": {
        "sc.Character.Data": {
            "fields": {
                "name": {
                    "type": "ig.LangLabel",
                    "isOptional": false
                },
                "size": {
                    "type": "Vec3",
                    "isOptional": false
                },
                "animSheet": {
                    "type": "string",
                    "isOptional": false
                },
                "walkAnimSet": {
                    "type": "{\n          normal: Record<string, string>;\n        }",
                    "isOptional": false
                },
                "shadow": {
                    "type": "number",
                    "isOptional": false
                },
                "configs": {
                    "type": "{\n          normal: {\n            walkAnims: string;\n          };\n        }",
                    "isOptional": false
                },
                "face": {
                    "type": "{\n          subImages: Record<string, string>;\n          width: number;\n          height: number;\n          centerX: number;\n          centerY: number;\n          src: string;\n          parts: Record<\n            string,\n            {\n              srcX: number;\n              srcY: number;\n              width: number;\n              height: number;\n              destX: number;\n              destY: number;\n              subX?: number;\n              subY?: number;\n              img?: string;\n            }\n          >[];\n          expressions: Record<\n            string,\n            {\n              faces: string[][];\n              time?: number;\n              anim?: number[];\n              repeat?: number;\n            }\n          >;\n        }",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.Character.Data.walkAnimSet": {
            "fields": {
                "normal": {
                    "type": "Record<string, string>",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.Character.Data.configs": {
            "fields": {
                "normal": {
                    "type": "{\n            walkAnims: string;\n          }",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.Character.Data.configs.normal": {
            "fields": {
                "walkAnims": {
                    "type": "string",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.Character.Data.face": {
            "fields": {
                "subImages": {
                    "type": "Record<string, string>",
                    "isOptional": false
                },
                "width": {
                    "type": "number",
                    "isOptional": false
                },
                "height": {
                    "type": "number",
                    "isOptional": false
                },
                "centerX": {
                    "type": "number",
                    "isOptional": false
                },
                "centerY": {
                    "type": "number",
                    "isOptional": false
                },
                "src": {
                    "type": "string",
                    "isOptional": false
                },
                "parts": {
                    "type": "Record<\n            string,\n            {\n              srcX: number;\n              srcY: number;\n              width: number;\n              height: number;\n              destX: number;\n              destY: number;\n              subX?: number;\n              subY?: number;\n              img?: string;\n            }\n          >[]",
                    "isOptional": false
                },
                "srcX": {
                    "type": "number",
                    "isOptional": false
                },
                "srcY": {
                    "type": "number",
                    "isOptional": false
                },
                "destX": {
                    "type": "number",
                    "isOptional": false
                },
                "destY": {
                    "type": "number",
                    "isOptional": false
                },
                "subX": {
                    "type": "number",
                    "isOptional": true
                },
                "subY": {
                    "type": "number",
                    "isOptional": true
                },
                "img": {
                    "type": "string",
                    "isOptional": true
                },
                "expressions": {
                    "type": "Record<\n            string,\n            {\n              faces: string[][];\n              time?: number;\n              anim?: number[];\n              repeat?: number;\n            }\n          >",
                    "isOptional": false
                },
                "faces": {
                    "type": "string[][]",
                    "isOptional": false
                },
                "time": {
                    "type": "number",
                    "isOptional": true
                },
                "anim": {
                    "type": "number[]",
                    "isOptional": true
                },
                "repeat": {
                    "type": "number",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.Character": {
            "fields": {
                "cacheType": {
                    "type": "'Character'",
                    "isOptional": false
                },
                "data": {
                    "type": "sc.Character.Data",
                    "isOptional": false
                },
                "name": {
                    "type": "string",
                    "isOptional": false
                },
                "faceImage": {
                    "type": "ig.Image",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "Character",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.JsonLoadable"
            ]
        },
        "sc": {
            "fields": {
                "Character": {
                    "type": "CharacterConstructor"
                },
                "CharacterExpression": {
                    "type": "CharacterExpressionConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.CharacterExpression": {
            "fields": {
                "cacheType": {
                    "type": "'CHAR_EXPRESSION'",
                    "isOptional": false
                },
                "character": {
                    "type": "sc.Character",
                    "isOptional": false
                },
                "expression": {
                    "type": "string",
                    "isOptional": false
                },
                "expressionImages": {
                    "type": "Record<string, ig.Image>",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "CharacterExpression",
                    "args": [
                        {
                            "name": "character",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "expression",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Cacheable"
            ]
        }
    },
    "game.feature.character.plug-in": {},
    "game.feature.combat.combat-assault": {
        "sc": {
            "fields": {
                "ASSAULT_PROJECTILES": {
                    "type": "Record<sc.ELEMENT, sc.BallInfo>"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.combat.combat-target-event": {
        "sc.CombatEnemyEvent.Settings": {
            "fields": {
                "newPos": {
                    "type": "Vec2",
                    "isOptional": true
                },
                "key": {
                    "type": "string",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.CombatEnemyEvent": {
            "fields": {
                "_wm": {
                    "type": "ig.Config",
                    "isOptional": false
                }
            },
            "functions": {
                "check": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "entity",
                            "type": "ig.Entity",
                            "isOptional": false
                        },
                        {
                            "name": "entity2",
                            "type": "ig.Entity",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "sc.CombatEnemyEvent.Settings",
                            "isOptional": false
                        },
                        {
                            "name": "ownSettings",
                            "type": "Record<string, number | string | boolean>",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": []
        },
        "sc.COMBAT_ENEMY_EVENT": {
            "fields": {
                "ENEMY_MSG": {
                    "type": "sc.CombatEnemyEvent",
                    "isOptional": false
                },
                "MAGNET_PULL": {
                    "type": "sc.CombatEnemyEvent",
                    "isOptional": false
                },
                "WAVE_TELEPORT": {
                    "type": "sc.CombatEnemyEvent",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc": {
            "fields": {
                "COMBAT_ENEMY_EVENT": {
                    "type": "COMBAT_ENEMY_EVENT"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.combat.entities.burst-spawner": {},
    "game.feature.combat.entities.combatant-marble": {},
    "game.feature.combat.entities.drop": {
        "sc.DropEntity.Settings": {
            "fields": {
                "dropType": {
                    "type": "sc.DROP_TYPE",
                    "isOptional": false
                },
                "value": {
                    "type": "number",
                    "isOptional": false
                },
                "varIncrease": {
                    "type": "string",
                    "isOptional": true
                },
                "isGeneric": {
                    "type": "boolean",
                    "isOptional": true
                },
                "circleEffect": {
                    "type": "string",
                    "isOptional": true
                },
                "pickupEffect": {
                    "type": "string",
                    "isOptional": true
                },
                "target": {
                    "type": "ig.Entity",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.DropEntity.SpawnGenericDropsSettings": {
            "fields": {
                "align": {
                    "type": "ig.ENTITY_ALIGN",
                    "isOptional": false
                },
                "type": {
                    "type": "sc.DROP_TYPE",
                    "isOptional": false
                },
                "min": {
                    "type": "number",
                    "isOptional": false
                },
                "max": {
                    "type": "number",
                    "isOptional": false
                },
                "varIncrease": {
                    "type": "string",
                    "isOptional": true
                },
                "circleEffect": {
                    "type": "string",
                    "isOptional": true
                },
                "pickupEffect": {
                    "type": "string",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.DropEntity": {
            "fields": {
                "effects": {
                    "type": "ig.EffectSheet",
                    "isOptional": false
                },
                "animSheet": {
                    "type": "ig.AnimationSheet",
                    "isOptional": false
                },
                "timer": {
                    "type": "number",
                    "isOptional": false
                },
                "fallTimer": {
                    "type": "number",
                    "isOptional": false
                },
                "target": {
                    "type": "ig.Entity",
                    "isOptional": false
                },
                "dropType": {
                    "type": "number",
                    "isOptional": false
                },
                "effectValue": {
                    "type": "number",
                    "isOptional": false
                },
                "varIncrease": {
                    "type": "string",
                    "isOptional": true
                },
                "circleEffect": {
                    "type": "string",
                    "isOptional": true
                },
                "pickupEffect": {
                    "type": "string",
                    "isOptional": true
                },
                "isGeneric": {
                    "type": "boolean",
                    "isOptional": true
                }
            },
            "functions": {
                "doGenericPickUp": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "target",
                            "type": "ig.Entity",
                            "isOptional": false
                        }
                    ]
                },
                "doHeal": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "target",
                            "type": "ig.Entity",
                            "isOptional": false
                        }
                    ]
                },
                "followTarget": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "target",
                            "type": "ig.Entity",
                            "isOptional": false
                        }
                    ]
                },
                "findTarget": {
                    "returnType": "void",
                    "args": []
                },
                "onTouchGround": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "DropEntity",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "sc.DropEntity.Settings",
                            "isOptional": false
                        }
                    ]
                },
                "spawnDrops": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "thrower",
                            "type": "ig.Entity",
                            "isOptional": false
                        },
                        {
                            "name": "aligment",
                            "type": "ig.Entity",
                            "isOptional": false
                        },
                        {
                            "name": "dropType",
                            "type": "sc.DROP_TYPE",
                            "isOptional": false
                        },
                        {
                            "name": "rate",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "target",
                            "type": "ig.Entity",
                            "isOptional": false
                        },
                        {
                            "name": "varIncrease",
                            "type": "string",
                            "isOptional": true
                        }
                    ]
                },
                "spawnGenericDrops": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "thrower",
                            "type": "ig.Entity",
                            "isOptional": false
                        },
                        {
                            "name": "aligment",
                            "type": "ig.Entity",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "sc.DropEntity.SpawnGenericDropsSettings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.AnimatedEntity"
            ]
        },
        "sc": {
            "fields": {
                "DropEntity": {
                    "type": "DropEntityConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.combat.entities.enemy-spawner": {
        "ig.ENTITY.EnemySpawner.Entry": {
            "fields": {
                "info": {
                    "type": "sc.EnemyInfo.Settings",
                    "isOptional": false
                },
                "count": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ENTITY.EnemySpawner.Settings": {
            "fields": {
                "size": {
                    "type": "Vec2",
                    "isOptional": true
                },
                "enemyTypes": {
                    "type": "ig.ENTITY.EnemySpawner.Entry[]",
                    "isOptional": true
                },
                "onActiveClear": {
                    "type": "boolean",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": [
                "ig.Entity.Settings"
            ]
        },
        "ig.ENTITY.EnemySpawner.EnemyTypesEntry": {
            "fields": {
                "info": {
                    "type": "sc.EnemyInfo.Settings",
                    "isOptional": false
                },
                "type": {
                    "type": "sc.EnemyType",
                    "isOptional": false
                },
                "count": {
                    "type": "number",
                    "isOptional": false
                },
                "activeEnemies": {
                    "type": "[]",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ENTITY.EnemySpawner": {
            "fields": {
                "enemyTypes": {
                    "type": "ig.ENTITY.EnemySpawner.EnemyTypesEntry[]",
                    "isOptional": false
                },
                "maxEnemies": {
                    "type": "number",
                    "isOptional": false
                },
                "respawnTimer": {
                    "type": "number",
                    "isOptional": false
                },
                "initialSpawn": {
                    "type": "boolean",
                    "isOptional": false
                },
                "effectInitialSpawn": {
                    "type": "boolean",
                    "isOptional": false
                },
                "_wm": {
                    "type": "ig.Config",
                    "isOptional": false
                },
                "onActiveClear": {
                    "type": "boolean",
                    "isOptional": true
                }
            },
            "functions": {
                "_storeState": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "clearState",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "_getVarPrefix": {
                    "returnType": "string",
                    "args": []
                },
                "isCleared": {
                    "returnType": "boolean",
                    "args": []
                },
                "respawnEnemies": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "showEffects",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "killState",
                            "type": "number[]",
                            "isOptional": true
                        }
                    ]
                },
                "spawnEnemy": {
                    "returnType": "ig.ENTITY.Enemy",
                    "args": [
                        {
                            "name": "entry",
                            "type": "ig.ENTITY.EnemySpawner.EnemyTypesEntry",
                            "isOptional": false
                        },
                        {
                            "name": "showEffects",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "init": {
                    "returnType": "EnemySpawner",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "ig.ENTITY.EnemySpawner.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Entity"
            ]
        },
        "ig.ENTITY": {
            "fields": {
                "EnemySpawner": {
                    "type": "EnemySpawnerConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.combat.entities.food-icon": {
        "sc": {
            "fields": {
                "FOOD_SPRITE": {
                    "type": "Record<string, number>"
                },
                "FoodIconEntity": {
                    "type": "FoodIconEntityConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.FoodIconEntity.Settings": {
            "fields": {
                "icon": {
                    "type": "number",
                    "isOptional": false
                },
                "combatant": {
                    "type": "ig.ENTITY.Combatant",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": [
                "ig.Entity.Settings"
            ]
        },
        "sc.FoodIconEntity": {
            "fields": {
                "state": {
                    "type": "sc.FOOD_ICON_STATE",
                    "isOptional": false
                },
                "sprites": {
                    "type": "ig.CubeSprite[]",
                    "isOptional": false
                },
                "icon": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "setState": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "state",
                            "type": "sc.FOOD_ICON_STATE",
                            "isOptional": false
                        },
                        {
                            "name": "offset",
                            "type": "Nullable<Vec2>",
                            "isOptional": true
                        }
                    ]
                },
                "init": {
                    "returnType": "FoodIconEntity",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "FoodIconEntity.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Entity"
            ]
        }
    },
    "game.feature.combat.entities.item-drop": {
        "sc.ItemDropType": {
            "fields": {
                "preCollect": {
                    "type": "Nullable<boolean>",
                    "isOptional": true
                },
                "fly": {
                    "type": "Nullable<boolean>",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.ITEM_DROP_TYPE": {
            "fields": {
                "ENEMY": {
                    "type": "sc.ItemDropType",
                    "isOptional": false
                },
                "PROP": {
                    "type": "sc.ItemDropType",
                    "isOptional": false
                },
                "EVENT_PROP": {
                    "type": "sc.ItemDropType",
                    "isOptional": false
                },
                "CHEST": {
                    "type": "sc.ItemDropType",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc": {
            "fields": {
                "ITEM_DROP_TYPE": {
                    "type": "ITEM_DROP_TYPE"
                },
                "ItemDropEntity": {
                    "type": "ItemDropEntityConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.ItemDropEntity.Settings": {
            "fields": {
                "dropType": {
                    "type": "sc.ITEM_DROP_TYPE",
                    "isOptional": false
                },
                "vel": {
                    "type": "Vec2",
                    "isOptional": true
                },
                "target": {
                    "type": "ig.Entity",
                    "isOptional": false
                },
                "item": {
                    "type": "sc.ItemID",
                    "isOptional": false
                },
                "amount": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.ItemDropEntity": {
            "fields": {
                "gfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "effects": {
                    "type": "ig.EffectSheet",
                    "isOptional": false
                },
                "sounds": {
                    "type": "Record<\n        | 'start'\n        | 'catch'\n        | 'catchLow'\n        | 'catchNormal'\n        | 'catchRate'\n        | 'catchLegendary'\n        | 'catchUnique',\n        ig.Sound\n      >",
                    "isOptional": false
                },
                "flying": {
                    "type": "boolean",
                    "isOptional": false
                },
                "target": {
                    "type": "ig.Entity",
                    "isOptional": false
                },
                "timer": {
                    "type": "number",
                    "isOptional": false
                },
                "startPos": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "startZPos": {
                    "type": "number",
                    "isOptional": false
                },
                "maxTime": {
                    "type": "number",
                    "isOptional": false
                },
                "maxHeight": {
                    "type": "number",
                    "isOptional": false
                },
                "item": {
                    "type": "number",
                    "isOptional": false
                },
                "amount": {
                    "type": "number",
                    "isOptional": false
                },
                "collected": {
                    "type": "boolean",
                    "isOptional": false
                },
                "dropType": {
                    "type": "sc.ITEM_DROP_TYPE",
                    "isOptional": false
                },
                "fromCombatant": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "collectItem": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "count",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "onSave": {
                    "returnType": "void",
                    "args": []
                },
                "update": {
                    "returnType": "void",
                    "args": []
                },
                "onTouchGround": {
                    "returnType": "void",
                    "args": []
                },
                "startRegularFly": {
                    "returnType": "void",
                    "args": []
                },
                "startFlying": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "maxTime",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "maxHeight",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "ItemDropEntity",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "sc.ItemDropEntity.Settings",
                            "isOptional": false
                        }
                    ]
                },
                "spawnDrops": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "entity",
                            "type": "ig.Entity",
                            "isOptional": false
                        },
                        {
                            "name": "align",
                            "type": "ig.ENTITY_ALIGN",
                            "isOptional": false
                        },
                        {
                            "name": "target",
                            "type": "ig.Entity",
                            "isOptional": false
                        },
                        {
                            "name": "item",
                            "type": "sc.ItemID",
                            "isOptional": false
                        },
                        {
                            "name": "amount",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "dropType",
                            "type": "sc.ItemDropType",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.AnimatedEntity"
            ]
        }
    },
    "game.feature.combat.entities.respawn-blocker": {},
    "game.feature.combat.entities.stone": {},
    "game.feature.combat.gui.enemy-display-gui": {
        "sc.EnemyDisplayGui": {
            "fields": {},
            "functions": {
                "init": {
                    "returnType": "EnemyDisplayGui",
                    "args": [
                        {
                            "name": "enemyName",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "skipIfLoaded",
                            "type": "Nullable<boolean>",
                            "isOptional": true
                        },
                        {
                            "name": "anim",
                            "type": "Nullable<string>",
                            "isOptional": true
                        },
                        {
                            "name": "callback",
                            "type": "Nullable<sc.EnemyDisplayGui.LoadedCallback>",
                            "isOptional": true
                        },
                        {
                            "name": "random",
                            "type": "Nullable<boolean>",
                            "isOptional": true
                        },
                        {
                            "name": "boosted",
                            "type": "Nullable<boolean>",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc": {
            "fields": {
                "EnemyDisplayGui": {
                    "type": "EnemyDisplayGuiConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.combat.gui.hp-bar-boss": {
        "sc.BigGenericBar": {
            "fields": {},
            "functions": {},
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc": {
            "fields": {
                "BigGenericBar": {
                    "type": "BigGenericBarConstructor"
                },
                "BigHpBar": {
                    "type": "BigHpBarConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.BigHpBar": {
            "fields": {},
            "functions": {},
            "parents": [
                "sc.BigGenericBar"
            ]
        },
        "sc.SUB_HP_EDITOR.BOSS": {
            "fields": {
                "labelGui": {
                    "type": "sc.TextGui",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "BOSS",
                    "args": [
                        {
                            "name": "a_",
                            "type": "ig.ENTITY.Enemy",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "sc.BigHpBar"
            ]
        },
        "sc.SUB_HP_EDITOR": {
            "fields": {
                "BOSS": {
                    "type": "BOSS_CONSTRUCTOR"
                },
                "PVP": {
                    "type": "PVP_CONSTRUCTOR"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.SUB_HP_EDITOR.PVP": {
            "fields": {},
            "functions": {
                "init": {
                    "returnType": "PVP",
                    "args": [
                        {
                            "name": "a_",
                            "type": "ig.ENTITY.Enemy",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "sc.BigHpBar"
            ]
        }
    },
    "game.feature.combat.gui.pvp-gui": {
        "sc.PvpRoundGui": {
            "fields": {
                "timer": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "remove": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "PvpRoundGui",
                    "args": [
                        {
                            "name": "roundNumber",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "autoContinue",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc": {
            "fields": {
                "PvpRoundGui": {
                    "type": "PvpRoundGuiConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.combat.gui.status-bar": {
        "sc.StatusBarEntry": {
            "fields": {
                "icon": {
                    "type": "number",
                    "isOptional": false
                },
                "init": {
                    "type": "Nullable<unknown>",
                    "isOptional": true
                },
                "barY": {
                    "type": "number",
                    "isOptional": false
                },
                "half": {
                    "type": "boolean",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "sc": {
            "fields": {
                "STATUS_BAR_ENTRY": {
                    "type": "Record<string, StatusBarEntry> &\n      Record<'BREAK' | 'BURN' | 'CHILL' | 'WEAK' | 'BRITTLE', StatusBarEntry>"
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.GUI.StatusBar": {
            "fields": {
                "barIconTiles": {
                    "type": "ig.TileSheet",
                    "isOptional": false
                },
                "target": {
                    "type": "ig.ENTITY.Combatant",
                    "isOptional": false
                },
                "replaceTarget": {
                    "type": "ig.ENTITY.Combatant",
                    "isOptional": true
                },
                "currentHp": {
                    "type": "number",
                    "isOptional": false
                },
                "targetHp": {
                    "type": "number",
                    "isOptional": false
                },
                "timer": {
                    "type": "number",
                    "isOptional": false
                },
                "largeTimer": {
                    "type": "number",
                    "isOptional": false
                },
                "subHpHandler": {
                    "type": "sc.BigHpBar",
                    "isOptional": true
                },
                "subHpType": {
                    "type": "'PVP' | 'BOSS'",
                    "isOptional": false
                },
                "statusEntries": {
                    "type": "Record<\n        keyof typeof sc.STATUS_BAR_ENTRY,\n        {\n          value: number;\n          timer: number;\n          stick?: boolean;\n        }\n      >",
                    "isOptional": false
                },
                "value": {
                    "type": "number",
                    "isOptional": false
                },
                "stick": {
                    "type": "boolean",
                    "isOptional": true
                },
                "statusDisplayOrder": {
                    "type": "(keyof typeof sc.STATUS_BAR_ENTRY)[]",
                    "isOptional": false
                }
            },
            "functions": {
                "showHpBar": {
                    "returnType": "boolean",
                    "args": []
                },
                "initWithParams": {
                    "returnType": "void",
                    "args": []
                },
                "updateSubHpHandler": {
                    "returnType": "void",
                    "args": []
                },
                "initStatusEntries": {
                    "returnType": "void",
                    "args": []
                },
                "_shiftFrontStatusDisplayOrder": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "statusName",
                            "type": "keyof typeof sc.STATUS_BAR_ENTRY",
                            "isOptional": false
                        },
                        {
                            "name": "ignoreIfStatusNameMissing",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "setStatusEntry": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "statusName",
                            "type": "keyof typeof sc.STATUS_BAR_ENTRY",
                            "isOptional": false
                        },
                        {
                            "name": "value",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "updateStatusEntry": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "statusName",
                            "type": "keyof typeof sc.STATUS_BAR_ENTRY",
                            "isOptional": false
                        },
                        {
                            "name": "value",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "setReplaceTarget": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "combatant",
                            "type": "ig.ENTITY.Combatant",
                            "isOptional": false
                        }
                    ]
                },
                "setStatusEntryStick": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "statusName",
                            "type": "keyof typeof sc.STATUS_BAR_ENTRY",
                            "isOptional": false
                        },
                        {
                            "name": "shiftDisplayOrder",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "clearStatusEntry": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "statusName",
                            "type": "keyof typeof sc.STATUS_BAR_ENTRY",
                            "isOptional": false
                        }
                    ]
                },
                "clearAllStatusEntries": {
                    "returnType": "void",
                    "args": []
                },
                "setHp": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "hp",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "instant",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "_updateStatusEntry": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "statusName",
                            "type": "keyof typeof sc.STATUS_BAR_ENTRY",
                            "isOptional": false
                        }
                    ]
                },
                "_drawHpBar": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "renderer",
                            "type": "ig.GuiRenderer",
                            "isOptional": false
                        }
                    ]
                },
                "drawStatusEntry": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "renderer",
                            "type": "ig.GuiRenderer",
                            "isOptional": false
                        },
                        {
                            "name": "pivotX",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "pivotY",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "statusName",
                            "type": "keyof typeof sc.STATUS_BAR_ENTRY",
                            "isOptional": false
                        }
                    ]
                },
                "remove": {
                    "returnType": "void",
                    "args": []
                },
                "forceRemove": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "StatusBar",
                    "args": [
                        {
                            "name": "combatant",
                            "type": "ig.ENTITY.Combatant",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase",
                "sc.Model.Observer"
            ]
        },
        "ig.GUI": {
            "fields": {
                "StatusBar": {
                    "type": "StatusBarConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.combat.model.combat-status": {
        "sc.CombatStatusBase": {
            "fields": {
                "id": {
                    "type": "number",
                    "isOptional": false
                },
                "statusBarEntry": {
                    "type": "string",
                    "isOptional": false
                },
                "offenseModifier": {
                    "type": "string",
                    "isOptional": false
                },
                "defenseModifier": {
                    "type": "keyof typeof sc.MODIFIERS",
                    "isOptional": false
                },
                "effects": {
                    "type": "ig.EffectSheet",
                    "isOptional": false
                },
                "duration": {
                    "type": "number",
                    "isOptional": false
                },
                "charge": {
                    "type": "number",
                    "isOptional": false
                },
                "active": {
                    "type": "boolean",
                    "isOptional": false
                },
                "effectiveness": {
                    "type": "number",
                    "isOptional": false
                },
                "label": {
                    "type": "string",
                    "isOptional": true
                }
            },
            "functions": {
                "getInflictValue": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "value",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "defenderParams",
                            "type": "sc.CombatParams",
                            "isOptional": false
                        },
                        {
                            "name": "attackInfo",
                            "type": "sc.AttackInfo",
                            "isOptional": false
                        },
                        {
                            "name": "shieldResult",
                            "type": "sc.SHIELD_RESULT",
                            "isOptional": false
                        }
                    ]
                },
                "_getOffensiveFactor": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "attackInfo",
                            "type": "sc.AttackInfo",
                            "isOptional": false
                        }
                    ]
                },
                "getEffectiveness": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "params",
                            "type": "sc.CombatParams",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "sc": {
            "fields": {
                "CombatStatusBase": {
                    "type": "CombatStatusBaseConstructor"
                },
                "COMBAT_STATUS": {
                    "type": "sc.CombatStatusBase[]"
                },
                "BurnStatus": {
                    "type": "BurnStatusConstructor"
                },
                "ChillStatus": {
                    "type": "ChillStatusConstructor"
                },
                "JoltStatus": {
                    "type": "JoltStatusConstructor"
                },
                "MarkStatus": {
                    "type": "MarkStatusConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.BurnStatus": {
            "fields": {
                "burnTimer": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": [
                "sc.CombatStatusBase"
            ]
        },
        "sc.ChillStatus": {
            "fields": {},
            "functions": {},
            "parents": [
                "sc.CombatStatusBase"
            ]
        },
        "sc.JoltStatus": {
            "fields": {
                "shockTimer": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": [
                "sc.CombatStatusBase"
            ]
        },
        "sc.MarkStatus": {
            "fields": {},
            "functions": {},
            "parents": [
                "sc.CombatStatusBase"
            ]
        }
    },
    "game.feature.combat.model.enemy-annotation": {
        "sc.EnemyAnno": {
            "fields": {},
            "functions": {
                "doesRandomlyUnderstand": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "enemy",
                            "type": "ig.ENTITY.Enemy",
                            "isOptional": false
                        },
                        {
                            "name": "player",
                            "type": "ig.ENTITY.Player",
                            "isOptional": false
                        },
                        {
                            "name": "multiplier",
                            "type": "number",
                            "isOptional": true
                        }
                    ]
                },
                "getUnderstandFactor": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "enemy",
                            "type": "ig.ENTITY.Enemy",
                            "isOptional": false
                        },
                        {
                            "name": "player",
                            "type": "ig.ENTITY.Player",
                            "isOptional": false
                        },
                        {
                            "name": "multiplier",
                            "type": "number",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": []
        },
        "sc": {
            "fields": {
                "EnemyAnno": {
                    "type": "EnemyAnno"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.combat.model.enemy-booster": {
        "sc": {
            "fields": {
                "MIN_BOOSTER_LEVEL": {
                    "type": "number"
                },
                "EnemyBooster": {
                    "type": "EnemyBoosterConstructor"
                },
                "enemyBooster": {
                    "type": "EnemyBooster"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.EnemyBooster": {
            "fields": {
                "boosted": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "updateBoosterState": {
                    "returnType": "void",
                    "args": []
                },
                "updateEnemyBoostState": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "enemy",
                            "type": "ig.ENTITY.Enemy",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "EnemyBooster",
                    "args": []
                }
            },
            "parents": [
                "ig.GameAddon",
                "sc.Model.Observer"
            ]
        }
    },
    "game.feature.combat.model.enemy-collab": {
        "sc.EnemyCollab.ParticipantSettings": {
            "fields": {
                "collabKey": {
                    "type": "string",
                    "isOptional": false
                },
                "label": {
                    "type": "string",
                    "isOptional": false
                },
                "min": {
                    "type": "number",
                    "isOptional": false
                },
                "max": {
                    "type": "number",
                    "isOptional": true
                },
                "acceptStunned": {
                    "type": "boolean",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.EnemyCollab.CollabSettings": {
            "fields": {
                "breakType": {
                    "type": "keyof typeof sc.ENEMY_COLLAB_BREAK",
                    "isOptional": false
                },
                "initiatorLabel": {
                    "type": "string",
                    "isOptional": false
                },
                "partiipants": {
                    "type": "sc.EnemyCollab.ParticipantSettings[]",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.EnemyCollab.CollabAttribs": {
            "fields": {
                "label": {
                    "type": "string",
                    "isOptional": false
                },
                "collabKey": {
                    "type": "string",
                    "isOptional": false
                },
                "point": {
                    "type": "Nullable<Vec3>",
                    "isOptional": false
                },
                "entity": {
                    "type": "Nullable<ig.Entity>",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.EnemyCollab": {
            "fields": {
                "initiator": {
                    "type": "ig.ENTITY.Combatant",
                    "isOptional": false
                },
                "participants": {
                    "type": "ig.ENTITY.Enemy[]",
                    "isOptional": false
                },
                "vars": {
                    "type": "Record<string, number>",
                    "isOptional": false
                },
                "breakType": {
                    "type": "sc.ENEMY_COLLAB_BREAK",
                    "isOptional": false
                },
                "success": {
                    "type": "boolean",
                    "isOptional": false
                },
                "attached": {
                    "type": "sc.CombatProxyEntity[]",
                    "isOptional": false
                }
            },
            "functions": {
                "getVar": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "setVar": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "value",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "addCollabAttached": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "proxy",
                            "type": "sc.CombatProxyEntity",
                            "isOptional": false
                        }
                    ]
                },
                "removeCollabAttached": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "proxy",
                            "type": "sc.CombatProxyEntity",
                            "isOptional": false
                        }
                    ]
                },
                "setParticipantsEntity": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "entity",
                            "type": "ig.Entity",
                            "isOptional": false
                        },
                        {
                            "name": "labels",
                            "type": "string[]",
                            "isOptional": true
                        }
                    ]
                },
                "setParticipantsPoint": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "point",
                            "type": "Vec3",
                            "isOptional": false
                        },
                        {
                            "name": "labels",
                            "type": "string[]",
                            "isOptional": true
                        }
                    ]
                },
                "getLabeledParticipant": {
                    "returnType": "void | sc.CombatProxyEntity",
                    "args": [
                        {
                            "name": "label",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "getLabeledParticipants": {
                    "returnType": "sc.CombatProxyEntity[]",
                    "args": [
                        {
                            "name": "labels",
                            "type": "string[]",
                            "isOptional": true
                        }
                    ]
                },
                "start": {
                    "returnType": "void",
                    "args": []
                },
                "doReaction": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "collabKey",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "labels",
                            "type": "string[]",
                            "isOptional": false
                        }
                    ]
                },
                "getCenterPos": {
                    "returnType": "Vec3",
                    "args": [
                        {
                            "name": "res",
                            "type": "Vec3",
                            "isOptional": false
                        },
                        {
                            "name": "aligment",
                            "type": "ig.ENTITY_ALIGN",
                            "isOptional": false
                        },
                        {
                            "name": "labels",
                            "type": "string[]",
                            "isOptional": true
                        }
                    ]
                },
                "addParticipant": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "participant",
                            "type": "ig.ENTITY.Enemy",
                            "isOptional": false
                        },
                        {
                            "name": "collabKey",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "label",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "removeParticipant": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "participant",
                            "type": "ig.ENTITY.Enemy",
                            "isOptional": false
                        }
                    ]
                },
                "cancel": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "EnemyCollab",
                    "args": [
                        {
                            "name": "initiator",
                            "type": "ig.ENTITY.Combatant",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "sc.EnemyCollab.CollabSettings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class",
                "ig.Vars.Accessor",
                "sc.Combat.ActionAttached"
            ]
        },
        "sc": {
            "fields": {
                "EnemyCollab": {
                    "type": "EnemyCollabConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.combat.model.enemy-level-scaling": {},
    "game.feature.combat.model.enemy-tracker": {
        "sc.EnemyTracker": {
            "fields": {},
            "functions": {
                "onConditionEval": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "enemy",
                            "type": "ig.ENTITY.Enemy",
                            "isOptional": false
                        },
                        {
                            "name": "random",
                            "type": "boolean",
                            "isOptional": false
                        },
                        {
                            "name": "hitProperties",
                            "type": "ig.ENTITY.Combatant.HitProperties",
                            "isOptional": false
                        },
                        {
                            "name": "attackInfo",
                            "type": "sc.AttackInfo",
                            "isOptional": false
                        }
                    ]
                },
                "onPerformed": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "enemy",
                            "type": "ig.ENTITY.Enemy",
                            "isOptional": false
                        },
                        {
                            "name": "noReset",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "reset": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "enemy",
                            "type": "ig.ENTITY.Enemy",
                            "isOptional": false
                        },
                        {
                            "name": "value",
                            "type": "number",
                            "isOptional": true
                        }
                    ]
                },
                "update": {
                    "returnType": "void",
                    "args": []
                },
                "onStateChange": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "enemy",
                            "type": "ig.ENTITY.Enemy",
                            "isOptional": false
                        }
                    ]
                },
                "onReactionActivate": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "enemy",
                            "type": "ig.ENTITY.Enemy",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "sc.ENEMY_TRACKER.TIME.Settings": {
            "fields": {
                "target": {
                    "type": "number",
                    "isOptional": false
                },
                "initRandom": {
                    "type": "number",
                    "isOptional": false
                },
                "resetRandom": {
                    "type": "number",
                    "isOptional": false
                },
                "noStateReset": {
                    "type": "boolean",
                    "isOptional": false
                },
                "hpBreakFactor": {
                    "type": "number[]",
                    "isOptional": true
                },
                "noAssist": {
                    "type": "boolean",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.ENEMY_TRACKER.TIME": {
            "fields": {
                "target": {
                    "type": "number",
                    "isOptional": false
                },
                "current": {
                    "type": "number",
                    "isOptional": false
                },
                "initRandom": {
                    "type": "number",
                    "isOptional": false
                },
                "resetRandom": {
                    "type": "number",
                    "isOptional": false
                },
                "noStateReset": {
                    "type": "boolean",
                    "isOptional": false
                },
                "hpBreakFactor": {
                    "type": "number[]",
                    "isOptional": false
                },
                "_wm": {
                    "type": "ig.Config",
                    "isOptional": false
                }
            },
            "functions": {
                "update": {
                    "returnType": "void",
                    "args": []
                },
                "onStateChange": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "enemy",
                            "type": "ig.ENTITY.Enemy",
                            "isOptional": false
                        }
                    ]
                },
                "_initTimer": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "enemy",
                            "type": "ig.ENTITY.Enemy",
                            "isOptional": false
                        }
                    ]
                },
                "_getTarget": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "enemy",
                            "type": "ig.ENTITY.Enemy",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "TIME",
                    "args": [
                        {
                            "name": "enemy",
                            "type": "ig.ENTITY.Enemy",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "sc.ENEMY_TRACKER.TIME.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "sc.EnemyTracker"
            ]
        },
        "sc.ENEMY_TRACKER.HIT.Settings": {
            "fields": {
                "target": {
                    "type": "number",
                    "isOptional": false
                },
                "hpBreakTargets": {
                    "type": "number[]",
                    "isOptional": true
                },
                "scaleDmgFactor": {
                    "type": "boolean",
                    "isOptional": false
                },
                "limitOffScale": {
                    "type": "number",
                    "isOptional": true
                },
                "scaleElement": {
                    "type": "boolean",
                    "isOptional": false
                },
                "noStateReset": {
                    "type": "boolean",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.ENEMY_TRACKER.HIT": {
            "fields": {
                "target": {
                    "type": "number",
                    "isOptional": false
                },
                "current": {
                    "type": "number",
                    "isOptional": false
                },
                "notStateInit": {
                    "type": "boolean",
                    "isOptional": false
                },
                "hpBreakTargets": {
                    "type": "number[]",
                    "isOptional": true
                },
                "noStateReset": {
                    "type": "boolean",
                    "isOptional": false
                },
                "_wm": {
                    "type": "ig.Config",
                    "isOptional": false
                }
            },
            "functions": {
                "onReactionActivate": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "enemy",
                            "type": "ig.ENTITY.Enemy",
                            "isOptional": false
                        }
                    ]
                },
                "_getTarget": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "enemy",
                            "type": "ig.ENTITY.Enemy",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "HIT",
                    "args": [
                        {
                            "name": "enemy",
                            "type": "ig.ENTITY.Enemy",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "sc.ENEMY_TRACKER.HIT.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "sc.EnemyTracker"
            ]
        },
        "sc.ENEMY_TRACKER.HP.Settings": {
            "fields": {
                "target": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.ENEMY_TRACKER.HP": {
            "fields": {
                "target": {
                    "type": "number",
                    "isOptional": false
                },
                "hpReduced": {
                    "type": "number",
                    "isOptional": false
                },
                "notStateInit": {
                    "type": "boolean",
                    "isOptional": false
                },
                "_wm": {
                    "type": "ig.Config",
                    "isOptional": false
                }
            },
            "functions": {
                "onStateChange": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "enemy",
                            "type": "ig.ENTITY.Enemy",
                            "isOptional": false
                        }
                    ]
                },
                "onReactionActivate": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "enemy",
                            "type": "ig.ENTITY.Enemy",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "HP",
                    "args": [
                        {
                            "name": "enemy",
                            "type": "ig.ENTITY.Enemy",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "sc.ENEMY_TRACKER.HP.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "sc.EnemyTracker"
            ]
        },
        "sc.ENEMY_TRACKER": {
            "fields": {
                "TIME": {
                    "type": "sc.ENEMY_TRACKER.TIMEConstructor",
                    "isOptional": false
                },
                "HIT": {
                    "type": "sc.ENEMY_TRACKER.HITConstructor",
                    "isOptional": false
                },
                "HP": {
                    "type": "sc.ENEMY_TRACKER.HPConstructor",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc": {
            "fields": {
                "ENEMY_TRACKER": {
                    "type": "ENEMY_TRACKER"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.combat.plug-in": {},
    "game.feature.combat.pvp": {
        "sc.PvpModel": {
            "fields": {
                "state": {
                    "type": "number",
                    "isOptional": false
                },
                "round": {
                    "type": "number",
                    "isOptional": false
                },
                "winPoints": {
                    "type": "number",
                    "isOptional": false
                },
                "points": {
                    "type": "{ [key in sc.COMBATANT_PARTY]?: number }",
                    "isOptional": false
                },
                "enemies": {
                    "type": "ig.ENTITY.Enemy[]",
                    "isOptional": false
                },
                "lastWinParty": {
                    "type": "sc.COMBATANT_PARTY",
                    "isOptional": false
                },
                "blocking": {
                    "type": "boolean",
                    "isOptional": false
                },
                "roundGui": {
                    "type": "sc.PvpRoundGui",
                    "isOptional": false
                }
            },
            "functions": {
                "start": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "winPoints",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "enemies",
                            "type": "ig.ENTITY.Enemy[]",
                            "isOptional": false
                        }
                    ]
                },
                "getDmgFactor": {
                    "returnType": "number",
                    "args": []
                },
                "isActive": {
                    "returnType": "boolean",
                    "args": []
                },
                "isKillHit": {
                    "returnType": "boolean",
                    "args": []
                },
                "isBrake": {
                    "returnType": "boolean",
                    "args": []
                },
                "isFinished": {
                    "returnType": "boolean",
                    "args": []
                },
                "isOver": {
                    "returnType": "boolean",
                    "args": []
                },
                "isCombatantInPvP": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "comtatant",
                            "type": "ig.ENTITY.Combatant",
                            "isOptional": false
                        }
                    ]
                },
                "onPvpCombatantDefeat": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "comtatant",
                            "type": "ig.ENTITY.Combatant",
                            "isOptional": false
                        }
                    ]
                },
                "releaseBlocking": {
                    "returnType": "void",
                    "args": []
                },
                "showKO": {
                    "returnType": "sc.DramaticEffect",
                    "args": [
                        {
                            "name": "party",
                            "type": "sc.COMBATANT_PARTY",
                            "isOptional": false
                        }
                    ]
                },
                "onPostKO": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "party",
                            "type": "sc.COMBATANT_PARTY",
                            "isOptional": false
                        }
                    ]
                },
                "startNextRound": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "autoContinue",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "finalizeRoundStart": {
                    "returnType": "void",
                    "args": []
                },
                "stop": {
                    "returnType": "void",
                    "args": []
                },
                "onPostUpdate": {
                    "returnType": "void",
                    "args": []
                },
                "onReset": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "PvpModel",
                    "args": []
                }
            },
            "parents": [
                "ig.GameAddon",
                "sc.Model",
                "ig.Vars.Accessor"
            ]
        },
        "sc": {
            "fields": {
                "PvpModel": {
                    "type": "PvpModelConstructor"
                },
                "pvp": {
                    "type": "sc.PvpModel"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.combat.stat-change": {
        "sc": {
            "fields": {
                "STAT_CHANGE_ICONS": {
                    "type": "Record<string, [number, number]>"
                },
                "STAT_CHANGE_ICONS_LARGE": {
                    "type": "Record<string, [number, number]>"
                },
                "StatChange": {
                    "type": "StatChangeConstructor"
                },
                "ItemBuff": {
                    "type": "ItemBuffConstructor"
                },
                "ActionBuff": {
                    "type": "ActionBuffConstructor"
                },
                "STAT_PARAM_TYPE": {
                    "type": "Record<string, StatParamType>"
                },
                "STAT_CHANGE_SETTINGS": {
                    "type": "Record<string, StatChangeSettings>"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.StatChange.Params": {
            "fields": {
                "hp": {
                    "type": "number",
                    "isOptional": false
                },
                "attack": {
                    "type": "number",
                    "isOptional": false
                },
                "defense": {
                    "type": "number",
                    "isOptional": false
                },
                "focus": {
                    "type": "number",
                    "isOptional": false
                },
                "elemFactor": {
                    "type": "number[]",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.StatChange": {
            "fields": {
                "params": {
                    "type": "StatChange.Params",
                    "isOptional": false
                },
                "modifiers": {
                    "type": "sc.ModifierList",
                    "isOptional": false
                },
                "iconString": {
                    "type": "string",
                    "isOptional": false
                },
                "hasTimer": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "clear": {
                    "returnType": "void",
                    "args": []
                },
                "getTimeFactor": {
                    "returnType": "number",
                    "args": []
                },
                "update": {
                    "returnType": "boolean",
                    "args": []
                },
                "init": {
                    "returnType": "StatChange",
                    "args": [
                        {
                            "name": "stats",
                            "type": "sc.StatChange.StatName[]",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "sc.ItemBuff": {
            "fields": {
                "itemID": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "ItemBuff",
                    "args": [
                        {
                            "name": "stats",
                            "type": "sc.StatChange.StatName[]",
                            "isOptional": false
                        },
                        {
                            "name": "duration",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "itemId",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "sc.StatChange"
            ]
        },
        "sc.ActionBuff": {
            "fields": {
                "active": {
                    "type": "boolean",
                    "isOptional": false
                },
                "name": {
                    "type": "string",
                    "isOptional": false
                },
                "hacked": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "reset": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "time",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "ActionBuff",
                    "args": [
                        {
                            "name": "stats",
                            "type": "sc.StatChange.StatName[]",
                            "isOptional": false
                        },
                        {
                            "name": "name",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "hacked",
                            "type": "Nullable<boolean>",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": [
                "sc.StatChange",
                "ig.Entity.Attachable",
                "sc.Combat.ActionAttached"
            ]
        },
        "sc.StatParamType": {
            "fields": {
                "key": {
                    "type": "string",
                    "isOptional": false
                },
                "index": {
                    "type": "number",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.StatChangeSettings": {
            "fields": {
                "change": {
                    "type": "sc.STAT_CHANGE_TYPE",
                    "isOptional": false
                },
                "type": {
                    "type": "sc.StatParamType",
                    "isOptional": false
                },
                "value": {
                    "type": "number",
                    "isOptional": false
                },
                "icon": {
                    "type": "string",
                    "isOptional": false
                },
                "grade": {
                    "type": "sc.StatChangeSettings.Grade",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.common-event.plug-in": {},
    "game.feature.control.control": {
        "ig": {
            "fields": {
                "canLeavePauseMenu": {
                    "type": "boolean"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.GlobalInput": {
            "fields": {},
            "functions": {
                "onPreUpdate": {
                    "returnType": "void",
                    "args": []
                },
                "onPostUpdate": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "GlobalInput",
                    "args": []
                }
            },
            "parents": [
                "ig.GameAddon"
            ]
        },
        "sc": {
            "fields": {
                "GlobalInput": {
                    "type": "GlobalInputConstructor"
                },
                "Control": {
                    "type": "ControlConstructor"
                },
                "control": {
                    "type": "Control"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.Control": {
            "fields": {
                "autoControl": {
                    "type": "sc.AutoControl",
                    "isOptional": false
                }
            },
            "functions": {
                "_getAttackButton": {
                    "returnType": "ig.BUTTONS",
                    "args": []
                },
                "_getSpecialButton": {
                    "returnType": "ig.BUTTONS",
                    "args": []
                },
                "_getDashButton": {
                    "returnType": "ig.BUTTONS",
                    "args": []
                },
                "_getQuickMenuButton": {
                    "returnType": "ig.BUTTONS",
                    "args": []
                },
                "_getMeleeButton": {
                    "returnType": "ig.BUTTONS",
                    "args": []
                },
                "setAutoControl": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "autoControl",
                            "type": "sc.AutoControl",
                            "isOptional": false
                        }
                    ]
                },
                "getMouseX": {
                    "returnType": "number",
                    "args": []
                },
                "getMouseY": {
                    "returnType": "number",
                    "args": []
                },
                "getGuiClickPre": {
                    "returnType": "boolean",
                    "args": []
                },
                "getGuiClick": {
                    "returnType": "boolean",
                    "args": []
                },
                "getGuiPressed": {
                    "returnType": "boolean",
                    "args": []
                },
                "getGuiHold": {
                    "returnType": "boolean",
                    "args": []
                },
                "getAxesValue": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "axes",
                            "type": "ig.AXES",
                            "isOptional": false
                        }
                    ]
                },
                "isLeftStickDown": {
                    "returnType": "boolean",
                    "args": []
                },
                "isRightStickDown": {
                    "returnType": "boolean",
                    "args": []
                },
                "updateRepeater": {
                    "returnType": "boolean",
                    "args": []
                },
                "aimStart": {
                    "returnType": "boolean",
                    "args": []
                },
                "aiming": {
                    "returnType": "boolean",
                    "args": []
                },
                "attacking": {
                    "returnType": "boolean",
                    "args": []
                },
                "fullScreenAttacking": {
                    "returnType": "boolean",
                    "args": []
                },
                "chargeThrowSwap": {
                    "returnType": "boolean",
                    "args": []
                },
                "chargeAttackSwap": {
                    "returnType": "boolean",
                    "args": []
                },
                "thrown": {
                    "returnType": "boolean",
                    "args": []
                },
                "melee": {
                    "returnType": "boolean",
                    "args": []
                },
                "charge": {
                    "returnType": "boolean",
                    "args": []
                },
                "autoThrown": {
                    "returnType": "boolean",
                    "args": []
                },
                "dashing": {
                    "returnType": "boolean",
                    "args": []
                },
                "dashHold": {
                    "returnType": "boolean",
                    "args": []
                },
                "guarding": {
                    "returnType": "boolean",
                    "args": []
                },
                "moveDir": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "destVec",
                            "type": "Vec2",
                            "isOptional": false
                        },
                        {
                            "name": "lastRelativeVel",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "ignoreLastDir",
                            "type": "Nullable<boolean>",
                            "isOptional": true
                        }
                    ]
                },
                "pause": {
                    "returnType": "boolean",
                    "args": []
                },
                "menu": {
                    "returnType": "boolean",
                    "args": []
                },
                "quickmenu": {
                    "returnType": "boolean",
                    "args": []
                },
                "quickmenuPress": {
                    "returnType": "boolean",
                    "args": []
                },
                "skipCutscene": {
                    "returnType": "boolean",
                    "args": []
                },
                "menuConfirm": {
                    "returnType": "boolean",
                    "args": []
                },
                "menuBack": {
                    "returnType": "boolean",
                    "args": []
                },
                "menuHotkeyHelp": {
                    "returnType": "boolean",
                    "args": []
                },
                "menuHotkeyHelp2": {
                    "returnType": "boolean",
                    "args": []
                },
                "menuHotkeyHelp3": {
                    "returnType": "boolean",
                    "args": []
                },
                "menuHotkeyHelp4": {
                    "returnType": "boolean",
                    "args": []
                },
                "menuSkillLeft": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "threshold",
                            "type": "number",
                            "isOptional": true
                        }
                    ]
                },
                "menuSkillRight": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "threshold",
                            "type": "number",
                            "isOptional": true
                        }
                    ]
                },
                "menuSkillUp": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "threshold",
                            "type": "number",
                            "isOptional": true
                        }
                    ]
                },
                "menuSkillDown": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "threshold",
                            "type": "number",
                            "isOptional": true
                        }
                    ]
                },
                "menuCircleLeft": {
                    "returnType": "boolean",
                    "args": []
                },
                "menuCircleRight": {
                    "returnType": "boolean",
                    "args": []
                },
                "menuListUp": {
                    "returnType": "boolean",
                    "args": []
                },
                "menuListDown": {
                    "returnType": "boolean",
                    "args": []
                },
                "questCircleLeft": {
                    "returnType": "boolean",
                    "args": []
                },
                "questCircleRight": {
                    "returnType": "boolean",
                    "args": []
                },
                "menuMapLeftDown": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "threshold",
                            "type": "number",
                            "isOptional": true
                        }
                    ]
                },
                "menuMapRightDown": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "threshold",
                            "type": "number",
                            "isOptional": true
                        }
                    ]
                },
                "menuMapUpDown": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "threshold",
                            "type": "number",
                            "isOptional": true
                        }
                    ]
                },
                "menuMapDownDown": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "threshold",
                            "type": "number",
                            "isOptional": true
                        }
                    ]
                },
                "menuScrollUp": {
                    "returnType": "boolean",
                    "args": []
                },
                "menuScrollDown": {
                    "returnType": "boolean",
                    "args": []
                },
                "arenaScrollUp": {
                    "returnType": "boolean",
                    "args": []
                },
                "arenaScrollDown": {
                    "returnType": "boolean",
                    "args": []
                },
                "scrollUp": {
                    "returnType": "boolean",
                    "args": []
                },
                "scrollDown": {
                    "returnType": "boolean",
                    "args": []
                },
                "interactPressed": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "checkForEscape",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "autoCtrlIgnore",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "interactDown": {
                    "returnType": "boolean",
                    "args": []
                },
                "leftPressed": {
                    "returnType": "boolean",
                    "args": []
                },
                "rightPressed": {
                    "returnType": "boolean",
                    "args": []
                },
                "upPressed": {
                    "returnType": "boolean",
                    "args": []
                },
                "downPressed": {
                    "returnType": "boolean",
                    "args": []
                },
                "leftPressedSticks": {
                    "returnType": "boolean",
                    "args": []
                },
                "rightPressedSticks": {
                    "returnType": "boolean",
                    "args": []
                },
                "upPressedSticks": {
                    "returnType": "boolean",
                    "args": []
                },
                "downPressedSticks": {
                    "returnType": "boolean",
                    "args": []
                },
                "leftDown": {
                    "returnType": "boolean",
                    "args": []
                },
                "rightDown": {
                    "returnType": "boolean",
                    "args": []
                },
                "upDown": {
                    "returnType": "boolean",
                    "args": []
                },
                "downDown": {
                    "returnType": "boolean",
                    "args": []
                },
                "loreDown": {
                    "returnType": "boolean",
                    "args": []
                },
                "loreUp": {
                    "returnType": "boolean",
                    "args": []
                },
                "elementModeScroll": {
                    "returnType": "boolean",
                    "args": []
                },
                "elementModeSwitch": {
                    "returnType": "boolean",
                    "args": []
                },
                "init": {
                    "returnType": "Control",
                    "args": []
                }
            },
            "parents": [
                "ig.Class"
            ]
        }
    },
    "game.feature.credits.credit-loadable": {
        "sc.CreditsManager": {
            "fields": {
                "speed": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "reset": {
                    "returnType": "void",
                    "args": []
                },
                "onTeleport": {
                    "returnType": "void",
                    "args": []
                },
                "onReset": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "CreditsManager",
                    "args": []
                }
            },
            "parents": [
                "ig.GameAddon"
            ]
        },
        "sc": {
            "fields": {
                "CreditsManager": {
                    "type": "CreditsManagerConstructor"
                },
                "credits": {
                    "type": "CreditsManager"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.credits.gui.credits-gui": {
        "ig.GUI.CreditSection": {
            "fields": {
                "content": {
                    "type": "ig.GuiElementBase",
                    "isOptional": false
                },
                "finished": {
                    "type": "boolean",
                    "isOptional": false
                },
                "isOffscreen": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "remove": {
                    "returnType": "void",
                    "args": []
                },
                "createHeader": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "text",
                            "type": "ig.LangLabel.Data | string",
                            "isOptional": false
                        },
                        {
                            "name": "pos",
                            "type": "Vec2",
                            "isOptional": false
                        },
                        {
                            "name": "namesEmpty",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "createNames": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "names",
                            "type": "Array<ig.LangLabel.Data | string>",
                            "isOptional": false
                        },
                        {
                            "name": "columns",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "columnGuis",
                            "type": "ig.GuiElementBase[]",
                            "isOptional": false
                        },
                        {
                            "name": "pos",
                            "type": "Vec2",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "ig.GUI": {
            "fields": {
                "CreditSection": {
                    "type": "GUI.CreditSectionConstructor",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.credits.plug-in": {},
    "game.feature.font.font-system": {
        "sc.FontSystem": {
            "fields": {
                "gamepadIcons": {
                    "type": "boolean",
                    "isOptional": false
                },
                "icons": {
                    "type": "Record<\n        | 'global'\n        | 'globalSmall'\n        | 'keyboard'\n        | 'gamepad'\n        | 'items'\n        | 'stats'\n        | 'stats_large'\n        | 'langs',\n        ig.Font\n      >",
                    "isOptional": false
                },
                "colors": {
                    "type": "Record<\n        | 'red'\n        | 'green'\n        | 'purple'\n        | 'grey'\n        | 'orange_mid'\n        | 'orange_tiny'\n        | 'purple_mid'\n        | 'grey_mid'\n        | 'grey_tiny'\n        | 'red_mid'\n        | 'red_tiny'\n        | 'green_mid'\n        | 'green_tiny',\n        ig.Image\n      >",
                    "isOptional": false
                },
                "font": {
                    "type": "ig.MultiFont",
                    "isOptional": false
                },
                "smallFont": {
                    "type": "ig.MultiFont",
                    "isOptional": false
                },
                "tinyFont": {
                    "type": "ig.MultiFont",
                    "isOptional": false
                },
                "switchIndex": {
                    "type": "number",
                    "isOptional": false
                },
                "gamepadIconStyle": {
                    "type": "sc.GAMEPAD_ICON_STYLE",
                    "isOptional": false
                }
            },
            "functions": {
                "changeKeyCodeIcon": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "action",
                            "type": "LiteralUnion<ig.Input.KnownAction>",
                            "isOptional": false
                        },
                        {
                            "name": "key",
                            "type": "ig.KEY",
                            "isOptional": false
                        }
                    ]
                },
                "changeGamepadIcon": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "action",
                            "type": "LiteralUnion<ig.Input.KnownAction>",
                            "isOptional": false
                        },
                        {
                            "name": "icon",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "setGamepadIconStyle": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "style",
                            "type": "sc.GAMEPAD_ICON_STYLE",
                            "isOptional": false
                        }
                    ]
                },
                "updateGamepadSwapMap": {
                    "returnType": "void",
                    "args": []
                },
                "hasIcon": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "icon",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "onVarsChanged": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "FontSystem",
                    "args": []
                }
            },
            "parents": [
                "ig.GameAddon"
            ]
        },
        "sc": {
            "fields": {
                "FontSystem": {
                    "type": "FontSystemConstructor"
                },
                "fontsystem": {
                    "type": "sc.FontSystem"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.game-code.game-code": {},
    "game.feature.game-code.plug-in": {},
    "game.feature.game-sense.controllers.element-controller": {},
    "game.feature.game-sense.controllers.hp-controller": {},
    "game.feature.game-sense.game-sense-model": {
        "sc.GameSense": {
            "fields": {},
            "functions": {
                "onDeferredUpdate": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "GameSense",
                    "args": []
                }
            },
            "parents": [
                "ig.GameAddon"
            ]
        },
        "sc": {
            "fields": {
                "GameSense": {
                    "type": "GameSenseConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.game-sense.plug-in": {},
    "game.feature.gui.base.boxes": {
        "sc.WhiteLineBox": {
            "fields": {},
            "functions": {
                "init": {
                    "returnType": "WhiteLineBox",
                    "args": [
                        {
                            "name": "width",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "height",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.BoxGui"
            ]
        },
        "sc": {
            "fields": {
                "WhiteLineBox": {
                    "type": "WhiteLineBoxConstructor"
                },
                "ArrowBoxGui": {
                    "type": "ArrowBoxGuiConstructor"
                },
                "BlackWhiteBox": {
                    "type": "BlackWhiteBoxConstructor"
                },
                "CenterBoxGui": {
                    "type": "CenterBoxGuiConstructor"
                },
                "LineGui": {
                    "type": "LineGuiConstructor"
                },
                "SideBoxGui": {
                    "type": "SideBoxGuiConstructor"
                },
                "SMALL_BOX_ALIGN": {
                    "type": "Record<string, SmallBoxAlign>"
                },
                "SmallEntityBox": {
                    "type": "SmallEntityBoxConstructor"
                },
                "SmallBlackBoxGui": {
                    "type": "SmallBlackBoxGuiConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.ArrowBoxGui": {
            "fields": {},
            "functions": {
                "init": {
                    "returnType": "ArrowBoxGui",
                    "args": [
                        {
                            "name": "sizeX",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "sizeY",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "pointerType",
                            "type": "sc.ArrowBoxGui.POINTER",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.BoxGui"
            ]
        },
        "sc.BlackWhiteBox": {
            "fields": {},
            "functions": {
                "init": {
                    "returnType": "BlackWhiteBox",
                    "args": [
                        {
                            "name": "width",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "height",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "flipped",
                            "type": "Nullable<boolean>",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": [
                "ig.BoxGui"
            ]
        },
        "sc.CenterBoxGui": {
            "fields": {
                "centerBox": {
                    "type": "sc.BlackWhiteBox",
                    "isOptional": false
                }
            },
            "functions": {
                "resize": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "CenterBoxGui",
                    "args": [
                        {
                            "name": "content",
                            "type": "ig.GuiElementBase",
                            "isOptional": false
                        },
                        {
                            "name": "skipTransition",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc.LineGui": {
            "fields": {
                "ninepatch": {
                    "type": "ig.NinePatch",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "sc.LineGui",
                    "args": [
                        {
                            "name": "width",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.BoxGui"
            ]
        },
        "sc.SideBoxGui": {
            "fields": {
                "titleGui": {
                    "type": "sc.SlickTitleGui",
                    "isOptional": false
                },
                "contentEntries": {
                    "type": "sc.SlickBoxGui[]",
                    "isOptional": false
                },
                "right": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "pushContent": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "subGui",
                            "type": "ig.GuiElementBase",
                            "isOptional": false
                        },
                        {
                            "name": "showSubGui",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "paddingX",
                            "type": "number",
                            "isOptional": true
                        },
                        {
                            "name": "paddingY",
                            "type": "number",
                            "isOptional": true
                        }
                    ]
                },
                "replaceContent": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "subGui",
                            "type": "ig.GuiElementBase",
                            "isOptional": false
                        }
                    ]
                },
                "removeContent": {
                    "returnType": "sc.SlickBoxGui",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "clearContent": {
                    "returnType": "void",
                    "args": []
                },
                "popContent": {
                    "returnType": "void",
                    "args": []
                },
                "rearrangeContent": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "slickBoxGui",
                            "type": "sc.SlickBoxGui",
                            "isOptional": true
                        }
                    ]
                },
                "hide": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "skipTransition",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "initDelay",
                            "type": "number",
                            "isOptional": true
                        }
                    ]
                },
                "show": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "skipTransition",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "initDelay",
                            "type": "number",
                            "isOptional": true
                        }
                    ]
                },
                "remove": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "SideBoxGui",
                    "args": [
                        {
                            "name": "right",
                            "type": "boolean",
                            "isOptional": false
                        },
                        {
                            "name": "text",
                            "type": "sc.TextLike",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc.SmallEntityBox": {
            "fields": {
                "ninepatch": {
                    "type": "ig.NinePatch",
                    "isOptional": false
                },
                "entity": {
                    "type": "ig.Entity",
                    "isOptional": false
                },
                "textGui": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "timer": {
                    "type": "number",
                    "isOptional": false
                },
                "rumbleTime": {
                    "type": "number",
                    "isOptional": false
                },
                "finished": {
                    "type": "boolean",
                    "isOptional": false
                },
                "entityOff": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "offY": {
                    "type": "number",
                    "isOptional": false
                },
                "fixedPos": {
                    "type": "Vec3",
                    "isOptional": true
                },
                "hideSmall": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "setFixedPos": {
                    "returnType": "void",
                    "args": []
                },
                "stopRumble": {
                    "returnType": "void",
                    "args": []
                },
                "_updatePos": {
                    "returnType": "void",
                    "args": []
                },
                "remove": {
                    "returnType": "void",
                    "args": []
                },
                "isFinished": {
                    "returnType": "boolean",
                    "args": []
                },
                "init": {
                    "returnType": "SmallEntityBox",
                    "args": [
                        {
                            "name": "entity",
                            "type": "ig.Entity",
                            "isOptional": false
                        },
                        {
                            "name": "text",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "time",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "align",
                            "type": "SmallBoxAlign",
                            "isOptional": true
                        },
                        {
                            "name": "offY",
                            "type": "number",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc.SmallBlackBoxGui": {
            "fields": {
                "text": {
                    "type": "unknown",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "SmallBlackBoxGui",
                    "args": [
                        {
                            "name": "width",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.BoxGui"
            ]
        }
    },
    "game.feature.gui.base.button": {
        "sc": {
            "fields": {
                "BUTTON_DEFAULT_WIDTH": {
                    "type": "number"
                },
                "BUTTON_MENU_WIDTH": {
                    "type": "number"
                },
                "BUTTON_TOP_MENU_WIDTH": {
                    "type": "number"
                },
                "BUTTON_SOUND": {
                    "type": "Record<string, ig.Sound> &\n      Record<\n        | 'submit'\n        | 'back'\n        | 'equip'\n        | 'denied'\n        | 'quickAppear'\n        | 'quickHide'\n        | 'shop_up'\n        | 'shop_down'\n        | 'shop_cash'\n        | 'quest_accept'\n        | 'toggle_on'\n        | 'toggle_off',\n        ig.Sound\n      >"
                },
                "ButtonHighlightGui": {
                    "type": "ButtonHighlightGuiConstructor"
                },
                "ButtonBgGui": {
                    "type": "ButtonBgGuiConstructor"
                },
                "ButtonGui": {
                    "type": "ButtonGuiConstructor"
                },
                "CheckboxGui": {
                    "type": "CheckboxGuiConstructor"
                },
                "BUTTON_TYPE": {
                    "type": "Record<string, ButtonGui.Type> &\n      Record<\n        | 'DEFAULT'\n        | 'SMALL'\n        | 'EQUIP'\n        | 'ITEM'\n        | 'OPTION'\n        | 'GROUP'\n        | 'GROUP_LEFT'\n        | 'GROUP_RIGHT'\n        | 'START',\n        ButtonGui.Type\n      >"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.ButtonHighlightGui": {
            "fields": {
                "focusWeight": {
                    "type": "number",
                    "isOptional": false
                },
                "gfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "pattern": {
                    "type": "ig.ImagePattern",
                    "isOptional": false
                },
                "flipped": {
                    "type": "boolean",
                    "isOptional": false
                },
                "highlight": {
                    "type": "sc.ButtonGui.Highlight",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "ButtonHighlightGui",
                    "args": [
                        {
                            "name": "width",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "type",
                            "type": "sc.ButtonGui.Type",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc.ButtonBgGui": {
            "fields": {},
            "functions": {
                "init": {
                    "returnType": "ButtonBgGui",
                    "args": [
                        {
                            "name": "width",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "type",
                            "type": "sc.ButtonGui.Type",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.BoxGui"
            ]
        },
        "sc.ButtonGui.Highlight": {
            "fields": {
                "startX": {
                    "type": "number",
                    "isOptional": false
                },
                "endX": {
                    "type": "number",
                    "isOptional": false
                },
                "leftWidth": {
                    "type": "number",
                    "isOptional": false
                },
                "rightWidth": {
                    "type": "number",
                    "isOptional": false
                },
                "offsetY": {
                    "type": "number",
                    "isOptional": false
                },
                "gfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "pattern": {
                    "type": "ig.ImagePattern",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.ButtonGui.Type": {
            "fields": {
                "alignXPadding": {
                    "type": "number",
                    "isOptional": true
                },
                "highlight": {
                    "type": "Highlight | null",
                    "isOptional": true
                },
                "height": {
                    "type": "number",
                    "isOptional": false
                },
                "ninepatch": {
                    "type": "ig.NinePatch",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.ButtonGui": {
            "fields": {
                "text": {
                    "type": "sc.TextLike",
                    "isOptional": false
                },
                "bgGui": {
                    "type": "sc.ButtonBgGui",
                    "isOptional": false
                },
                "buttonType": {
                    "type": "sc.ButtonGui.Type",
                    "isOptional": false
                },
                "submitSound": {
                    "type": "ig.Sound",
                    "isOptional": true
                },
                "data": {
                    "type": "unknown",
                    "isOptional": true
                },
                "textChild": {
                    "type": "sc.TextGui",
                    "isOptional": false
                }
            },
            "functions": {
                "setWidth": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "width",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "setHeight": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "height",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "setText": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "text",
                            "type": "sc.TextLike",
                            "isOptional": false
                        },
                        {
                            "name": "ignoreWidth",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "resetText": {
                    "returnType": "void",
                    "args": []
                },
                "unsetFocus": {
                    "returnType": "void",
                    "args": []
                },
                "getButtonText": {
                    "returnType": "string",
                    "args": []
                },
                "init": {
                    "returnType": "ButtonGui",
                    "args": [
                        {
                            "name": "text",
                            "type": "sc.TextLike",
                            "isOptional": false
                        },
                        {
                            "name": "width",
                            "type": "number",
                            "isOptional": true
                        },
                        {
                            "name": "active",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "type",
                            "type": "sc.ButtonGui.Type",
                            "isOptional": true
                        },
                        {
                            "name": "submitSound",
                            "type": "ig.Sound",
                            "isOptional": true
                        },
                        {
                            "name": "keepPressed",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "blockedSound",
                            "type": "ig.Sound",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": [
                "ig.FocusGui"
            ]
        },
        "sc.CheckboxGui": {
            "fields": {
                "hookGui": {
                    "type": "ig.ImageGui",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "sc.CheckboxGui",
                    "args": [
                        {
                            "name": "initValue",
                            "type": "boolean",
                            "isOptional": false
                        },
                        {
                            "name": "width",
                            "type": "number",
                            "isOptional": true
                        },
                        {
                            "name": "active",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": [
                "sc.ButtonGui"
            ]
        }
    },
    "game.feature.gui.base.compact-choice-box": {},
    "game.feature.gui.base.misc": {
        "sc.SlopeLine_Color": {
            "fields": {
                "WHITE": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "BLUE": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "ORANGE": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "GREY": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "DARK_GREY": {
                    "type": "Vec2",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.SlopeLine": {
            "fields": {
                "pixel": {
                    "type": "number",
                    "isOptional": false
                },
                "right": {
                    "type": "boolean",
                    "isOptional": false
                },
                "down": {
                    "type": "boolean",
                    "isOptional": false
                },
                "_tempPixel": {
                    "type": "number",
                    "isOptional": false
                },
                "color": {
                    "type": "sc.SlopeLine_Color",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "SlopeLine",
                    "args": [
                        {
                            "name": "pixel",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "right",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "down",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "color",
                            "type": "sc.SlopeLine_Color",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc": {
            "fields": {
                "SlopeLine": {
                    "type": "SlopeLineConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.gui.base.numbers": {
        "sc.NumberSize": {
            "fields": {
                "x": {
                    "type": "number",
                    "isOptional": false
                },
                "y": {
                    "type": "number",
                    "isOptional": false
                },
                "width": {
                    "type": "number",
                    "isOptional": false
                },
                "height": {
                    "type": "number",
                    "isOptional": false
                },
                "dotX": {
                    "type": "number",
                    "isOptional": true
                },
                "commaOffset": {
                    "type": "number",
                    "isOptional": true
                },
                "dotSize": {
                    "type": "number",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.NUMBER_SIZE": {
            "fields": {
                "NORMAL": {
                    "type": "NumberSize",
                    "isOptional": false
                },
                "TINY": {
                    "type": "NumberSize",
                    "isOptional": false
                },
                "LARGE": {
                    "type": "NumberSize",
                    "isOptional": false
                },
                "TEXT": {
                    "type": "NumberSize",
                    "isOptional": false
                },
                "SMALL": {
                    "type": "NumberSize",
                    "isOptional": false
                },
                "CHAIN": {
                    "type": "NumberSize",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc": {
            "fields": {
                "NUMBER_SIZE": {
                    "type": "NUMBER_SIZE"
                },
                "NumberGui": {
                    "type": "NumberGuiConstructor"
                },
                "MaxNumberGui": {
                    "type": "MaxNumberGuiConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.NumberGui.Settings": {
            "fields": {
                "size": {
                    "type": "Nullable<sc.NumberSize>",
                    "isOptional": true
                },
                "color": {
                    "type": "Nullable<sc.GUI_NUMBER_COLOR>",
                    "isOptional": true
                },
                "signed": {
                    "type": "Nullable<boolean>",
                    "isOptional": true
                },
                "transitionTime": {
                    "type": "Nullable<number>",
                    "isOptional": true
                },
                "transitionScale": {
                    "type": "Nullable<number>",
                    "isOptional": true
                },
                "zeroAsGrey": {
                    "type": "Nullable<boolean>",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.NumberGui": {
            "fields": {
                "maxNumber": {
                    "type": "number",
                    "isOptional": false
                },
                "showPlus": {
                    "type": "boolean",
                    "isOptional": false
                },
                "targetNumber": {
                    "type": "number",
                    "isOptional": false
                },
                "scramble": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "setNumber": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "number",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "skipTransition",
                            "type": "Nullable<boolean>",
                            "isOptional": true
                        }
                    ]
                },
                "setMaxNumber": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "number",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "setColor": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "color",
                            "type": "sc.GUI_NUMBER_COLOR",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "sc.NumberGui",
                    "args": [
                        {
                            "name": "maxValue",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "sc.NumberGui.Settings",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc.MaxNumberGui": {
            "fields": {
                "gfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "currentNumberGui": {
                    "type": "sc.NumberGui",
                    "isOptional": false
                },
                "maxNumberGui": {
                    "type": "sc.NumberGui",
                    "isOptional": false
                }
            },
            "functions": {
                "getMaxNumber": {
                    "returnType": "number",
                    "args": []
                },
                "setMaxNumber": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "max",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "skipTransition",
                            "type": "Nullable<boolean>",
                            "isOptional": true
                        }
                    ]
                },
                "setNumber": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "number",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "skipTransition",
                            "type": "Nullable<boolean>",
                            "isOptional": true
                        }
                    ]
                },
                "init": {
                    "returnType": "MaxNumberGui",
                    "args": [
                        {
                            "name": "max",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "transitionTime",
                            "type": "number",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        }
    },
    "game.feature.gui.base.slick-box": {
        "sc.SlickTitleGui": {
            "fields": {
                "text": {
                    "type": "null",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "SlickTitleGui",
                    "args": [
                        {
                            "name": "text",
                            "type": "sc.TextLike",
                            "isOptional": false
                        },
                        {
                            "name": "right",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "flipped",
                            "type": "Nullable<boolean>",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": [
                "ig.BoxGui"
            ]
        },
        "sc": {
            "fields": {
                "SlickTitleGui": {
                    "type": "SlickTitleGuiConstructor"
                },
                "SlickBoxRawGui": {
                    "type": "SlickBoxRawGuiConstructor"
                },
                "SlickBoxGui": {
                    "type": "SlickBoxGuiConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.SlickBoxRawGui": {
            "fields": {},
            "functions": {},
            "parents": [
                "ig.BoxGui"
            ]
        },
        "sc.SlickBoxGui": {
            "fields": {
                "paddingX": {
                    "type": "number",
                    "isOptional": false
                },
                "paddingY": {
                    "type": "number",
                    "isOptional": false
                },
                "minWidth": {
                    "type": "number",
                    "isOptional": false
                },
                "subGui": {
                    "type": "unknown",
                    "isOptional": false
                }
            },
            "functions": {
                "setContent": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "subGui",
                            "type": "ig.GuiElementBase",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "SlickBoxGui",
                    "args": [
                        {
                            "name": "subGui",
                            "type": "ig.GuiElementBase",
                            "isOptional": false
                        },
                        {
                            "name": "flipped",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "paddingX",
                            "type": "number",
                            "isOptional": true
                        },
                        {
                            "name": "paddingY",
                            "type": "number",
                            "isOptional": true
                        },
                        {
                            "name": "minWidth",
                            "type": "number",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": [
                "sc.SlickBoxRawGui"
            ]
        }
    },
    "game.feature.gui.base.text": {
        "sc": {
            "fields": {
                "TextGui": {
                    "type": "TextGuiConstructor"
                }
            },
            "functions": {
                "toString": {
                    "returnType": "string",
                    "args": []
                }
            },
            "parents": []
        },
        "sc.TextGui.LevelDrawData": {
            "fields": {
                "level": {
                    "type": "number",
                    "isOptional": false
                },
                "numberGfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "isScalable": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.TextGui.Settings": {
            "fields": {
                "font": {
                    "type": "ig.MultiFont",
                    "isOptional": true
                },
                "drawCallback": {
                    "type": "ig.TextBlock.DrawCallback",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": [
                "ig.TextBlock.Settings"
            ]
        },
        "sc.TextGui": {
            "fields": {
                "font": {
                    "type": "ig.MultiFont",
                    "isOptional": false
                },
                "text": {
                    "type": "sc.TextLike",
                    "isOptional": false
                },
                "textBlock": {
                    "type": "ig.TextBlock",
                    "isOptional": false
                },
                "beepSound": {
                    "type": "Nullable<ig.Sound>",
                    "isOptional": false
                },
                "bleepDelay": {
                    "type": "number",
                    "isOptional": false
                },
                "playSound": {
                    "type": "boolean",
                    "isOptional": false
                },
                "stopped": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "onVisibilityChange": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "visible",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "setBeepSound": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "beepSound",
                            "type": "Nullable<ig.Sound>",
                            "isOptional": false
                        }
                    ]
                },
                "setMaxWidth": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "maxWidth",
                            "type": "Nullable<number>",
                            "isOptional": true
                        }
                    ]
                },
                "setTextAlign": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "align",
                            "type": "ig.Font.ALIGN",
                            "isOptional": false
                        }
                    ]
                },
                "setTextSpeed": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "textSpeed",
                            "type": "ig.TextBlock.SPEED",
                            "isOptional": false
                        }
                    ]
                },
                "setFont": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "font",
                            "type": "Nullable<ig.MultiFont>",
                            "isOptional": true
                        },
                        {
                            "name": "linePadding",
                            "type": "Nullable<number>",
                            "isOptional": true
                        }
                    ]
                },
                "setDrawCallback": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "callback",
                            "type": "ig.TextBlock.DrawCallback",
                            "isOptional": false
                        }
                    ]
                },
                "setText": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "text",
                            "type": "sc.TextLike",
                            "isOptional": false
                        }
                    ]
                },
                "clear": {
                    "returnType": "void",
                    "args": []
                },
                "finish": {
                    "returnType": "void",
                    "args": []
                },
                "stop": {
                    "returnType": "void",
                    "args": []
                },
                "reset": {
                    "returnType": "void",
                    "args": []
                },
                "resume": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "TextGui",
                    "args": [
                        {
                            "name": "text",
                            "type": "sc.TextLike",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "sc.TextGui.Settings",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        }
    },
    "game.feature.gui.hud.buff-hud": {
        "sc.BuffHudEntry": {
            "fields": {
                "buff": {
                    "type": "sc.StatChange",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "BuffHudEntry",
                    "args": [
                        {
                            "name": "buff",
                            "type": "sc.StatChange",
                            "isOptional": false
                        },
                        {
                            "name": "id",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.BoxGui"
            ]
        },
        "sc": {
            "fields": {
                "BuffHudEntry": {
                    "type": "BuffHudEntryConstructor"
                },
                "BuffHudGui": {
                    "type": "BuffHudGuiConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.BuffHudGui": {
            "fields": {},
            "functions": {
                "sortSlots": {
                    "returnType": "boolean",
                    "args": []
                }
            },
            "parents": [
                "ig.GuiElementBase",
                "sc.Model.Observer"
            ]
        }
    },
    "game.feature.gui.hud.combat-hud": {
        "sc.CombatHudGui": {
            "fields": {
                "upperGui": {
                    "type": "sc.CombatUpperHud",
                    "isOptional": false
                },
                "lowerGui": {
                    "type": "sc.CombatLowerHud",
                    "isOptional": false
                },
                "skipGui": {
                    "type": "sc.CombatSkipGui",
                    "isOptional": false
                },
                "lineTimer": {
                    "type": "number",
                    "isOptional": false
                },
                "isCombat": {
                    "type": "boolean",
                    "isOptional": false
                },
                "isRanked": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "getLineWidth": {
                    "returnType": "number",
                    "args": []
                },
                "init": {
                    "returnType": "CombatHudGui",
                    "args": []
                }
            },
            "parents": [
                "ig.GuiElementBase",
                "sc.Model.Observer"
            ]
        },
        "sc": {
            "fields": {
                "CombatHudGui": {
                    "type": "CombatHudGuiConstructor"
                },
                "CombatSkipGui": {
                    "type": "CombatSkipGuiConstructor"
                },
                "CombatUpperHud": {
                    "type": "CombatUpperHudConstructor"
                },
                "CombatLowerHud": {
                    "type": "CombatLowerHudConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.CombatSkipGui": {
            "fields": {
                "ninepatch": {
                    "type": "ig.NinePatch",
                    "isOptional": false
                }
            },
            "functions": {
                "show": {
                    "returnType": "void",
                    "args": []
                },
                "hide": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "CombatSkipGui",
                    "args": []
                }
            },
            "parents": [
                "ig.BoxGui"
            ]
        },
        "sc.CombatUpperHud.Sub": {
            "fields": {
                "empty": {
                    "type": "sc.CombatUpperHud.CONTENT_GUI.EMPTY",
                    "isOptional": false
                },
                "ranked": {
                    "type": "sc.CombatUpperHud.CONTENT_GUI.RANKED",
                    "isOptional": false
                },
                "pvp": {
                    "type": "sc.CombatUpperHud.CONTENT_GUI.PVP",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.CombatUpperHud": {
            "fields": {
                "gfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "ninepatch": {
                    "type": "ig.NinePatch",
                    "isOptional": false
                },
                "sub": {
                    "type": "CombatUpperHud.Sub",
                    "isOptional": false
                },
                "currentSub": {
                    "type": "sc.CombatUpperHud.ContentGui",
                    "isOptional": false
                }
            },
            "functions": {
                "updateSubGui": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "isRanked",
                            "type": "boolean",
                            "isOptional": false
                        },
                        {
                            "name": "isPvp",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "combatChanged": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "isCombat",
                            "type": "boolean",
                            "isOptional": false
                        },
                        {
                            "name": "isRanked",
                            "type": "boolean",
                            "isOptional": false
                        },
                        {
                            "name": "isPvp",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "getUpperRightWidth": {
                    "returnType": "number",
                    "args": []
                },
                "init": {
                    "returnType": "CombatUpperHud",
                    "args": []
                }
            },
            "parents": [
                "ig.GuiElementBase",
                "sc.Model.Observer"
            ]
        },
        "sc.CombatLowerHud": {
            "fields": {},
            "functions": {
                "combatChanged": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "isCombat",
                            "type": "boolean",
                            "isOptional": false
                        },
                        {
                            "name": "isRanked",
                            "type": "boolean",
                            "isOptional": false
                        },
                        {
                            "name": "isPvp",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "CombatLowerHud",
                    "args": []
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc.CombatUpperHud.ContentGui": {
            "fields": {},
            "functions": {
                "start": {
                    "returnType": "void",
                    "args": []
                },
                "end": {
                    "returnType": "void",
                    "args": []
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc.CombatUpperHud.CONTENT_GUI.EMPTY": {
            "fields": {
                "gfx": {
                    "type": "ig.Image",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "EMPTY",
                    "args": []
                }
            },
            "parents": [
                "ContentGui"
            ]
        },
        "sc.CombatUpperHud.CONTENT_GUI.RANKED": {
            "fields": {
                "gfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "rankLabel": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "rankValue": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "progress": {
                    "type": "number",
                    "isOptional": false
                },
                "blinkTimer": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "RANKED",
                    "args": []
                }
            },
            "parents": [
                "ContentGui",
                "sc.Model.Observer"
            ]
        },
        "sc.CombatUpperHud.CONTENT_GUI.PVP": {
            "fields": {
                "gfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "heads": {
                    "type": "ig.Image",
                    "isOptional": false
                }
            },
            "functions": {
                "_renderPoints": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "renderer",
                            "type": "ig.GuiRenderer",
                            "isOptional": false
                        },
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "dir",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "maxPoints",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "points",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "offSrcX",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "_renderHeads": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "renderer",
                            "type": "ig.GuiRenderer",
                            "isOptional": false
                        },
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "left",
                            "type": "boolean",
                            "isOptional": false
                        },
                        {
                            "name": "heads",
                            "type": "number[]",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "PVP",
                    "args": []
                }
            },
            "parents": [
                "ContentGui"
            ]
        }
    },
    "game.feature.gui.hud.drop-hud": {},
    "game.feature.gui.hud.element-hud": {
        "sc.ElementHudGui": {
            "fields": {
                "timer": {
                    "type": "number",
                    "isOptional": false
                },
                "icons": {
                    "type": "sc.ElementHudIconGui[]",
                    "isOptional": false
                }
            },
            "functions": {
                "showElement": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "element",
                            "type": "sc.ELEMENT",
                            "isOptional": false
                        }
                    ]
                },
                "_updatePos": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "ElementHudGui",
                    "args": []
                }
            },
            "parents": [
                "ig.GuiElementBase",
                "sc.Model.Observer"
            ]
        },
        "sc": {
            "fields": {
                "ElementHudGui": {
                    "type": "ElementHudGuiConstructor"
                },
                "ElementHudIconGui": {
                    "type": "ElementHudIconGuiConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.ElementHudIconGui.IconDir": {
            "fields": {
                "alignX": {
                    "type": "ig.GUI_ALIGN",
                    "isOptional": false
                },
                "alignY": {
                    "type": "ig.GUI_ALIGN",
                    "isOptional": false
                },
                "tile": {
                    "type": "number",
                    "isOptional": false
                },
                "rotate": {
                    "type": "number",
                    "isOptional": false
                },
                "pShowX": {
                    "type": "number",
                    "isOptional": false
                },
                "pShowY": {
                    "type": "number",
                    "isOptional": false
                },
                "pHideX": {
                    "type": "number",
                    "isOptional": false
                },
                "pHideY": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.ElementHudIconGui": {
            "fields": {
                "gfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "iconDir": {
                    "type": "sc.ElementHudIconGui.IconDir",
                    "isOptional": false
                },
                "currentElement": {
                    "type": "number",
                    "isOptional": false
                },
                "bigSize": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "show": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "currentElement",
                            "type": "sc.ELEMENT",
                            "isOptional": false
                        },
                        {
                            "name": "bigSize",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "ElementHudIconGui",
                    "args": [
                        {
                            "name": "iconDir",
                            "type": "sc.ElementHudIconGui.IconDir",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        }
    },
    "game.feature.gui.hud.exp-hud": {
        "sc.ExpEntryGui": {
            "fields": {
                "gfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "number": {
                    "type": "sc.NumberGui",
                    "isOptional": false
                },
                "exp": {
                    "type": "number",
                    "isOptional": false
                },
                "withLabel": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "setExp": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "exp",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "ExpEntryGui",
                    "args": [
                        {
                            "name": "withLabel",
                            "type": "boolean",
                            "isOptional": false
                        },
                        {
                            "name": "exp",
                            "type": "number",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc": {
            "fields": {
                "ExpEntryGui": {
                    "type": "ExpEntryGuiConstructor"
                },
                "ExpMenuGui": {
                    "type": "ExpMenuGuiConstructor"
                },
                "ExpHudGui": {
                    "type": "ExpHudGuiConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.ExpMenuGui": {
            "fields": {
                "gfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "_expNumber": {
                    "type": "sc.NumberGui",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "ExpMenuGui",
                    "args": []
                }
            },
            "parents": [
                "ig.GuiElementBase",
                "sc.Model.Observer"
            ]
        },
        "sc.ExpHudGui": {
            "fields": {
                "baseEntry": {
                    "type": "sc.ExpEntryGui",
                    "isOptional": false
                },
                "menuEntry": {
                    "type": "sc.ExpMenuGui",
                    "isOptional": false
                },
                "timer": {
                    "type": "number",
                    "isOptional": false
                },
                "expSum": {
                    "type": "number",
                    "isOptional": false
                },
                "expAddEntries": {
                    "type": "sc.ExpEntryGui[]",
                    "isOptional": false
                }
            },
            "functions": {
                "addExp": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "exp",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "mergeExpEntry": {
                    "returnType": "void",
                    "args": []
                },
                "mergeAllEntries": {
                    "returnType": "void",
                    "args": []
                },
                "reorder": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "ExpHudGui",
                    "args": []
                }
            },
            "parents": [
                "ig.GuiElementBase",
                "sc.Model.Observer"
            ]
        }
    },
    "game.feature.gui.hud.feat-hud": {},
    "game.feature.gui.hud.hp-hud": {
        "sc.HpHudGui": {
            "fields": {
                "hpNumber": {
                    "type": "sc.NumberGui",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "HpHudGui",
                    "args": [
                        {
                            "name": "params",
                            "type": "sc.CombatParams",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc": {
            "fields": {
                "HpHudGui": {
                    "type": "HpHudGuiConstructor"
                },
                "HpHudBarGui": {
                    "type": "HpHudBarGuiConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.HpHudBarGui": {
            "fields": {
                "gfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "maxHp": {
                    "type": "number",
                    "isOptional": false
                },
                "currentHp": {
                    "type": "number",
                    "isOptional": false
                },
                "targetHp": {
                    "type": "number",
                    "isOptional": false
                },
                "timer": {
                    "type": "number",
                    "isOptional": false
                },
                "expTimer": {
                    "type": "number",
                    "isOptional": false
                },
                "params": {
                    "type": "sc.CombatParams",
                    "isOptional": false
                },
                "width": {
                    "type": "number",
                    "isOptional": false
                },
                "height": {
                    "type": "number",
                    "isOptional": false
                },
                "expRatio": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "setExpRatio": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "ratio",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "resetHp": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "newHp",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "maxHp",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "HpHudBarGui",
                    "args": [
                        {
                            "name": "params",
                            "type": "sc.CombatParams",
                            "isOptional": false
                        },
                        {
                            "name": "width",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "height",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        }
    },
    "game.feature.gui.hud.item-hud": {
        "sc.ItemContent": {
            "fields": {
                "timer": {
                    "type": "number",
                    "isOptional": false
                },
                "id": {
                    "type": "ItemID",
                    "isOptional": false
                },
                "amount": {
                    "type": "number",
                    "isOptional": false
                },
                "textGui": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "amountGui": {
                    "type": "sc.NumberGui",
                    "isOptional": false
                }
            },
            "functions": {
                "updateOption": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "bigFont",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "updateTimer": {
                    "returnType": "void",
                    "args": []
                },
                "increaseNumber": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "amount",
                            "type": "number",
                            "isOptional": true
                        },
                        {
                            "name": "skipTransition",
                            "type": "Nullable<boolean>",
                            "isOptional": true
                        }
                    ]
                },
                "init": {
                    "returnType": "ItemContent",
                    "args": [
                        {
                            "name": "id",
                            "type": "ItemID",
                            "isOptional": false
                        },
                        {
                            "name": "amount",
                            "type": "number",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc": {
            "fields": {
                "ItemContent": {
                    "type": "ItemContentConstructor"
                },
                "ItemHudBox": {
                    "type": "ItemHudBoxConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.ItemHudBox": {
            "fields": {
                "delayedStack": {
                    "type": "sc.ItemHudBox[]",
                    "isOptional": false
                },
                "size": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "addEntry": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "id",
                            "type": "ItemID",
                            "isOptional": false
                        },
                        {
                            "name": "amount",
                            "type": "number",
                            "isOptional": true
                        }
                    ]
                },
                "update": {
                    "returnType": "void",
                    "args": []
                },
                "_isInEntries": {
                    "returnType": "sc.ItemHudBox",
                    "args": [
                        {
                            "name": "id",
                            "type": "ItemID",
                            "isOptional": false
                        }
                    ]
                },
                "_popDelayed": {
                    "returnType": "void",
                    "args": []
                },
                "_updateSizes": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "b_",
                            "type": "unknown",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "ItemHudBox",
                    "args": []
                }
            },
            "parents": [
                "sc.RightHudBoxGui",
                "sc.Model.Observer"
            ]
        }
    },
    "game.feature.gui.hud.item-timer-hud": {
        "sc.ItemTimerHudGui": {
            "fields": {
                "gfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "numberGui": {
                    "type": "sc.NumberGui",
                    "isOptional": false
                },
                "player": {
                    "type": "sc.PlayerModel",
                    "isOptional": false
                },
                "maxTime": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "ItemTimerHudGui",
                    "args": []
                }
            },
            "parents": [
                "ig.GuiElementBase",
                "sc.Model.Observer"
            ]
        },
        "sc": {
            "fields": {
                "ItemTimerHudGui": {
                    "type": "ItemTimerHudGuiConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.gui.hud.key-hud": {
        "sc.KeyHudGui": {
            "fields": {
                "gfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "ninepatch": {
                    "type": "ig.NinePatch",
                    "isOptional": false
                },
                "areaItemType": {
                    "type": "sc.AREA_ITEM_TYPE",
                    "isOptional": false
                },
                "areaItemTypeMaster": {
                    "type": "sc.AREA_ITEM_TYPE",
                    "isOptional": false
                },
                "numberGui": {
                    "type": "sc.NumberGui",
                    "isOptional": false
                },
                "hasMaster": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "updateVisibility": {
                    "returnType": "void",
                    "args": []
                },
                "updateItemCount": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "KeyHudGui",
                    "args": []
                }
            },
            "parents": [
                "ig.GuiElementBase",
                "sc.Model.Observer"
            ]
        },
        "sc": {
            "fields": {
                "KeyHudGui": {
                    "type": "KeyHudGuiConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.gui.hud.landmark-hud": {},
    "game.feature.gui.hud.lore-hud": {},
    "game.feature.gui.hud.member-hud": {
        "sc.PartyHudGui": {
            "fields": {
                "model": {
                    "type": "null",
                    "isOptional": false
                },
                "memberGuis": {
                    "type": "sc.MemberHudGui[]",
                    "isOptional": false
                }
            },
            "functions": {
                "updateVisibility": {
                    "returnType": "void",
                    "args": []
                },
                "updatePartySubGui": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "PartyHudGui",
                    "args": []
                }
            },
            "parents": [
                "ig.GuiElementBase",
                "sc.Model.Observer"
            ]
        },
        "sc": {
            "fields": {
                "PartyHudGui": {
                    "type": "PartyHudGuiConstructor"
                },
                "MemberHudGui": {
                    "type": "MemberHudGuiConstructor"
                },
                "MemberHpExpSpGui": {
                    "type": "MemberHpExpSpGuiConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.MemberHudGui": {
            "fields": {
                "gfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "heads": {
                    "type": "ig.TileSheet",
                    "isOptional": false
                },
                "model": {
                    "type": "sc.PartyMemberModel",
                    "isOptional": false
                },
                "hpExpSpGui": {
                    "type": "sc.MemberHpExpSpGui",
                    "isOptional": false
                }
            },
            "functions": {
                "remove": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "skipTransition",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "init": {
                    "returnType": "MemberHudGui",
                    "args": [
                        {
                            "name": "model",
                            "type": "sc.PartyMemberModel",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase",
                "sc.Model.Observer"
            ]
        },
        "sc.MemberHpExpSpGui": {
            "fields": {
                "gfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "model": {
                    "type": "sc.PartyMemberModel",
                    "isOptional": false
                },
                "hpBar": {
                    "type": "sc.HpHudBarGui",
                    "isOptional": false
                },
                "spBar": {
                    "type": "sc.SpMiniHudGui",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "MemberHpExpSpGui",
                    "args": [
                        {
                            "name": "model",
                            "type": "sc.PartyMemberModel",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase",
                "sc.Model.Observer"
            ]
        }
    },
    "game.feature.gui.hud.money-hud": {},
    "game.feature.gui.hud.param-hud": {
        "sc.ParamHudGui": {
            "fields": {
                "level": {
                    "type": "sc.ParamHudGui.Level",
                    "isOptional": false
                },
                "hp": {
                    "type": "sc.ParamHudGui.Param",
                    "isOptional": false
                },
                "atk": {
                    "type": "sc.ParamHudGui.Param",
                    "isOptional": false
                },
                "def": {
                    "type": "sc.ParamHudGui.Param",
                    "isOptional": false
                },
                "foc": {
                    "type": "sc.ParamHudGui.Param",
                    "isOptional": false
                },
                "Pie": {
                    "type": "sc.ParamHudGui.PieConstructor",
                    "isOptional": false
                },
                "Param": {
                    "type": "sc.ParamHudGui.ParamConstructor",
                    "isOptional": false
                },
                "Level": {
                    "type": "sc.ParamHudGui.LevelConstructor",
                    "isOptional": false
                }
            },
            "functions": {
                "showParams": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "isInMenu",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "hideParams": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "skipTransition",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "init": {
                    "returnType": "ParamHudGui",
                    "args": []
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc": {
            "fields": {
                "ParamHudGui": {
                    "type": "ParamHudGuiConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.ParamHudGui.Pie": {
            "fields": {
                "gfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "param": {
                    "type": "sc.CombatParams.ParamName",
                    "isOptional": false
                },
                "offsetX": {
                    "type": "number",
                    "isOptional": false
                },
                "offsetY": {
                    "type": "number",
                    "isOptional": false
                },
                "_timer": {
                    "type": "number",
                    "isOptional": false
                },
                "_targetValue": {
                    "type": "number",
                    "isOptional": false
                },
                "_startValue": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "_getCurrentValue": {
                    "returnType": "number",
                    "args": []
                },
                "_calcOffset": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "value",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "Pie",
                    "args": [
                        {
                            "name": "param",
                            "type": "sc.CombatParams.ParamName",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase",
                "sc.Model.Observer"
            ]
        },
        "sc.ParamHudGui.Param": {
            "fields": {
                "ninepatch": {
                    "type": "ig.NinePatch",
                    "isOptional": false
                },
                "_pie": {
                    "type": "ig.ImageGui",
                    "isOptional": false
                },
                "_text": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "_number": {
                    "type": "sc.NumberGui",
                    "isOptional": false
                },
                "_param": {
                    "type": "sc.CombatParams.ParamName",
                    "isOptional": false
                }
            },
            "functions": {
                "_setNumber": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "skipTransition",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "init": {
                    "returnType": "Param",
                    "args": [
                        {
                            "name": "langId",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "paramName",
                            "type": "sc.CombatParams.ParamName",
                            "isOptional": false
                        },
                        {
                            "name": "width",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "maxValue",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "icon",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.BoxGui",
                "sc.Model.Observer"
            ]
        },
        "sc.ParamHudGui.Level": {
            "fields": {
                "ninepatch": {
                    "type": "ig.NinePatch",
                    "isOptional": false
                },
                "_text": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "_level": {
                    "type": "sc.NumberGui",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "Level",
                    "args": []
                }
            },
            "parents": [
                "ig.BoxGui",
                "sc.Model.Observer"
            ]
        }
    },
    "game.feature.gui.hud.quest-hud": {},
    "game.feature.gui.hud.right-hud": {
        "sc.RightHudGui": {
            "fields": {
                "taskTitle": {
                    "type": "unknown",
                    "isOptional": false
                },
                "maxCount": {
                    "type": "number",
                    "isOptional": false
                },
                "currentCount": {
                    "type": "number",
                    "isOptional": false
                },
                "variable": {
                    "type": "unknown",
                    "isOptional": false
                },
                "boxes": {
                    "type": "unknown",
                    "isOptional": false
                },
                "doReorder": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "addHudBox": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "rightHudBox",
                            "type": "sc.RightHudBoxGui",
                            "isOptional": false
                        },
                        {
                            "name": "insertIndex",
                            "type": "number",
                            "isOptional": true
                        }
                    ]
                },
                "addHudBoxBefore": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "rightHudBox",
                            "type": "sc.RightHudBoxGui",
                            "isOptional": false
                        },
                        {
                            "name": "index",
                            "type": "number",
                            "isOptional": true
                        }
                    ]
                },
                "removeHudBox": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "rightHudBox",
                            "type": "sc.RightHudBoxGui",
                            "isOptional": false
                        }
                    ]
                },
                "reorder": {
                    "returnType": "void",
                    "args": []
                },
                "updateSize": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "RightHudGui",
                    "args": []
                }
            },
            "parents": [
                "ig.GuiElementBase",
                "sc.Model.Observer"
            ]
        },
        "sc": {
            "fields": {
                "RightHudGui": {
                    "type": "RightHudGuiConstructor"
                },
                "RightHudBoxGui": {
                    "type": "RightHudBoxGuiConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.RightHudBoxGui": {
            "fields": {
                "hidden": {
                    "type": "boolean",
                    "isOptional": false
                },
                "justAdded": {
                    "type": "boolean",
                    "isOptional": false
                },
                "parentPanel": {
                    "type": "sc.RightHudGui",
                    "isOptional": false
                }
            },
            "functions": {
                "show": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "skipTransition",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "initDelay",
                            "type": "number",
                            "isOptional": true
                        }
                    ]
                },
                "hide": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "skipTransition",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "initDelay",
                            "type": "number",
                            "isOptional": true
                        }
                    ]
                },
                "remove": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "RightHudBoxGui",
                    "args": [
                        {
                            "name": "text",
                            "type": "sc.TextLike",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "sc.SideBoxGui"
            ]
        }
    },
    "game.feature.gui.hud.sp-change-hud": {
        "sc.SpChangeHudGui": {
            "fields": {
                "gfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "currentSp": {
                    "type": "number",
                    "isOptional": false
                },
                "consumedSp": {
                    "type": "number",
                    "isOptional": false
                },
                "timer": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "_updatePos": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "SpChangeHudGui",
                    "args": []
                }
            },
            "parents": [
                "ig.GuiElementBase",
                "sc.Model.Observer"
            ]
        },
        "sc": {
            "fields": {
                "SpChangeHudGui": {
                    "type": "SpChangeHudGuiConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.gui.hud.sp-hud": {
        "sc.SpHudGui": {
            "fields": {},
            "functions": {
                "init": {
                    "returnType": "SpHudGui",
                    "args": [
                        {
                            "name": "params",
                            "type": "sc.CombatParams",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc": {
            "fields": {
                "SpHudGui": {
                    "type": "SpHudGuiConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.gui.hud.sp-mini-hud": {
        "sc.SpMiniHudGui": {
            "fields": {
                "gfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "params": {
                    "type": "sc.CombatParams",
                    "isOptional": false
                },
                "targetSp": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "SpMiniHudGui",
                    "args": [
                        {
                            "name": "params",
                            "type": "sc.CombatParams",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase",
                "sc.Model.Observer"
            ]
        },
        "sc": {
            "fields": {
                "SpMiniHudGui": {
                    "type": "SpMiniHudGuiConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.gui.hud.status-hud": {
        "sc.StatusHudGui": {
            "fields": {
                "battleBgGui": {
                    "type": "null",
                    "isOptional": false
                },
                "battleSymbolGui": {
                    "type": "null",
                    "isOptional": false
                },
                "upperGui": {
                    "type": "sc.StatusUpperGui",
                    "isOptional": false
                },
                "lowerGui": {
                    "type": "sc.StatusLowerGui",
                    "isOptional": false
                },
                "elementBgGui": {
                    "type": "sc.StatusElementBgGui",
                    "isOptional": false
                },
                "elementModeGui": {
                    "type": "sc.StatusElementModeGui",
                    "isOptional": false
                },
                "paramGui": {
                    "type": "sc.ParamHudGui",
                    "isOptional": false
                },
                "partyGui": {
                    "type": "sc.PartyHudGui",
                    "isOptional": false
                },
                "keyHud": {
                    "type": "sc.KeyHudGui",
                    "isOptional": false
                },
                "elementSwitchTimer": {
                    "type": "number",
                    "isOptional": false
                },
                "menuMode": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "_updateVisibility": {
                    "returnType": "void",
                    "args": []
                },
                "_minimizeDisplay": {
                    "returnType": "void",
                    "args": []
                },
                "_minimizeDisplayFast": {
                    "returnType": "void",
                    "args": []
                },
                "_enterQuickMenuMode": {
                    "returnType": "void",
                    "args": []
                },
                "_enterMenuMode": {
                    "returnType": "void",
                    "args": []
                },
                "_changeMenuModeVisibility": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "menu",
                            "type": "sc.MENU_SUBMENU",
                            "isOptional": false
                        }
                    ]
                },
                "elementSwitchDisplay": {
                    "returnType": "void",
                    "args": []
                },
                "getFreeScreenMinY": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "StatusHudGui",
                    "args": []
                }
            },
            "parents": [
                "ig.GuiElementBase",
                "sc.Model.Observer",
                "ig.Vars.Accessor"
            ]
        },
        "sc": {
            "fields": {
                "StatusHudGui": {
                    "type": "StatusHudGuiConstructor"
                },
                "StatusUpperGui": {
                    "type": "StatusUpperGuiConstructor"
                },
                "StatusLowerGui": {
                    "type": "StatusLowerGuiConstructor"
                },
                "ElementalLoadOverlayGui": {
                    "type": "ElementalLoadOverlayGuiConstructor"
                },
                "StatusElementModeGui": {
                    "type": "StatusElementModeGuiConstructor"
                },
                "StatusElementBgGui": {
                    "type": "StatusElementBgGuiConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.StatusUpperGui": {
            "fields": {},
            "functions": {
                "init": {
                    "returnType": "StatusUpperGui",
                    "args": []
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc.StatusLowerGui": {
            "fields": {
                "buffGui": {
                    "type": "sc.BuffHudGui",
                    "isOptional": false
                },
                "itemTimerGui": {
                    "type": "sc.ItemTimerHudGui",
                    "isOptional": false
                }
            },
            "functions": {
                "moveSubGui": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "moveMore",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "StatusLowerGui",
                    "args": []
                }
            },
            "parents": [
                "ig.GuiElementBase",
                "sc.Model.Observer"
            ]
        },
        "sc.ElementalLoadOverlayGui": {
            "fields": {
                "gfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "alphaHandler": {
                    "type": "ig.AlphaTransitionHandler",
                    "isOptional": false
                },
                "currentWarnMode": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "ElementalLoadOverlayGui",
                    "args": []
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc.StatusElementModeGui": {
            "fields": {
                "gfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "timer": {
                    "type": "number",
                    "isOptional": false
                },
                "selectBg": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "StatusElementModeGui",
                    "args": []
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc.StatusElementBgGui": {
            "fields": {
                "gfx": {
                    "type": "ig.Image",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "StatusElementBgGui",
                    "args": []
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        }
    },
    "game.feature.gui.hud.task-hud": {},
    "game.feature.gui.hud.top-msg-hud": {
        "sc.TopMsgHudGui.Icon": {
            "fields": {
                "icon": {
                    "type": "number",
                    "isOptional": false
                },
                "bgm": {
                    "type": "string",
                    "isOptional": false
                },
                "sound": {
                    "type": "ig.Sound",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.TopMsgHudGui.Message": {
            "fields": {
                "icon": {
                    "type": "sc.TopMsgHudGui.Icon",
                    "isOptional": false
                },
                "titleText": {
                    "type": "string",
                    "isOptional": false
                },
                "subText": {
                    "type": "string",
                    "isOptional": false
                },
                "subFoneSize": {
                    "type": "ig.MultiFont",
                    "isOptional": false
                },
                "id": {
                    "type": "Nullable<number>",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.TopMsgHudGui": {
            "fields": {
                "topGui": {
                    "type": "sc.TopMsgTopGui",
                    "isOptional": false
                },
                "bottomGui": {
                    "type": "sc.TopMsgTitleGui",
                    "isOptional": false
                },
                "iconGui": {
                    "type": "sc.TopMsgIconGui",
                    "isOptional": false
                },
                "visible": {
                    "type": "boolean",
                    "isOptional": false
                },
                "timer": {
                    "type": "number",
                    "isOptional": false
                },
                "maxTime": {
                    "type": "number",
                    "isOptional": false
                },
                "current": {
                    "type": "sc.TopMsgHudGui.Message",
                    "isOptional": false
                },
                "messages": {
                    "type": "sc.TopMsgHudGui.Message[]",
                    "isOptional": false
                },
                "bgm": {
                    "type": "Record<string, ig.BgmTrack>",
                    "isOptional": false
                }
            },
            "functions": {
                "setContent": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "icon",
                            "type": "sc.TopMsgHudGui.Icon",
                            "isOptional": false
                        },
                        {
                            "name": "text",
                            "type": "sc.TextLike",
                            "isOptional": false
                        },
                        {
                            "name": "subText",
                            "type": "sc.TextLike",
                            "isOptional": false
                        },
                        {
                            "name": "subFont",
                            "type": "Nullable<ig.MultiFont>",
                            "isOptional": true
                        }
                    ]
                },
                "showMessage": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "icon",
                            "type": "sc.TopMsgHudGui.Icon",
                            "isOptional": false
                        },
                        {
                            "name": "titleText",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "subText",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "subFontSize",
                            "type": "ig.MultiFont",
                            "isOptional": false
                        },
                        {
                            "name": "id",
                            "type": "Nullable<number>",
                            "isOptional": true
                        }
                    ]
                },
                "popMessage": {
                    "returnType": "void",
                    "args": []
                },
                "update": {
                    "returnType": "void",
                    "args": []
                },
                "clear": {
                    "returnType": "void",
                    "args": []
                },
                "hide": {
                    "returnType": "void",
                    "args": []
                },
                "animationEnd": {
                    "returnType": "void",
                    "args": []
                },
                "checkDuplicates": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "TopMsgHudGui",
                    "args": []
                }
            },
            "parents": [
                "ig.GuiElementBase",
                "sc.Model.Observer"
            ]
        },
        "sc": {
            "fields": {
                "TopMsgHudGui": {
                    "type": "TopMsgHudGuiConstructor"
                },
                "TopMsgIconGui": {
                    "type": "TopMsgIconGuiConstructor"
                },
                "TopMsgTopGui": {
                    "type": "TopMsgTopGuiConstructor"
                },
                "TopMsgTitleGui": {
                    "type": "TopMsgTitleGuiConstructor"
                },
                "TopMsgSubGui": {
                    "type": "TopMsgSubGuiConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.TopMsgIconGui": {
            "fields": {
                "gfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "icon": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "setIcon": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "icon",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "TopMsgIconGui",
                    "args": []
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc.TopMsgTopGui": {
            "fields": {
                "gfx": {
                    "type": "ig.Image",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "TopMsgTopGui",
                    "args": []
                }
            },
            "parents": [
                "ig.ImageGui"
            ]
        },
        "sc.TopMsgTitleGui": {
            "fields": {
                "titleTextGui": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "subTextGui": {
                    "type": "sc.TopMsgSubGui",
                    "isOptional": false
                },
                "gfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "ninePatches": {
                    "type": "Record<'left' | 'leftInner' | 'rightInner' | 'right', ig.NinePatch>",
                    "isOptional": false
                }
            },
            "functions": {
                "setContent": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "text",
                            "type": "sc.TextLike",
                            "isOptional": false
                        },
                        {
                            "name": "subText",
                            "type": "sc.TextLike",
                            "isOptional": false
                        },
                        {
                            "name": "subFont",
                            "type": "Nullable<ig.MultiFont>",
                            "isOptional": true
                        }
                    ]
                },
                "showSubText": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "TopMsgTitleGui",
                    "args": []
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc.TopMsgSubGui": {
            "fields": {
                "ninepatch": {
                    "type": "ig.NinePatch",
                    "isOptional": false
                }
            },
            "functions": {
                "setContent": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "text",
                            "type": "sc.TextLike",
                            "isOptional": false
                        },
                        {
                            "name": "font",
                            "type": "Nullable<ig.MultiFont>",
                            "isOptional": true
                        }
                    ]
                },
                "init": {
                    "returnType": "TopMsgSubGui",
                    "args": []
                }
            },
            "parents": [
                "ig.BoxGui"
            ]
        }
    },
    "game.feature.gui.plug-in": {},
    "game.feature.gui.screen.credits-screen": {},
    "game.feature.gui.screen.intro-screen": {
        "ig.GUI.IntroScreen": {
            "fields": {
                "screenInteract": {
                    "type": "sc.ScreenInteractEntry",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "IntroScreen",
                    "args": [
                        {
                            "name": "callback",
                            "type": "(msg: ig.SEQUENCE_MSG, labelReached?: String) => void",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.SequenceGui"
            ]
        },
        "ig.GUI": {
            "fields": {
                "IntroScreen": {
                    "type": "IntroScreenConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.gui.screen.loading-screen": {},
    "game.feature.gui.screen.pause-screen": {
        "sc.PauseScreenGui": {
            "fields": {
                "buttonInteract": {
                    "type": "ig.ButtonInteractEntry",
                    "isOptional": false
                },
                "buttonGroup": {
                    "type": "sc.ButtonGroup",
                    "isOptional": false
                },
                "resumeButton": {
                    "type": "sc.ButtonGui",
                    "isOptional": false
                },
                "skipButton": {
                    "type": "sc.ButtonGui",
                    "isOptional": false
                },
                "cancelButton": {
                    "type": "sc.ButtonGui",
                    "isOptional": false
                },
                "toTitleButton": {
                    "type": "sc.ButtonGui",
                    "isOptional": false
                },
                "saveGameButton": {
                    "type": "sc.ButtonGui",
                    "isOptional": false
                },
                "optionsButton": {
                    "type": "sc.ButtonGui",
                    "isOptional": false
                },
                "arenaRestart": {
                    "type": "sc.ButtonGui",
                    "isOptional": false
                },
                "arenaLobby": {
                    "type": "sc.ButtonGui",
                    "isOptional": false
                },
                "versionGui": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "infoGui": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "gfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "_waitForMenu": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "updateButtons": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "refocus",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "PauseScreenGui",
                    "args": []
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc": {
            "fields": {
                "PauseScreenGui": {
                    "type": "PauseScreenGuiConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.gui.screen.title-logo": {},
    "game.feature.gui.screen.title-preset": {
        "sc.TitlePresetMenu.SaLoButton": {
            "fields": {
                "ninepatch": {
                    "type": "ig.NinePatch",
                    "isOptional": false
                },
                "level": {
                    "type": "sc.NumberGui",
                    "isOptional": false
                },
                "location": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "mainText": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "position": {
                    "type": "null",
                    "isOptional": false
                },
                "slot": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "focusGained": {
                    "returnType": "void",
                    "args": []
                },
                "updateDrawables": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "b_",
                            "type": "unknown",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "SaLoButton",
                    "args": [
                        {
                            "name": "slot",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "data",
                            "type": "sc.SavePresetData",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.FocusGui"
            ]
        },
        "sc.TitlePresetMenu": {
            "fields": {
                "buttonInteract": {
                    "type": "ig.ButtonInteractEntry",
                    "isOptional": false
                },
                "itemList": {
                    "type": "sc.ItemListBox",
                    "isOptional": false
                },
                "backButton": {
                    "type": "sc.ButtonGui",
                    "isOptional": false
                },
                "submitSound": {
                    "type": "ig.Sound",
                    "isOptional": false
                },
                "slots": {
                    "type": "sc.TitlePresetMenu.SaLoButton[]",
                    "isOptional": false
                },
                "_loadCallback": {
                    "type": "(loadSlot: number) => void",
                    "isOptional": false
                },
                "_removeCallback": {
                    "type": "() => void",
                    "isOptional": false
                },
                "_doLoad": {
                    "type": "boolean",
                    "isOptional": false
                },
                "_loadSlot": {
                    "type": "number",
                    "isOptional": false
                },
                "_firstTime": {
                    "type": "boolean",
                    "isOptional": false
                },
                "SaLoButton": {
                    "type": "sc.TitlePresetMenu.SaLoButtonConstructor",
                    "isOptional": false
                }
            },
            "functions": {
                "update": {
                    "returnType": "void",
                    "args": []
                },
                "setPos": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "b_",
                            "type": "unknown",
                            "isOptional": false
                        },
                        {
                            "name": "a_",
                            "type": "unknown",
                            "isOptional": false
                        }
                    ]
                },
                "activate": {
                    "returnType": "void",
                    "args": []
                },
                "deactivate": {
                    "returnType": "void",
                    "args": []
                },
                "createList": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "TitlePresetMenu",
                    "args": [
                        {
                            "name": "loadCallback",
                            "type": "(loadSlot: number) => void",
                            "isOptional": false
                        },
                        {
                            "name": "removeCallback",
                            "type": "() => void",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "sc.HeaderMenuPanel"
            ]
        },
        "sc": {
            "fields": {
                "TitlePresetMenu": {
                    "type": "TitlePresetMenuConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.gui.screen.title-screen": {
        "sc.MasterOverlayGui": {
            "fields": {},
            "functions": {
                "init": {
                    "returnType": "MasterOverlayGui",
                    "args": []
                }
            },
            "parents": [
                "ig.GuiElementBase",
                "sc.Model.Observer"
            ]
        },
        "sc": {
            "fields": {
                "MasterOverlayGui": {
                    "type": "MasterOverlayGuiConstructor"
                },
                "TitleScreenGui": {
                    "type": "TitleScreenGuiConstructor"
                },
                "TitleScreenStartGui": {
                    "type": "TitleScreenStartGuiConstructor"
                },
                "TitleScreenButtonGui": {
                    "type": "TitleScreenButtonGuiConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.TitleScreenGui": {
            "fields": {
                "background": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "parallax": {
                    "type": "ig.Parallax",
                    "isOptional": false
                },
                "bgGui": {
                    "type": "ig.ParallaxGui",
                    "isOptional": false
                },
                "startGui": {
                    "type": "sc.TitleScreenStartGui",
                    "isOptional": false
                },
                "buttons": {
                    "type": "sc.TitleScreenButtonGui",
                    "isOptional": false
                },
                "introGui": {
                    "type": "ig.GUI.IntroScreen",
                    "isOptional": false
                },
                "screenInteract": {
                    "type": "sc.ScreenInteractEntry",
                    "isOptional": false
                },
                "isPostInit": {
                    "type": "boolean",
                    "isOptional": false
                },
                "versionGui": {
                    "type": "sc.TextGui",
                    "isOptional": false
                }
            },
            "functions": {
                "postInit": {
                    "returnType": "void",
                    "args": []
                },
                "onInteraction": {
                    "returnType": "void",
                    "args": []
                },
                "_startBg": {
                    "returnType": "void",
                    "args": []
                },
                "_introDone": {
                    "returnType": "void",
                    "args": []
                },
                "_bgCallback": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "a_",
                            "type": "unknown",
                            "isOptional": false
                        },
                        {
                            "name": "b_",
                            "type": "unknown",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "TitleScreenGui",
                    "args": []
                }
            },
            "parents": [
                "ig.GuiElementBase",
                "sc.Model.Observer"
            ]
        },
        "sc.TitleScreenStartGui": {
            "fields": {
                "gfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "timer": {
                    "type": "ig.WeightTimer",
                    "isOptional": false
                }
            },
            "functions": {
                "show": {
                    "returnType": "void",
                    "args": []
                },
                "hide": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "TitleScreenStartGui",
                    "args": []
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc.TitleScreenButtonGui": {
            "fields": {
                "buttonInteract": {
                    "type": "ig.ButtonInteractEntry",
                    "isOptional": false
                },
                "buttonGroup": {
                    "type": "sc.ButtonGroup",
                    "isOptional": false
                },
                "gamepadGui": {
                    "type": "null",
                    "isOptional": false
                },
                "setOptions": {
                    "type": "null",
                    "isOptional": false
                },
                "namedButtons": {
                    "type": "Record<string, sc.ButtonGui>",
                    "isOptional": false
                },
                "presetMenu": {
                    "type": "sc.TitlePresetMenu",
                    "isOptional": false
                },
                "story": {
                    "type": "null",
                    "isOptional": false
                },
                "gameplay": {
                    "type": "null",
                    "isOptional": false
                },
                "puzzle": {
                    "type": "null",
                    "isOptional": false
                },
                "closeButton": {
                    "type": "null",
                    "isOptional": false
                },
                "changelogButton": {
                    "type": "sc.ButtonGui",
                    "isOptional": false
                },
                "perfWarnButton": {
                    "type": "sc.ButtonGui",
                    "isOptional": false
                },
                "changelogGui": {
                    "type": "sc.ChangelogGui",
                    "isOptional": false
                },
                "gameCodeButton": {
                    "type": "sc.ButtonGui",
                    "isOptional": false
                },
                "background": {
                    "type": "ig.ColorGui",
                    "isOptional": false
                },
                "perfWarning": {
                    "type": "boolean",
                    "isOptional": false
                },
                "buttons": {
                    "type": "sc.ButtonGui[]",
                    "isOptional": false
                },
                "_rearrangeAnchor": {
                    "type": "number",
                    "isOptional": false
                },
                "_newGamePlus": {
                    "type": "boolean",
                    "isOptional": false
                },
                "followButton": {
                    "type": "sc.ButtonGui",
                    "isOptional": false
                },
                "dlcButton": {
                    "type": "sc.ButtonGui",
                    "isOptional": false
                }
            },
            "functions": {
                "postInit": {
                    "returnType": "void",
                    "args": []
                },
                "show": {
                    "returnType": "void",
                    "args": []
                },
                "hide": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "skipTransition",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "checkPerformanceWarning": {
                    "returnType": "void",
                    "args": []
                },
                "showPerformanceWarning": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "text",
                            "type": "sc.TextLike",
                            "isOptional": false
                        }
                    ]
                },
                "checkClearSaveFiles": {
                    "returnType": "boolean",
                    "args": []
                },
                "_createButton": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "buttonGroup",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "onButtonPress",
                            "type": "() => void",
                            "isOptional": false
                        },
                        {
                            "name": "namedButtonsName",
                            "type": "string",
                            "isOptional": true
                        }
                    ]
                },
                "_enterLoadMenu": {
                    "returnType": "void",
                    "args": []
                },
                "_enterOptionsMenu": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "TitleScreenButtonGui",
                    "args": []
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        }
    },
    "game.feature.gui.widget.bar-widget": {},
    "game.feature.gui.widget.chest-items": {
        "sc.ItemGuiLayer": {
            "fields": {},
            "functions": {
                "addItem": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "entity",
                            "type": "ig.Entity",
                            "isOptional": false
                        },
                        {
                            "name": "item",
                            "type": "sc.ItemID",
                            "isOptional": false
                        },
                        {
                            "name": "count",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "ItemGuiLayer",
                    "args": []
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc": {
            "fields": {
                "ItemGuiLayer": {
                    "type": "ItemGuiLayerConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.gui.widget.click-box": {
        "sc.CenterMsgBoxGui": {
            "fields": {
                "bgColor": {
                    "type": "string",
                    "isOptional": false
                },
                "msgBox": {
                    "type": "unknown",
                    "isOptional": false
                },
                "textGui": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "textDone": {
                    "type": "boolean",
                    "isOptional": false
                },
                "sccreenInteract": {
                    "type": "unknown",
                    "isOptional": false
                },
                "callback": {
                    "type": "unknown",
                    "isOptional": false
                }
            },
            "functions": {
                "setBoxOffset": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "_onTextFinish": {
                    "returnType": "void",
                    "args": []
                },
                "onInteraction": {
                    "returnType": "void",
                    "args": []
                },
                "_close": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "CenterMsgBoxGui",
                    "args": [
                        {
                            "name": "text",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "sc.TextGui.Settings",
                            "isOptional": false
                        },
                        {
                            "name": "bgColor",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "localAlpha",
                            "type": "unknown",
                            "isOptional": false
                        },
                        {
                            "name": "callback",
                            "type": "unknown",
                            "isOptional": false
                        },
                        {
                            "name": "pauseGui",
                            "type": "unknown",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc": {
            "fields": {
                "CenterMsgBoxGui": {
                    "type": "CenterMsgBoxGuiConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.gui.widget.counter-hud": {
        "ig.GUI.CounterHud": {
            "fields": {},
            "functions": {},
            "parents": [
                "sc.RightHudBoxGui"
            ]
        },
        "ig.GUI.ScoreHud": {
            "fields": {},
            "functions": {},
            "parents": [
                "sc.RightHudBoxGui"
            ]
        },
        "ig.GUI": {
            "fields": {
                "CounterHud": {
                    "type": "GUI.CounterHudConstructor",
                    "isOptional": false
                },
                "ScoreHud": {
                    "type": "GUI.ScoreHudConstructor",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.gui.widget.demo-highscore": {},
    "game.feature.gui.widget.demo-stats": {},
    "game.feature.gui.widget.gamepad-box": {},
    "game.feature.gui.widget.indiegogo-gui": {},
    "game.feature.gui.widget.information": {},
    "game.feature.gui.widget.level-up-hud": {
        "sc.LevelUpContentGui": {
            "fields": {
                "gfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "arrowTimer": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc": {
            "fields": {
                "LevelUpContentGui": {
                    "type": "LevelUpContentGuiConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.gui.widget.modal-dialog": {
        "sc.ModalScreenInteract": {
            "fields": {
                "gfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "msgBox": {
                    "type": "sc.CenterBoxGui",
                    "isOptional": false
                },
                "textGui": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "textDone": {
                    "type": "boolean",
                    "isOptional": false
                },
                "icon": {
                    "type": "number",
                    "isOptional": false
                },
                "screenInteract": {
                    "type": "sc.ScreenInteractEntry",
                    "isOptional": false
                },
                "callback": {
                    "type": "() => void",
                    "isOptional": false
                }
            },
            "functions": {
                "_onTextFinish": {
                    "returnType": "void",
                    "args": []
                },
                "_close": {
                    "returnType": "void",
                    "args": []
                },
                "onInteraction": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "ModalScreenInteract",
                    "args": [
                        {
                            "name": "text",
                            "type": "sc.TextLike",
                            "isOptional": false
                        },
                        {
                            "name": "icon",
                            "type": "sc.DIALOG_INFO_ICON",
                            "isOptional": true
                        },
                        {
                            "name": "iconLeft",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "callback",
                            "type": "() => void",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc": {
            "fields": {
                "ModalScreenInteract": {
                    "type": "ModalScreenInteractConstructor"
                },
                "ModalButtonInteract": {
                    "type": "ModalButtonInteractConstructor"
                },
                "Dialogs": {
                    "type": "Dialogs"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.ModalButtonInteract": {
            "fields": {
                "msgBox": {
                    "type": "sc.CenterBoxGui",
                    "isOptional": false
                },
                "textGui": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "content": {
                    "type": "ig.GuiElementBase",
                    "isOptional": false
                },
                "buttons": {
                    "type": "sc.ButtonGui[]",
                    "isOptional": false
                },
                "buttonInteract": {
                    "type": "ig.ButtonInteractEntry",
                    "isOptional": false
                },
                "buttongroup": {
                    "type": "sc.ButtonGroup",
                    "isOptional": false
                },
                "back": {
                    "type": "sc.ButtonGui",
                    "isOptional": false
                },
                "keepOpen": {
                    "type": "boolean",
                    "isOptional": false
                },
                "data": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "show": {
                    "returnType": "void",
                    "args": []
                },
                "hide": {
                    "returnType": "void",
                    "args": []
                },
                "onBackButtonCheck": {
                    "returnType": "boolean",
                    "args": []
                },
                "init": {
                    "returnType": "ModalButtonInteract",
                    "args": [
                        {
                            "name": "text",
                            "type": "sc.TextLike",
                            "isOptional": false
                        },
                        {
                            "name": "icon",
                            "type": "Nullable<sc.DIALOG_INFO_ICON>",
                            "isOptional": false
                        },
                        {
                            "name": "options",
                            "type": "sc.TextLike[]",
                            "isOptional": false
                        },
                        {
                            "name": "callback",
                            "type": "(button: sc.ButtonGui & { data: number }) => void",
                            "isOptional": false
                        },
                        {
                            "name": "disableSubmitSound",
                            "type": "Nullable<boolean>",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc.Dialogs": {
            "fields": {
                "data": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "showDialog": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "text",
                            "type": "sc.TextLike",
                            "isOptional": false
                        },
                        {
                            "name": "icon",
                            "type": "sc.DIALOG_INFO_ICON",
                            "isOptional": true
                        },
                        {
                            "name": "iconLeft",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "callback",
                            "type": "() => void",
                            "isOptional": true
                        }
                    ]
                },
                "showInfoDialog": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "text",
                            "type": "sc.TextLike",
                            "isOptional": false
                        },
                        {
                            "name": "iconLeft",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "callback",
                            "type": "() => void",
                            "isOptional": true
                        }
                    ]
                },
                "showWarningDialog": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "text",
                            "type": "sc.TextLike",
                            "isOptional": false
                        },
                        {
                            "name": "iconLeft",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "callback",
                            "type": "() => void",
                            "isOptional": true
                        }
                    ]
                },
                "showErrorDialog": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "text",
                            "type": "sc.TextLike",
                            "isOptional": false
                        },
                        {
                            "name": "iconLeft",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "callback",
                            "type": "() => void",
                            "isOptional": true
                        }
                    ]
                },
                "showQuestionDialog": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "text",
                            "type": "sc.TextLike",
                            "isOptional": false
                        },
                        {
                            "name": "iconLeft",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "callback",
                            "type": "() => void",
                            "isOptional": true
                        }
                    ]
                },
                "showChoiceDialog": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "text",
                            "type": "sc.TextLike",
                            "isOptional": false
                        },
                        {
                            "name": "icon",
                            "type": "Nullable<sc.DIALOG_INFO_ICON>",
                            "isOptional": false
                        },
                        {
                            "name": "options",
                            "type": "sc.TextLike[]",
                            "isOptional": false
                        },
                        {
                            "name": "callback",
                            "type": "(\n          button: sc.ButtonGui & { data: number },\n          dialog?: sc.ModalButtonInteract,\n        ) => void",
                            "isOptional": false
                        },
                        {
                            "name": "disableSubmitSound",
                            "type": "Nullable<boolean>",
                            "isOptional": true
                        }
                    ]
                },
                "showConformationDialog": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "text",
                            "type": "sc.TextLike",
                            "isOptional": false
                        },
                        {
                            "name": "icon",
                            "type": "Nullable<sc.DIALOG_INFO_ICON>",
                            "isOptional": false
                        },
                        {
                            "name": "option",
                            "type": "sc.TextLike",
                            "isOptional": false
                        },
                        {
                            "name": "callback",
                            "type": "(\n          button: sc.ButtonGui & { data: number },\n          dialog?: sc.ModalButtonInteract,\n        ) => void",
                            "isOptional": false
                        }
                    ]
                },
                "showYesNoDialog": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "text",
                            "type": "sc.TextLike",
                            "isOptional": false
                        },
                        {
                            "name": "icon",
                            "type": "Nullable<sc.DIALOG_INFO_ICON>",
                            "isOptional": true
                        },
                        {
                            "name": "callback",
                            "type": "Nullable<\n          (button: sc.ButtonGui & { data: number }, dialog?: sc.ModalButtonInteract) => void\n        >",
                            "isOptional": true
                        },
                        {
                            "name": "noSubmitSound",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": []
        }
    },
    "game.feature.gui.widget.sergey-mode": {},
    "game.feature.gui.widget.skip-scene": {},
    "game.feature.gui.widget.social": {},
    "game.feature.gui.widget.tutorial-marker": {
        "sc.TUT_BOX_POINTING_DIR_BASE": {
            "fields": {
                "alignX": {
                    "type": "ig.GUI_ALIGN",
                    "isOptional": false
                },
                "alignY": {
                    "type": "ig.GUI_ALIGN",
                    "isOptional": false
                },
                "flipped": {
                    "type": "boolean",
                    "isOptional": false
                },
                "scaleX": {
                    "type": "number",
                    "isOptional": false
                },
                "scaleY": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc": {
            "fields": {
                "TUT_BOX_POINTING_DIR": {
                    "type": "Record<\n      'BOTTOM_RIGHT' | 'BOTTOM_LEFT' | 'TOP_RIGHT' | 'TOP_LEFT',\n      sc.TUT_BOX_POINTING_DIR_BASE\n    >"
                },
                "TutorialPointingGui": {
                    "type": "TutorialPointingGuiConstructor"
                },
                "TutorialShadowGui": {
                    "type": "TutorialShadowGuiConstructor"
                },
                "TutorialMarkerGui": {
                    "type": "TutorialMarkerGuiConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.TutorialPointingGui": {
            "fields": {
                "gfx": {
                    "type": "ig.Image",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "TutorialPointingGui",
                    "args": [
                        {
                            "name": "dir",
                            "type": "Optional<Nullable<sc.TUT_BOX_POINTING_DIR_BASE>>",
                            "isOptional": false
                        },
                        {
                            "name": "text",
                            "type": "sc.TextLike",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc.TutorialShadowGui": {
            "fields": {
                "x": {
                    "type": "number",
                    "isOptional": false
                },
                "y": {
                    "type": "number",
                    "isOptional": false
                },
                "width": {
                    "type": "number",
                    "isOptional": false
                },
                "height": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "TutorialShadowGui",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "width",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "height",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc.TutorialMarkerGui": {
            "fields": {
                "shadowGui": {
                    "type": "sc.TutorialShadowGui",
                    "isOptional": false
                },
                "highlightGui": {
                    "type": "sc.WhiteLineBox",
                    "isOptional": false
                },
                "pointerGui": {
                    "type": "sc.TutorialPointingGui",
                    "isOptional": false
                },
                "callback": {
                    "type": "() => void",
                    "isOptional": false
                },
                "screenInteract": {
                    "type": "sc.ScreenInteractEntry",
                    "isOptional": false
                },
                "sounds": {
                    "type": "{ start: ig.Sound }",
                    "isOptional": false
                }
            },
            "functions": {
                "onInteraction": {
                    "returnType": "void",
                    "args": []
                },
                "_close": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "TutorialMarkerGui",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "width",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "height",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "text",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "direction",
                            "type": "unknown",
                            "isOptional": false
                        },
                        {
                            "name": "connectPos",
                            "type": "unknown",
                            "isOptional": false
                        },
                        {
                            "name": "stopTime",
                            "type": "boolean",
                            "isOptional": false
                        },
                        {
                            "name": "doneCallback",
                            "type": "() => void",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc.TutorialMarkerGui.sounds": {
            "fields": {
                "start": {
                    "type": "ig.Sound",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.gui.widget.tutorial-start-gui": {},
    "game.feature.interact.gui.interact-gui": {
        "ig.GUI.Interact": {
            "fields": {
                "iconState": {
                    "type": "number",
                    "isOptional": false
                },
                "gfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "target": {
                    "type": "ig.Entity",
                    "isOptional": false
                },
                "offset": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "icon": {
                    "type": "sc.MapInteractIcon",
                    "isOptional": false
                },
                "timer": {
                    "type": "number",
                    "isOptional": false
                },
                "offsetTimer": {
                    "type": "number",
                    "isOptional": false
                },
                "overlayIcon": {
                    "type": "sc.InteractOverlayIcon",
                    "isOptional": false
                },
                "subGui": {
                    "type": "sc.XenoDialogIcon | sc.IconHoverTextGui | sc.TradeIconGui",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "Interact",
                    "args": [
                        {
                            "name": "target",
                            "type": "ig.Entity",
                            "isOptional": false
                        },
                        {
                            "name": "icon",
                            "type": "sc.MapInteractIcon",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "ig.GUI": {
            "fields": {
                "Interact": {
                    "type": "InteractConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.InteractOverlayIcon": {
            "fields": {
                "interactGui": {
                    "type": "ig.GUI.Interact",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "InteractOverlayIcon",
                    "args": [
                        {
                            "name": "interactGui",
                            "type": "ig.GUI.Interact",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc": {
            "fields": {
                "InteractOverlayIcon": {
                    "type": "InteractOverlayIconConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.interact.map-interact": {
        "sc.MapInteract": {
            "fields": {
                "entries": {
                    "type": "MapInteractEntry[]",
                    "isOptional": false
                },
                "focusEntry": {
                    "type": "Nullable<MapInteractEntry>",
                    "isOptional": false
                },
                "interacting": {
                    "type": "boolean",
                    "isOptional": false
                },
                "hidden": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "addEntry": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "entry",
                            "type": "MapInteractEntry",
                            "isOptional": false
                        }
                    ]
                },
                "removeEntry": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "entry",
                            "type": "MapInteractEntry",
                            "isOptional": false
                        }
                    ]
                },
                "onPreUpdate": {
                    "returnType": "void",
                    "args": []
                },
                "updateHideStatus": {
                    "returnType": "void",
                    "args": []
                },
                "forceHide": {
                    "returnType": "void",
                    "args": []
                },
                "forceShow": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "MapInteract",
                    "args": []
                }
            },
            "parents": [
                "ig.GameAddon"
            ]
        },
        "sc": {
            "fields": {
                "MapInteract": {
                    "type": "MapInteractConstructor"
                },
                "mapInteract": {
                    "type": "MapInteract"
                },
                "MapInteractIcon": {
                    "type": "MapInteractIconConstructor"
                },
                "MapInteractEntry": {
                    "type": "MapInteractEntryConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.MapInteractIcon": {
            "fields": {},
            "functions": {
                "init": {
                    "returnType": "MapInteractIcon",
                    "args": [
                        {
                            "name": "tilesheet",
                            "type": "ig.TileSheet",
                            "isOptional": false
                        },
                        {
                            "name": "anims",
                            "type": "Partial<Record<keyof typeof sc.INTERACT_ENTRY_STATE, number[]>>",
                            "isOptional": false
                        },
                        {
                            "name": "frameTime",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "sc.MapInteractEntry": {
            "fields": {
                "entity": {
                    "type": "ig.Entity",
                    "isOptional": false
                },
                "handler": {
                    "type": "ig.Entity",
                    "isOptional": false
                },
                "offset": {
                    "type": "unknown",
                    "isOptional": false
                },
                "state": {
                    "type": "sc.INTERACT_ENTRY_STATE",
                    "isOptional": false
                },
                "icon": {
                    "type": "sc.MapInteractIcon",
                    "isOptional": false
                },
                "interrupting": {
                    "type": "boolean",
                    "isOptional": false
                },
                "zCondition": {
                    "type": "sc.INTERACT_Z_CONDITION",
                    "isOptional": false
                },
                "gui": {
                    "type": "ig.GUI.Interact",
                    "isOptional": false
                },
                "blockedDuringCombat": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "setIcon": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "icon",
                            "type": "sc.MapInteractIcon",
                            "isOptional": false
                        }
                    ]
                },
                "setSubGui": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "gui",
                            "type": "ig.GUI.Interact['subGui']",
                            "isOptional": false
                        }
                    ]
                },
                "setState": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "state",
                            "type": "sc.INTERACT_ENTRY_STATE",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "MapInteractEntry",
                    "args": [
                        {
                            "name": "entity",
                            "type": "ig.Entity",
                            "isOptional": false
                        },
                        {
                            "name": "handler",
                            "type": "ig.Entity",
                            "isOptional": false
                        },
                        {
                            "name": "icon",
                            "type": "sc.MapInteractIcon",
                            "isOptional": false
                        },
                        {
                            "name": "zCondition",
                            "type": "sc.INTERACT_Z_CONDITION",
                            "isOptional": false
                        },
                        {
                            "name": "interrupting",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class"
            ]
        }
    },
    "game.feature.interact.plug-in": {},
    "game.feature.interact.screen-interact": {
        "sc.ScreenInteractEntry": {
            "fields": {
                "callbackObject": {
                    "type": "{ onInteraction: () => void }",
                    "isOptional": false
                },
                "withEscape": {
                    "type": "boolean",
                    "isOptional": false
                },
                "autoCtrlIgnore": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "ScreenInteractEntry",
                    "args": [
                        {
                            "name": "callbackObject",
                            "type": "sc.ScreenInteractEntry['callbackObject']",
                            "isOptional": false
                        },
                        {
                            "name": "withEscape",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": [
                "ig.InteractEntry"
            ]
        },
        "sc.ScreenInteractEntry.callbackObject": {
            "fields": {
                "onInteraction": {
                    "type": "() => void",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc": {
            "fields": {
                "ScreenInteractEntry": {
                    "type": "ScreenInteractEntryConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.interact.skip-interact": {
        "sc.SkipInteractEntry": {
            "fields": {
                "handler": {
                    "type": "sc.XenoDialogIcon | sc.SideMessageHudGui",
                    "isOptional": false
                },
                "order": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "isActive": {
                    "returnType": "boolean",
                    "args": []
                },
                "init": {
                    "returnType": "SkipInteractEntry",
                    "args": []
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "sc": {
            "fields": {
                "SkipInteractEntry": {
                    "type": "SkipInteractEntryConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.inventory.detectors": {
        "sc.Detectors": {
            "fields": {},
            "functions": {
                "onLevelLoaded": {
                    "returnType": "void",
                    "args": []
                },
                "onDeferredUpdate": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "Detectors",
                    "args": []
                }
            },
            "parents": [
                "ig.GameAddon",
                "sc.Model.Observer"
            ]
        },
        "sc": {
            "fields": {
                "Detectors": {
                    "type": "DetectorsConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.inventory.inventory": {
        "sc.Inventory.Item": {
            "fields": {
                "name": {
                    "type": "ig.LangLabel.Data",
                    "isOptional": false
                },
                "description": {
                    "type": "ig.LangLabel.Data",
                    "isOptional": false
                },
                "type": {
                    "type": "sc.ITEMS_TYPES",
                    "isOptional": false
                },
                "icon": {
                    "type": "string",
                    "isOptional": false
                },
                "order": {
                    "type": "number",
                    "isOptional": false
                },
                "level": {
                    "type": "number",
                    "isOptional": false
                },
                "effect": {
                    "type": "ig.EffectHandle.Settings",
                    "isOptional": false
                },
                "rarity": {
                    "type": "sc.ITEMS_RARITY",
                    "isOptional": false
                },
                "cost": {
                    "type": "number",
                    "isOptional": false
                },
                "noTrack": {
                    "type": "boolean",
                    "isOptional": false
                },
                "sources": {
                    "type": "sc.Inventory.ItemSource[]",
                    "isOptional": false
                },
                "equipType": {
                    "type": "Nullable<sc.ITEMS_EQUIP_TYPES>",
                    "isOptional": true
                },
                "isScalable": {
                    "type": "Nullable<boolean>",
                    "isOptional": true
                },
                "stats": {
                    "type": "Nullable<string[]>",
                    "isOptional": true
                },
                "time": {
                    "type": "Nullable<number>",
                    "isOptional": true
                },
                "isBuff": {
                    "type": "boolean",
                    "isOptional": true
                },
                "foodSprite": {
                    "type": "string",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.Inventory": {
            "fields": {
                "type": {
                    "type": "'OTHER'",
                    "isOptional": false
                },
                "value": {
                    "type": "{\n              text: ig.LangLabel.Data;\n              icon: ItemSource['type'];\n              subText?: Nullable<ig.LangLabel.Data>;\n              arrow: boolean;\n            }",
                    "isOptional": false
                },
                "items": {
                    "type": "Inventory.Item[]",
                    "isOptional": false
                },
                "scalable": {
                    "type": "sc.ItemID[]",
                    "isOptional": false
                }
            },
            "functions": {
                "updateScaledEquipment": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "newLevel",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "isScalable": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "id",
                            "type": "sc.ItemID",
                            "isOptional": false
                        }
                    ]
                },
                "getItem": {
                    "returnType": "Nullable<sc.Inventory.Item>",
                    "args": [
                        {
                            "name": "id",
                            "type": "sc.ItemID",
                            "isOptional": false
                        }
                    ]
                },
                "getItemName": {
                    "returnType": "Nullable<string>",
                    "args": [
                        {
                            "name": "id",
                            "type": "sc.ItemID",
                            "isOptional": false
                        }
                    ]
                },
                "getItemByName": {
                    "returnType": "Nullable<sc.Inventory.Item>",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "getItemLevel": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "id",
                            "type": "sc.ItemID",
                            "isOptional": false
                        }
                    ]
                },
                "getItemID": {
                    "returnType": "sc.ItemID",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "getBuffString": {
                    "returnType": "string | undefined",
                    "args": [
                        {
                            "name": "id",
                            "type": "sc.ItemID",
                            "isOptional": false
                        },
                        {
                            "name": "a_",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "statChangeSettings",
                            "type": "string[]",
                            "isOptional": true
                        }
                    ]
                },
                "areStatChangesRanksUniform": {
                    "returnType": "sc.StatChangeSettings.Grade",
                    "args": [
                        {
                            "name": "statNames",
                            "type": "sc.StatChange.StatName[]",
                            "isOptional": false
                        }
                    ]
                },
                "isBuffID": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "id",
                            "type": "sc.ItemID",
                            "isOptional": false
                        }
                    ]
                },
                "isEquipID": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "id",
                            "type": "sc.ItemID",
                            "isOptional": false
                        }
                    ]
                },
                "getRaritySuffix": {
                    "returnType": "string",
                    "args": [
                        {
                            "name": "rarity",
                            "type": "sc.ITEMS_RARITY",
                            "isOptional": false
                        }
                    ]
                },
                "getItemNameWithIcon": {
                    "returnType": "string",
                    "args": [
                        {
                            "name": "id",
                            "type": "sc.ItemID",
                            "isOptional": false
                        }
                    ]
                },
                "getItemIcon": {
                    "returnType": "string",
                    "args": [
                        {
                            "name": "id",
                            "type": "sc.ItemID",
                            "isOptional": false
                        }
                    ]
                },
                "getItemDescription": {
                    "returnType": "string",
                    "args": [
                        {
                            "name": "id",
                            "type": "sc.ItemID",
                            "isOptional": false
                        }
                    ]
                },
                "getItemRarity": {
                    "returnType": "sc.ITEMS_RARITY",
                    "args": [
                        {
                            "name": "id",
                            "type": "sc.ItemID",
                            "isOptional": false
                        }
                    ]
                },
                "getItemSubType": {
                    "returnType": "Nullable<sc.ITEMS_EQUIP_TYPES>",
                    "args": [
                        {
                            "name": "id",
                            "type": "sc.ItemID",
                            "isOptional": false
                        }
                    ]
                },
                "isConsumable": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "id",
                            "type": "sc.ItemID",
                            "isOptional": false
                        }
                    ]
                },
                "getTotalItemsUnlocked": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "percent",
                            "type": "boolean",
                            "isOptional": false
                        },
                        {
                            "name": "type",
                            "type": "sc.ITEMS_TYPES",
                            "isOptional": true
                        },
                        {
                            "name": "equipType",
                            "type": "sc.ITEMS_EQUIP_TYPES",
                            "isOptional": true
                        },
                        {
                            "name": "printErrorWhenItemMissing",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "_isBuff": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "item",
                            "type": "sc.Inventory.Item",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "Inventory",
                    "args": []
                }
            },
            "parents": [
                "ig.SingleLoadable"
            ]
        },
        "sc.Inventory.value": {
            "fields": {
                "text": {
                    "type": "ig.LangLabel.Data",
                    "isOptional": false
                },
                "icon": {
                    "type": "ItemSource['type']",
                    "isOptional": false
                },
                "subText": {
                    "type": "Nullable<ig.LangLabel.Data>",
                    "isOptional": true
                },
                "arrow": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc": {
            "fields": {
                "Inventory": {
                    "type": "InventoryConstructor"
                },
                "inventory": {
                    "type": "Inventory"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.inventory.item-level-scaling": {},
    "game.feature.inventory.plug-in": {},
    "game.feature.map-content.entities.elevator": {
        "sc.ElevatorType.Ground": {
            "fields": {
                "gfx": {
                    "type": "string",
                    "isOptional": false
                },
                "x": {
                    "type": "number",
                    "isOptional": false
                },
                "y": {
                    "type": "number",
                    "isOptional": false
                },
                "w": {
                    "type": "number",
                    "isOptional": false
                },
                "h": {
                    "type": "number",
                    "isOptional": false
                },
                "flipX": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.ElevatorType": {
            "fields": {
                "size": {
                    "type": "Vec3",
                    "isOptional": false
                },
                "ground": {
                    "type": "sc.ElevatorType.Ground",
                    "isOptional": false
                },
                "markerDir": {
                    "type": "keyof typeof ig.ActorEntity.FACE4",
                    "isOptional": false
                },
                "stuckProbility": {
                    "type": "number",
                    "isOptional": false
                },
                "switchEntry": {
                    "type": "{\n        pos: Vec3;\n        size: Vec3;\n        collType?: ig.COLLTYPE;\n        anims: ig.AnimationSheet.Settings;\n        showFx: { sheet: string; name: string };\n        hideFx: { sheet: string; name: string };\n      }",
                    "isOptional": false
                },
                "noEndRunble": {
                    "type": "boolean",
                    "isOptional": true
                },
                "speed": {
                    "type": "number",
                    "isOptional": true
                },
                "partyOffset": {
                    "type": "Vec2[]",
                    "isOptional": true
                },
                "singlePerson": {
                    "type": "boolean",
                    "isOptional": true
                },
                "startDelta": {
                    "type": "number",
                    "isOptional": true
                },
                "posOffset": {
                    "type": "Vec2",
                    "isOptional": true
                },
                "closeFrontDoor": {
                    "type": "boolean",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.ElevatorType.switchEntry": {
            "fields": {
                "pos": {
                    "type": "Vec3",
                    "isOptional": false
                },
                "size": {
                    "type": "Vec3",
                    "isOptional": false
                },
                "collType": {
                    "type": "ig.COLLTYPE",
                    "isOptional": true
                },
                "anims": {
                    "type": "ig.AnimationSheet.Settings",
                    "isOptional": false
                },
                "showFx": {
                    "type": "{ sheet: string; name: string }",
                    "isOptional": false
                },
                "hideFx": {
                    "type": "{ sheet: string; name: string }",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.ElevatorType.switchEntry.showFx": {
            "fields": {
                "sheet": {
                    "type": "string",
                    "isOptional": false
                },
                "name": {
                    "type": "string",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.ElevatorType.switchEntry.hideFx": {
            "fields": {
                "sheet": {
                    "type": "string",
                    "isOptional": false
                },
                "name": {
                    "type": "string",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.ELEVATOR_TYPE": {
            "fields": {
                "cargoShip": {
                    "type": "sc.ElevatorType",
                    "isOptional": false
                },
                "coldDng": {
                    "type": "sc.ElevatorType",
                    "isOptional": false
                },
                "lab": {
                    "type": "sc.ElevatorType",
                    "isOptional": false
                },
                "labSmall": {
                    "type": "sc.ElevatorType",
                    "isOptional": false
                },
                "labSmallOutside": {
                    "type": "sc.ElevatorType",
                    "isOptional": false
                },
                "aridInner": {
                    "type": "sc.ElevatorType",
                    "isOptional": false
                },
                "aridInnerHuge": {
                    "type": "sc.ElevatorType",
                    "isOptional": false
                },
                "aridDngWeird": {
                    "type": "sc.ElevatorType",
                    "isOptional": false
                },
                "aridDngOutside": {
                    "type": "sc.ElevatorType",
                    "isOptional": false
                },
                "basinKeep": {
                    "type": "sc.ElevatorType",
                    "isOptional": false
                },
                "finalDngMedium": {
                    "type": "sc.ElevatorType",
                    "isOptional": false
                },
                "finalDngLarge": {
                    "type": "sc.ElevatorType",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc": {
            "fields": {
                "ELEVATOR_TYPE": {
                    "type": "sc.ELEVATOR_TYPE"
                },
                "ElevatorModel": {
                    "type": "ElevatorModelConstructor"
                },
                "elevatorModel": {
                    "type": "sc.ElevatorModel"
                },
                "ElevatorSwitchEntity": {
                    "type": "ElevatorSwitchEntityConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.ElevatorModel": {
            "fields": {
                "sound": {
                    "type": "Nullable<ig.Sound>",
                    "isOptional": false
                },
                "soundHandle": {
                    "type": "Nullable<ig.SoundHandle>",
                    "isOptional": false
                }
            },
            "functions": {
                "startMoveSound": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "sound",
                            "type": "ig.Sound",
                            "isOptional": false
                        }
                    ]
                },
                "endMoveSound": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "playAgain",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "onStoragePreLoad": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "ElevatorModel",
                    "args": []
                }
            },
            "parents": [
                "ig.GameAddon",
                "ig.Vars.Accessor"
            ]
        },
        "ig.ENTITY.Elevator.DestinationConfig": {
            "fields": {
                "label": {
                    "type": "ig.LangLabel.Data",
                    "isOptional": false
                },
                "zMoveOffset": {
                    "type": "number",
                    "isOptional": false
                },
                "teleportMap": {
                    "type": "string",
                    "isOptional": false
                },
                "teleportMarker": {
                    "type": "string",
                    "isOptional": false
                },
                "activeCondition": {
                    "type": "boolean",
                    "isOptional": true
                },
                "showCondition": {
                    "type": "boolean",
                    "isOptional": true
                },
                "addedSteps": {
                    "type": "ig.EventStepBase.Settings[]",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ENTITY.Elevator.Settings": {
            "fields": {
                "map": {
                    "type": "string",
                    "isOptional": false
                },
                "marker": {
                    "type": "string",
                    "isOptional": false
                },
                "moveHeight": {
                    "type": "number",
                    "isOptional": false
                },
                "faceDir": {
                    "type": "keyof typeof ig.ActorEntity.FACE8",
                    "isOptional": true
                },
                "elevatorType": {
                    "type": "keyof typeof sc.ELEVATOR_TYPE",
                    "isOptional": false
                },
                "destinations": {
                    "type": "DestinationConfig[]",
                    "isOptional": false
                },
                "condition": {
                    "type": "string",
                    "isOptional": true
                },
                "blockEvent": {
                    "type": "ig.EventStepBase.Settings",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": [
                "ig.Entity.Settings"
            ]
        },
        "ig.ENTITY.Elevator": {
            "fields": {
                "height": {
                    "type": "number",
                    "isOptional": false
                },
                "markerDir": {
                    "type": "keyof typeof ig.ActorEntity.FACE8",
                    "isOptional": true
                },
                "markerFaceDir": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "elevatorData": {
                    "type": "sc.ElevatorType",
                    "isOptional": false
                },
                "ground": {
                    "type": "sc.ElevatorType.Ground",
                    "isOptional": false
                },
                "groundGfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "condition": {
                    "type": "ig.VarCondition",
                    "isOptional": false
                },
                "startZ": {
                    "type": "number",
                    "isOptional": false
                },
                "targetZ": {
                    "type": "number",
                    "isOptional": true
                },
                "stopDelay": {
                    "type": "number",
                    "isOptional": false
                },
                "elevatorVel": {
                    "type": "number",
                    "isOptional": false
                },
                "destinations": {
                    "type": "ig.ENTITY.Elevator.Destination[]",
                    "isOptional": false
                },
                "stuckTimer": {
                    "type": "number",
                    "isOptional": false
                },
                "blockEvent": {
                    "type": "ig.Event",
                    "isOptional": false
                },
                "blockEventCondition": {
                    "type": "ig.VarCondition",
                    "isOptional": false
                },
                "switchEntity": {
                    "type": "sc.ElevatorSwitchEntity",
                    "isOptional": false
                },
                "sounds": {
                    "type": "Record<'start' | 'end', ig.Sound>",
                    "isOptional": false
                },
                "doTeleport": {
                    "type": "boolean",
                    "isOptional": false
                },
                "_wm": {
                    "type": "ig.Config",
                    "isOptional": false
                },
                "moveHeight": {
                    "type": "number",
                    "isOptional": false
                },
                "faceDir": {
                    "type": "keyof typeof ig.ActorEntity.FACE8",
                    "isOptional": true
                }
            },
            "functions": {
                "initDestinatins": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "destinations",
                            "type": "ig.ENTITY.Elevator.DestinationConfig[]",
                            "isOptional": false
                        }
                    ]
                },
                "initSprites": {
                    "returnType": "void",
                    "args": []
                },
                "getCurrentDest": {
                    "returnType": "number",
                    "args": []
                },
                "pressSwitch": {
                    "returnType": "void",
                    "args": []
                },
                "moveToDestination": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "destinationIndex",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "performTeleport": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "destination",
                            "type": "ig.ENTITY.Elevator.Destination",
                            "isOptional": false
                        }
                    ]
                },
                "_addMoveEvent": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "steps",
                            "type": "ig.EventStepBase.Settings[]",
                            "isOptional": false
                        },
                        {
                            "name": "entity",
                            "type": "Nullable<ig.Entity>",
                            "isOptional": false
                        },
                        {
                            "name": "offsetX",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "offsetY",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "wait",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "showElevatorOptions": {
                    "returnType": "void",
                    "args": []
                },
                "_addWaitSteps": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "steps",
                            "type": "ig.EventStepBase.Settings[]",
                            "isOptional": false
                        }
                    ]
                },
                "setArrived": {
                    "returnType": "void",
                    "args": []
                },
                "deferredUpdate": {
                    "returnType": "void",
                    "args": []
                },
                "varsChanged": {
                    "returnType": "void",
                    "args": []
                },
                "applyMarkerPosition": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "entity",
                            "type": "ig.Entity",
                            "isOptional": false
                        }
                    ]
                },
                "onPostPlacementAction": {
                    "returnType": "void",
                    "args": []
                },
                "placeEntity": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "entity",
                            "type": "ig.Entity",
                            "isOptional": false
                        },
                        {
                            "name": "offset",
                            "type": "Vec2",
                            "isOptional": true
                        },
                        {
                            "name": "getLevelByStartZ",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "init": {
                    "returnType": "Elevator",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "ig.ENTITY.Elevator.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Entity"
            ]
        },
        "ig.ENTITY": {
            "fields": {
                "Elevator": {
                    "type": "ElevatorConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.ElevatorSwitchEntity.Settings": {
            "fields": {
                "ground": {
                    "type": "ig.ENTITY.Elevator",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.ElevatorSwitchEntity": {
            "fields": {
                "groundEntity": {
                    "type": "ig.ENTITY.Elevator",
                    "isOptional": false
                },
                "interactEntry": {
                    "type": "sc.MapInteractEntry",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "ElevatorSwitchEntity",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "sc.ElevatorSwitchEntity.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.AnimatedEntity"
            ]
        }
    },
    "game.feature.map-content.entities.jump-panel": {
        "ig.ENTITY.JumpPanelFar.Settings": {
            "fields": {
                "panelType": {
                    "type": "'NORTH' | 'EAST' | 'SOUTH' | 'WEST'",
                    "isOptional": true
                },
                "jumpDistance": {
                    "type": "'FALL' | 'FALL_LONG' | '9' | '10' | '11' | '12' | '14' | '16' | '18' | '20' | '22' | '24' | '26' | '28' | '30' | '32' | '34' | '36' | '48' | '54'",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ENTITY.JumpPanelFar": {
            "fields": {
                "panelType": {
                    "type": "{ dir: Vec2, size: Vec2, tileOffset: number, flipX: boolean, gfxOffset: Vec2 }",
                    "isOptional": false
                },
                "jumpHeightData": {
                    "type": "null",
                    "isOptional": false
                },
                "jumpDistance": {
                    "type": "{ zVel: number, height: number, speed: number, effectDuration: number }",
                    "isOptional": false
                },
                "condition": {
                    "type": "ig.VarCondition",
                    "isOptional": false
                },
                "isOn": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "onTopEntityJumpFar": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "entity",
                            "type": "ig.ENTITY.Combatant",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "JumpPanelFar",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "ig.ENTITY.JumpPanelFar.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.AnimatedEntity"
            ]
        },
        "ig.ENTITY.JumpPanelFar.panelType": {
            "fields": {
                "dir": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "size": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "tileOffset": {
                    "type": "number",
                    "isOptional": false
                },
                "flipX": {
                    "type": "boolean",
                    "isOptional": false
                },
                "gfxOffset": {
                    "type": "Vec2",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ENTITY.JumpPanelFar.jumpDistance": {
            "fields": {
                "zVel": {
                    "type": "number",
                    "isOptional": false
                },
                "height": {
                    "type": "number",
                    "isOptional": false
                },
                "speed": {
                    "type": "number",
                    "isOptional": false
                },
                "effectDuration": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ENTITY": {
            "fields": {
                "JumpPanelFar": {
                    "type": "JumpPanelFarConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.map-content.entities.rhombus-point": {},
    "game.feature.map-content.entities.teleport-central": {
        "ig.ENTITY.TeleportField.Settings": {
            "fields": {
                "central": {
                    "type": "{ global: boolean; name: string }",
                    "isOptional": true
                },
                "global": {
                    "type": "boolean",
                    "isOptional": false
                },
                "name": {
                    "type": "string",
                    "isOptional": false
                },
                "map": {
                    "type": "string",
                    "isOptional": false
                },
                "marker": {
                    "type": "string",
                    "isOptional": false
                },
                "dir": {
                    "type": "keyof typeof ig.ActorEntity.FACE4",
                    "isOptional": true
                },
                "pseudoExit": {
                    "type": "boolean",
                    "isOptional": true
                },
                "longTelCond": {
                    "type": "string",
                    "isOptional": true
                },
                "gfxType": {
                    "type": "| 'AR'\n          | 'AR_FINAL'\n          | 'BERGEN_LEFT'\n          | 'HEAT_RIGHT'\n          | 'RHOMBUS_SQR_LEFT'\n          | 'RHOMBUS_SQR_RIGHT'\n          | 'RHOMBUS_SQR_STATION'\n          | 'RHOMBUS_SQR_STATION_START'\n          | 'SOLID'\n          | 'WAVE_DOWN'\n          | 'WAVE_UP'",
                    "isOptional": false
                },
                "blockEvent": {
                    "type": "ig.EventStepBase.Settings",
                    "isOptional": true
                },
                "blockEventCondition": {
                    "type": "string",
                    "isOptional": true
                },
                "teleportLabel": {
                    "type": "ig.LangLabel.Data",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": [
                "ig.Entity.Settings"
            ]
        },
        "ig.ENTITY.TeleportField": {
            "fields": {
                "centralName": {
                    "type": "string",
                    "isOptional": false
                },
                "map": {
                    "type": "string",
                    "isOptional": false
                },
                "marker": {
                    "type": "string",
                    "isOptional": false
                },
                "dir": {
                    "type": "keyof typeof ig.ActorEntity.FACE4",
                    "isOptional": false
                },
                "glowHandle": {
                    "type": "ig.EffectHandle",
                    "isOptional": false
                },
                "glowFxReplace": {
                    "type": "ig.EffectHandle",
                    "isOptional": false
                },
                "hideFxReplace": {
                    "type": "ig.EffectHandle",
                    "isOptional": false
                },
                "initialized": {
                    "type": "boolean",
                    "isOptional": false
                },
                "longTelCond": {
                    "type": "ig.VarCondition",
                    "isOptional": false
                },
                "teleportIcon": {
                    "type": "sc.MapInteractIcon",
                    "isOptional": false
                },
                "interactEntry": {
                    "type": "sc.MapInteractEntry",
                    "isOptional": false
                },
                "effects": {
                    "type": "{ upgrade: ig.EffectSheet; puzzle: ig.EffectSheet; teleport: ig.EffectSheet }",
                    "isOptional": false
                },
                "blockEvent": {
                    "type": "ig.Event",
                    "isOptional": true
                },
                "blockEventCondition": {
                    "type": "ig.VarCondition",
                    "isOptional": true
                },
                "gfxType": {
                    "type": "unknown",
                    "isOptional": false
                }
            },
            "functions": {
                "onInteraction": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "TeleportField",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "ig.ENTITY.TeleportField.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.AnimatedEntity"
            ]
        },
        "ig.ENTITY.TeleportField.effects": {
            "fields": {
                "upgrade": {
                    "type": "ig.EffectSheet",
                    "isOptional": false
                },
                "puzzle": {
                    "type": "ig.EffectSheet",
                    "isOptional": false
                },
                "teleport": {
                    "type": "ig.EffectSheet",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ENTITY": {
            "fields": {
                "TeleportField": {
                    "type": "TeleportFieldConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.map-content.gui.icon-hover-text": {
        "sc.IconHoverTextGui": {
            "fields": {
                "showOnNear": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "setIconState": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "state",
                            "type": "sc.INTERACT_ENTRY_STATE",
                            "isOptional": false
                        }
                    ]
                },
                "isActive": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "state",
                            "type": "sc.INTERACT_ENTRY_STATE",
                            "isOptional": false
                        }
                    ]
                },
                "remove": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "IconHoverTextGui",
                    "args": [
                        {
                            "name": "text",
                            "type": "sc.TextLike",
                            "isOptional": false
                        },
                        {
                            "name": "yOffset",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "showOnNear",
                            "type": "boolean",
                            "isOptional": false
                        },
                        {
                            "name": "title",
                            "type": "string",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": [
                "ig.BoxGui"
            ]
        },
        "sc": {
            "fields": {
                "IconHoverTextGui": {
                    "type": "IconHoverTextGuiConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.map-content.gui.rhombus-map": {},
    "game.feature.map-content.map-style": {},
    "game.feature.map-content.plug-in": {},
    "game.feature.map-content.prop-interact": {
        "sc.PROP_INTERACT_ICONS_BASE": {
            "fields": {
                "noEvent": {
                    "type": "sc.MapInteractIcon",
                    "isOptional": false
                },
                "withEvent": {
                    "type": "sc.MapInteractIcon",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc": {
            "fields": {
                "PROP_INTERACT_ICONS": {
                    "type": "{\n      INFO: sc.PROP_INTERACT_ICONS_BASE;\n      GRAB: sc.PROP_INTERACT_ICONS_BASE;\n    }"
                },
                "INFO": {
                    "type": "sc.PROP_INTERACT_ICONS_BASE",
                    "isOptional": false
                },
                "GRAB": {
                    "type": "sc.PROP_INTERACT_ICONS_BASE",
                    "isOptional": false
                },
                "PropInteract": {
                    "type": "PropInteractConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.PropInteract.Settings": {
            "fields": {
                "icon": {
                    "type": "keyof typeof sc.PROP_INTERACT_ICONS",
                    "isOptional": true
                },
                "event": {
                    "type": "unknown",
                    "isOptional": true
                },
                "permaEffect": {
                    "type": "ig.EffectHandle.Settings",
                    "isOptional": true
                },
                "combatOkay": {
                    "type": "boolean",
                    "isOptional": true
                },
                "cutsceneType": {
                    "type": "ig.EVENT_TYPE",
                    "isOptional": true
                },
                "title": {
                    "type": "ig.LangLabel.Data",
                    "isOptional": true
                },
                "hoverText": {
                    "type": "ig.LangLabel.Data",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.PropInteract": {
            "fields": {
                "prop": {
                    "type": "ig.ENTITY.Prop",
                    "isOptional": false
                },
                "icon": {
                    "type": "sc.PROP_INTERACT_ICONS_BASE",
                    "isOptional": false
                },
                "interactEntry": {
                    "type": "sc.MapInteractEntry",
                    "isOptional": false
                },
                "permaEffect": {
                    "type": "ig.EffectHandle",
                    "isOptional": true
                },
                "event": {
                    "type": "ig.Event",
                    "isOptional": true
                },
                "combatOkay": {
                    "type": "boolean",
                    "isOptional": false
                },
                "cutsceneType": {
                    "type": "ig.EVENT_TYPE",
                    "isOptional": true
                }
            },
            "functions": {
                "onShow": {
                    "returnType": "true | undefined",
                    "args": []
                },
                "onPermaUpdate": {
                    "returnType": "void",
                    "args": []
                },
                "onHide": {
                    "returnType": "void",
                    "args": []
                },
                "onKill": {
                    "returnType": "void",
                    "args": []
                },
                "onInteraction": {
                    "returnType": "boolean",
                    "args": []
                },
                "init": {
                    "returnType": "PropInteract",
                    "args": [
                        {
                            "name": "prop",
                            "type": "ig.ENTITY.Prop",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "sc.PropInteract.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class"
            ]
        }
    },
    "game.feature.map-content.sc-doors": {},
    "game.feature.menu.area-loadable": {
        "sc.AreaRoomBounds": {
            "fields": {
                "zMin": {
                    "type": "number",
                    "isOptional": false
                },
                "zMax": {
                    "type": "number",
                    "isOptional": false
                },
                "min": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "max": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "offset": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "name": {
                    "type": "string",
                    "isOptional": false
                },
                "text": {
                    "type": "string",
                    "isOptional": false
                },
                "id": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "AreaRoomBounds",
                    "args": [
                        {
                            "name": "map",
                            "type": "sc.AreaLoadable.Map",
                            "isOptional": false
                        },
                        {
                            "name": "id",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "sx",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "sy",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "tiles",
                            "type": "number[][]",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "sc": {
            "fields": {
                "AreaRoomBounds": {
                    "type": "AreaRoomBoundsConstructor"
                },
                "AreaLoadable": {
                    "type": "AreaLoadableConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.AreaLoadable.Data": {
            "fields": {
                "DOCTYPE": {
                    "type": "'AREAS_MAP'",
                    "isOptional": false
                },
                "name": {
                    "type": "ig.LangLabel.Data",
                    "isOptional": false
                },
                "width": {
                    "type": "number",
                    "isOptional": false
                },
                "height": {
                    "type": "number",
                    "isOptional": false
                },
                "floors": {
                    "type": "Floor[]",
                    "isOptional": false
                },
                "defaultFloor": {
                    "type": "number",
                    "isOptional": false
                },
                "chests": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.AreaLoadable.Floor": {
            "fields": {
                "level": {
                    "type": "number",
                    "isOptional": false
                },
                "name": {
                    "type": "ig.LangLabel.Data",
                    "isOptional": false
                },
                "tiles": {
                    "type": "number[][]",
                    "isOptional": false
                },
                "maps": {
                    "type": "Map[]",
                    "isOptional": false
                },
                "connections": {
                    "type": "Connection[]",
                    "isOptional": false
                },
                "icons": {
                    "type": "Icon[]",
                    "isOptional": false
                },
                "landmarks": {
                    "type": "Landmark[]",
                    "isOptional": false
                },
                "rooms": {
                    "type": "sc.AreaRoomBounds[]",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.AreaLoadable.Map": {
            "fields": {
                "path": {
                    "type": "string",
                    "isOptional": false
                },
                "name": {
                    "type": "ig.LangLabel.Data",
                    "isOptional": false
                },
                "offset": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "dungeon": {
                    "type": "'' | 'DUNGEON' | 'NO_DUNGEON'",
                    "isOptional": false
                },
                "minZ": {
                    "type": "number",
                    "isOptional": true
                },
                "maxZ": {
                    "type": "number",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.AreaLoadable.Connection": {
            "fields": {
                "tx": {
                    "type": "number",
                    "isOptional": false
                },
                "ty": {
                    "type": "number",
                    "isOptional": false
                },
                "dir": {
                    "type": "'VERTICAL' | 'HORIZONTAL'",
                    "isOptional": false
                },
                "size": {
                    "type": "number",
                    "isOptional": false
                },
                "map1": {
                    "type": "number",
                    "isOptional": false
                },
                "map2": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.AreaLoadable.Icon": {
            "fields": {
                "icon": {
                    "type": "string",
                    "isOptional": false
                },
                "x": {
                    "type": "number",
                    "isOptional": false
                },
                "y": {
                    "type": "number",
                    "isOptional": false
                },
                "map": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.AreaLoadable.Landmark": {
            "fields": {
                "id": {
                    "type": "string",
                    "isOptional": false
                },
                "x": {
                    "type": "number",
                    "isOptional": false
                },
                "y": {
                    "type": "number",
                    "isOptional": false
                },
                "map": {
                    "type": "number",
                    "isOptional": false
                },
                "option": {
                    "type": "keyof sc.LANDMARK_OPTIONS",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.AreaLoadable": {
            "fields": {
                "data": {
                    "type": "sc.AreaLoadable.Data",
                    "isOptional": false
                },
                "lowestFloor": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "onload": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "data",
                            "type": "sc.AreaLoadable.Data",
                            "isOptional": false
                        }
                    ]
                },
                "_createRooms": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "AreaLoadable",
                    "args": [
                        {
                            "name": "path",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Loadable",
                "ig.Cacheable.ImplementsCache<AreaLoadable>"
            ]
        }
    },
    "game.feature.menu.gui.arena.arena-cup-page": {},
    "game.feature.menu.gui.arena.arena-list": {
        "sc.ArenaRoundList": {
            "fields": {},
            "functions": {},
            "parents": [
                "sc.ListTabbedPane"
            ]
        },
        "sc": {
            "fields": {
                "ArenaRoundList": {
                    "type": "ArenaRoundListConstructor"
                },
                "ArenaCupList": {
                    "type": "ArenaCupListConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.ArenaCupList": {
            "fields": {},
            "functions": {},
            "parents": [
                "sc.ListTabbedPane"
            ]
        }
    },
    "game.feature.menu.gui.arena.arena-menu": {},
    "game.feature.menu.gui.arena.arena-misc": {
        "sc.ArenaInfoBox": {
            "fields": {
                "title": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "category": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "level": {
                    "type": "sc.NumberGui",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "sc.ArenaInfoBox",
                    "args": []
                }
            },
            "parents": [
                "ig.BoxGui"
            ]
        },
        "sc": {
            "fields": {
                "ArenaInfoBox": {
                    "type": "ArenaInfoBoxConstructor"
                },
                "ArenaEntryButton": {
                    "type": "ArenaEntryButtonConstructor"
                },
                "ArenaRoundEntryButton": {
                    "type": "ArenaRoundEntryButtonConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.ArenaEntryButton": {
            "fields": {
                "trophyGfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "key": {
                    "type": "Nullable<string>",
                    "isOptional": false
                },
                "description": {
                    "type": "Nullable<string>",
                    "isOptional": false
                },
                "decoration": {
                    "type": "ig.ImageGui",
                    "isOptional": false
                }
            },
            "functions": {
                "setDecoration": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "medal",
                            "type": "Nullable<sc.ARENA_MEDALS_TROPHIES>",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "ArenaEntryButton",
                    "args": [
                        {
                            "name": "text",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "key",
                            "type": "Nullable<string>",
                            "isOptional": false
                        },
                        {
                            "name": "description",
                            "type": "Nullable<string>",
                            "isOptional": false
                        },
                        {
                            "name": "medal",
                            "type": "Nullable<sc.ARENA_MEDALS_TROPHIES>",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "sc.ListBoxButton"
            ]
        },
        "sc.ArenaRoundEntryButton": {
            "fields": {
                "round": {
                    "type": "sc.NumberGui",
                    "isOptional": false
                },
                "dots": {
                    "type": "ig.ImageGui",
                    "isOptional": false
                },
                "index": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "ArenaRoundEntryButton",
                    "args": [
                        {
                            "name": "text",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "key",
                            "type": "Nullable<string>",
                            "isOptional": false
                        },
                        {
                            "name": "index",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "description",
                            "type": "Nullable<string>",
                            "isOptional": false
                        },
                        {
                            "name": "totalRounds",
                            "type": "Nullable<number>",
                            "isOptional": false
                        },
                        {
                            "name": "medal",
                            "type": "Nullable<sc.ARENA_MEDALS_TROPHIES>",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "sc.ArenaEntryButton"
            ]
        }
    },
    "game.feature.menu.gui.arena.arena-round-page": {
        "sc.ArenaChallengeEntry": {
            "fields": {
                "gfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "icon": {
                    "type": "number",
                    "isOptional": false
                },
                "text": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "tiny": {
                    "type": "boolean",
                    "isOptional": false
                },
                "global": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "ArenaChallengeEntry",
                    "args": [
                        {
                            "name": "challengeName",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "width",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "tiny",
                            "type": "boolean",
                            "isOptional": false
                        },
                        {
                            "name": "global",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc": {
            "fields": {
                "ArenaChallengeEntry": {
                    "type": "ArenaChallengeEntryConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.menu.gui.botanics.botanics-list": {
        "sc.BotanicsListBox": {
            "fields": {},
            "functions": {},
            "parents": [
                "sc.ListTabbedPane"
            ]
        },
        "sc": {
            "fields": {
                "BotanicsListBox": {
                    "type": "BotanicsListBoxConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.menu.gui.botanics.botanics-menu": {},
    "game.feature.menu.gui.botanics.botanics-misc": {
        "sc.BotanicsEntryButton": {
            "fields": {},
            "functions": {},
            "parents": [
                "sc.ListBoxButton"
            ]
        },
        "sc": {
            "fields": {
                "BotanicsEntryButton": {
                    "type": "BotanicsEntryButtonConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.menu.gui.circuit.circuit-detail-elements": {
        "sc.CircuitNodeMenu": {
            "fields": {
                "costCP": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "activate": {
                    "type": "sc.ButtonGui",
                    "isOptional": false
                }
            },
            "functions": {
                "_setContent": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "chainMode",
                            "type": "Nullable<boolean>",
                            "isOptional": true
                        }
                    ]
                },
                "init": {
                    "returnType": "CircuitNodeMenu",
                    "args": [
                        {
                            "name": "scrollHook",
                            "type": "ig.GuiHook",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "sc.MenuPanel"
            ]
        },
        "sc": {
            "fields": {
                "CircuitNodeMenu": {
                    "type": "CircuitNodeMenuConstructor"
                },
                "CircuitInfoBox": {
                    "type": "CircuitInfoBoxConstructor"
                },
                "CircuitDetailButtonGroup": {
                    "type": "CircuitDetailButtonGroupConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.CircuitInfoBox": {
            "fields": {
                "header": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "special": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "cpCost": {
                    "type": "sc.TextGui",
                    "isOptional": false
                }
            },
            "functions": {
                "_setContent": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "CircuitInfoBox",
                    "args": [
                        {
                            "name": "scrollHook",
                            "type": "ig.GuiHook",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "sc.MenuPanel"
            ]
        },
        "sc.CircuitDetailButtonGroup": {
            "fields": {},
            "functions": {
                "cycleElements": {
                    "returnType": "unknown",
                    "args": [
                        {
                            "name": "dir",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "CircuitDetailButtonGroup",
                    "args": []
                }
            },
            "parents": [
                "ig.ButtonGroup"
            ]
        }
    },
    "game.feature.menu.gui.circuit.circuit-detail": {
        "sc.CircuitTreeDetail.Node": {
            "fields": {
                "gfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "icons": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "parentGui": {
                    "type": "unknown",
                    "isOptional": false
                },
                "element": {
                    "type": "sc.ELEMENT",
                    "isOptional": false
                },
                "skill": {
                    "type": "unknown",
                    "isOptional": false
                },
                "branchSkill": {
                    "type": "unknown[]",
                    "isOptional": false
                },
                "coords": {
                    "type": "Vec2 & { w: number; h: number }",
                    "isOptional": false
                },
                "w": {
                    "type": "number",
                    "isOptional": false
                },
                "h": {
                    "type": "number",
                    "isOptional": false
                },
                "dirX": {
                    "type": "number",
                    "isOptional": false
                },
                "dirY": {
                    "type": "number",
                    "isOptional": false
                },
                "centerPos": {
                    "type": "number",
                    "isOptional": false
                },
                "orBranchIndex": {
                    "type": "number",
                    "isOptional": false
                },
                "orLevels": {
                    "type": "unknown",
                    "isOptional": false
                },
                "orLeft": {
                    "type": "boolean",
                    "isOptional": false
                },
                "blocked": {
                    "type": "boolean",
                    "isOptional": false
                },
                "blockID": {
                    "type": "number",
                    "isOptional": false
                },
                "submitSound": {
                    "type": "ig.Sound",
                    "isOptional": false
                },
                "blockedSound": {
                    "type": "ig.Sound",
                    "isOptional": false
                },
                "_iconAlpha": {
                    "type": "number",
                    "isOptional": false
                },
                "_player": {
                    "type": "sc.PlayerModel",
                    "isOptional": false
                },
                "_buttonGroup": {
                    "type": "Nullable<sc.CircuitDetailButtonGroup>",
                    "isOptional": true
                }
            },
            "functions": {
                "updateIconAlpha": {
                    "returnType": "void",
                    "args": []
                },
                "getOffsetX": {
                    "returnType": "number",
                    "args": []
                },
                "getOffsetY": {
                    "returnType": "number",
                    "args": []
                },
                "getDistanceToCursor": {
                    "returnType": "number",
                    "args": []
                },
                "onButtonPress": {
                    "returnType": "void",
                    "args": []
                },
                "onMouseInteract": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "mouseOver",
                            "type": "boolean",
                            "isOptional": false
                        },
                        {
                            "name": "clicked",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "getNodeFocus": {
                    "returnType": "Vec2",
                    "args": [
                        {
                            "name": "pos",
                            "type": "Vec2",
                            "isOptional": false
                        }
                    ]
                },
                "_hasParent": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "node",
                            "type": "sc.CircuitTreeDetail.Node",
                            "isOptional": false
                        }
                    ]
                },
                "_checkParentForBlock": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "parentNode",
                            "type": "sc.CircuitTreeDetail.Node",
                            "isOptional": false
                        }
                    ]
                },
                "_calculateAlpha": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "parentNode",
                            "type": "sc.CircuitTreeDetail.Node",
                            "isOptional": false
                        },
                        {
                            "name": "alpha",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "Node",
                    "args": [
                        {
                            "name": "posX",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "posY",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "dirX",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "dirY",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "skill",
                            "type": "sc.CircuitTreeDetail.Node['skill']",
                            "isOptional": false
                        },
                        {
                            "name": "element",
                            "type": "sc.ELEMENT",
                            "isOptional": false
                        },
                        {
                            "name": "orSkill",
                            "type": "unknown",
                            "isOptional": false
                        },
                        {
                            "name": "buttonGroup",
                            "type": "sc.CircuitTreeDetail.Node['_buttonGroup']",
                            "isOptional": false
                        },
                        {
                            "name": "startUid",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "parentGui",
                            "type": "Nullable<unknown>",
                            "isOptional": false
                        },
                        {
                            "name": "orBranchIndex",
                            "type": "number",
                            "isOptional": true
                        },
                        {
                            "name": "orLevels",
                            "type": "sc.CircuitTreeDetail.Node['orLevels']",
                            "isOptional": true
                        },
                        {
                            "name": "orLeft",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": [
                "ig.FocusGui"
            ]
        },
        "sc.CircuitTreeDetail": {
            "fields": {
                "Node": {
                    "type": "NodeConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.menu.gui.circuit.circuit-effect-display": {},
    "game.feature.menu.gui.circuit.circuit-menu": {},
    "game.feature.menu.gui.circuit.circuit-misc": {
        "sc.CrossPointsOverview.Entry": {
            "fields": {
                "gfx": {
                    "type": "ig.Image",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "Entry",
                    "args": [
                        {
                            "name": "element",
                            "type": "sc.ELEMENT",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc.CrossPointsOverview": {
            "fields": {
                "Entry": {
                    "type": "CrossPointsOverview.EntryConstructor",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "CrossPointsOverview",
                    "args": []
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc": {
            "fields": {
                "CrossPointsOverview": {
                    "type": "CrossPointsOverviewConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.menu.gui.circuit.circuit-overview": {},
    "game.feature.menu.gui.circuit.circuit-swap-branches": {
        "sc.CircuitSwapBranches.Button": {
            "fields": {
                "gfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "submitSound": {
                    "type": "ig.Sound",
                    "isOptional": false
                },
                "blockedSound": {
                    "type": "ig.Sound",
                    "isOptional": false
                },
                "startUID": {
                    "type": "number",
                    "isOptional": false
                },
                "element": {
                    "type": "sc.ELEMENT",
                    "isOptional": false
                }
            },
            "functions": {
                "getDistanceToCursor": {
                    "returnType": "number",
                    "args": []
                },
                "init": {
                    "returnType": "Button",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "startUID",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "element",
                            "type": "sc.ELEMENT",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.FocusGui"
            ]
        },
        "sc.CircuitSwapBranches": {
            "fields": {
                "Button": {
                    "type": "ButtonConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.menu.gui.enemies.enemy-list": {
        "sc.EnemyListBox": {
            "fields": {},
            "functions": {},
            "parents": [
                "sc.ListTabbedPane"
            ]
        },
        "sc": {
            "fields": {
                "EnemyListBox": {
                    "type": "EnemyListBoxConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.menu.gui.enemies.enemy-menu": {},
    "game.feature.menu.gui.enemies.enemy-misc": {
        "sc.EnemyInfoBox": {
            "fields": {
                "level": {
                    "type": "sc.NumberGui",
                    "isOptional": false
                },
                "enemy": {
                    "type": "ig.Database.EnemyData",
                    "isOptional": false
                }
            },
            "functions": {
                "setEnemy": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "EnemyInfoBox",
                    "args": []
                }
            },
            "parents": [
                "ig.BoxGui"
            ]
        },
        "sc": {
            "fields": {
                "EnemyInfoBox": {
                    "type": "EnemyInfoBoxConstructor"
                },
                "EnemyEntryButton": {
                    "type": "EnemyEntryButtonConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.EnemyEntryButton": {
            "fields": {
                "key": {
                    "type": "number",
                    "isOptional": false
                },
                "level": {
                    "type": "sc.NumberGui",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "EnemyEntryButton",
                    "args": [
                        {
                            "name": "text",
                            "type": "sc.TextLike",
                            "isOptional": false
                        },
                        {
                            "name": "key",
                            "type": "Nullable<string>",
                            "isOptional": true
                        },
                        {
                            "name": "level",
                            "type": "Nullable<number>",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": [
                "sc.ListBoxButton"
            ]
        }
    },
    "game.feature.menu.gui.enemies.enemy-pages": {
        "sc.EnemyPageGeneralInfo": {
            "fields": {
                "drops": {
                    "type": "sc.EnemyDrops",
                    "isOptional": false
                }
            },
            "functions": {
                "setData": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "enemyName",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "enemyType",
                            "type": "sc.EnemyType",
                            "isOptional": false
                        },
                        {
                            "name": "skipTransition",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "boosted",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "init": {
                    "returnType": "EnemyPageGeneralInfo",
                    "args": []
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc": {
            "fields": {
                "EnemyPageGeneralInfo": {
                    "type": "EnemyPageGeneralInfoConstructor"
                },
                "EnemyBaseParamLine": {
                    "type": "EnemyBaseParamLineConstructor"
                },
                "EnemyDrops": {
                    "type": "EnemyDropsConstructor"
                },
                "EnemyResistence": {
                    "type": "EnemyResistenceConstructor"
                },
                "EnemyElementSlopeLine": {
                    "type": "EnemyElementSlopeLineConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.EnemyBaseParamLine": {
            "fields": {
                "gfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "number": {
                    "type": "sc.NumberGui",
                    "isOptional": false
                },
                "icon": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc.EnemyDrops": {
            "fields": {},
            "functions": {
                "setDrops": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "drops",
                            "type": "EnemyType.ItemDrop[]",
                            "isOptional": false
                        },
                        {
                            "name": "skipTransition",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "boosted",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "init": {
                    "returnType": "EnemyDrops",
                    "args": []
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc.EnemyResistence": {
            "fields": {
                "res": {
                    "type": "[sc.PercentNumber, sc.PercentNumber, sc.PercentNumber, sc.PercentNumber]",
                    "isOptional": false
                },
                "lines": {
                    "type": "[sc.EnemyElementSlopeLine, sc.EnemyElementSlopeLine, sc.EnemyElementSlopeLine, sc.EnemyElementSlopeLine]",
                    "isOptional": false
                },
                "images": {
                    "type": "[ig.ImageGui, ig.ImageGui, ig.ImageGui, ig.ImageGui]",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "EnemyResistence",
                    "args": []
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc.EnemyElementSlopeLine": {
            "fields": {
                "slope": {
                    "type": "sc.SlopeLine",
                    "isOptional": false
                },
                "line": {
                    "type": "ig.ColorGui",
                    "isOptional": false
                },
                "hasLine": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "EnemyElementSlopeLine",
                    "args": []
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        }
    },
    "game.feature.menu.gui.equip.equip-bodypart": {
        "sc.EquipRightContainer": {
            "fields": {
                "partChooser": {
                    "type": "sc.EquipBodyPartContainer",
                    "isOptional": false
                },
                "itemList": {
                    "type": "sc.ItemListBox",
                    "isOptional": false
                },
                "sortTypes": {
                    "type": "{ [key in sc.MENU_EQUIP_BODYPART]?: sc.SORT_TYPE }",
                    "isOptional": false
                },
                "_itemListActive": {
                    "type": "boolean",
                    "isOptional": false
                },
                "_lastEquipState": {
                    "type": "boolean",
                    "isOptional": false
                },
                "_globalButtons": {
                    "type": "sc.EquipMenu.GlobalButtons",
                    "isOptional": false
                },
                "_refocusFromCycle": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "_equipItem": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "newItemID",
                            "type": "sc.ItemID",
                            "isOptional": false
                        },
                        {
                            "name": "fromMouse",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "setCurrentBodypartPressed": {
                    "returnType": "void",
                    "args": []
                },
                "setCurrentBodypartUnpressed": {
                    "returnType": "void",
                    "args": []
                },
                "_updateItemList": {
                    "returnType": "void",
                    "args": []
                },
                "_activateItemList": {
                    "returnType": "void",
                    "args": []
                },
                "_deactivateItemList": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "popMenu",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "_exitItemList": {
                    "returnType": "void",
                    "args": []
                },
                "_makeList": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "refocus",
                            "type": "boolean",
                            "isOptional": false
                        },
                        {
                            "name": "fromMouse",
                            "type": "boolean",
                            "isOptional": false
                        },
                        {
                            "name": "newItemID",
                            "type": "sc.ItemID",
                            "isOptional": false
                        },
                        {
                            "name": "skipSounds",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "sortType",
                            "type": "sc.SORT_TYPE",
                            "isOptional": true
                        }
                    ]
                },
                "isIDEquipped": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "part",
                            "type": "sc.MENU_EQUIP_BODYPART",
                            "isOptional": false
                        }
                    ]
                },
                "getCurrentSortText": {
                    "returnType": "string",
                    "args": []
                },
                "showMenu": {
                    "returnType": "void",
                    "args": []
                },
                "hideMenu": {
                    "returnType": "void",
                    "args": []
                },
                "tempShowMenu": {
                    "returnType": "void",
                    "args": []
                },
                "tempHideMenu": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "sc.EquipRightContainer",
                    "args": [
                        {
                            "name": "globalButtons",
                            "type": "sc.EquipMenu.GlobalButtons",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "sc.MenuPanel",
                "sc.Model.Observer"
            ]
        },
        "sc": {
            "fields": {
                "EquipRightContainer": {
                    "type": "EquipRightContainerConstructor"
                },
                "EquipBodyPartContainer": {
                    "type": "EquipBodyPartContainerConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.EquipBodyPartContainer.Entry": {
            "fields": {
                "numberGfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "text": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "button": {
                    "type": "sc.BodyPartButton",
                    "isOptional": false
                },
                "defaultPosition": {
                    "type": "unknown",
                    "isOptional": false
                },
                "_isActiveTop": {
                    "type": "boolean",
                    "isOptional": false
                },
                "_hidden": {
                    "type": "boolean",
                    "isOptional": false
                },
                "topY": {
                    "type": "number",
                    "isOptional": false
                },
                "bottomY": {
                    "type": "number",
                    "isOptional": false
                },
                "level": {
                    "type": "number",
                    "isOptional": false
                },
                "isScalable": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "setData": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "text",
                            "type": "sc.TextLike",
                            "isOptional": false
                        },
                        {
                            "name": "data",
                            "type": "ig.LangLabel",
                            "isOptional": false
                        },
                        {
                            "name": "level",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "isScalable",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "moveToNormal": {
                    "returnType": "void",
                    "args": []
                },
                "moveToBottom": {
                    "returnType": "void",
                    "args": []
                },
                "moveToTop": {
                    "returnType": "void",
                    "args": []
                },
                "reset": {
                    "returnType": "void",
                    "args": []
                },
                "hideButton": {
                    "returnType": "void",
                    "args": []
                },
                "showButton": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "Entry",
                    "args": [
                        {
                            "name": "bodyPart",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "equip",
                            "type": "sc.Inventory.Item",
                            "isOptional": false
                        },
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "globalButton",
                            "type": "sc.BodyPartButton",
                            "isOptional": false
                        },
                        {
                            "name": "topY",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc.EquipBodyPartContainer": {
            "fields": {
                "buttonGroup": {
                    "type": "sc.ButtonGroup",
                    "isOptional": false
                },
                "Entry": {
                    "type": "EquipBodyPartContainer.EntryConstructor",
                    "isOptional": false
                }
            },
            "functions": {
                "showMenu": {
                    "returnType": "void",
                    "args": []
                },
                "_moveButtons": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "bodypart",
                            "type": "sc.MENU_EQUIP_BODYPART",
                            "isOptional": false
                        }
                    ]
                },
                "_pullInAllButtons": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "exception",
                            "type": "ig.FocusGui",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "sc.EquipBodyPartContainer",
                    "args": [
                        {
                            "name": "globalButtons",
                            "type": "sc.EquipMenu.GlobalButtons",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        }
    },
    "game.feature.menu.gui.equip.equip-menu": {
        "sc.EquipMenu.GlobalButtons": {
            "fields": {
                "head": {
                    "type": "sc.BodyPartMouseButton",
                    "isOptional": false
                },
                "rightArm": {
                    "type": "sc.BodyPartMouseButton",
                    "isOptional": false
                },
                "leftArm": {
                    "type": "sc.BodyPartMouseButton",
                    "isOptional": false
                },
                "torso": {
                    "type": "sc.BodyPartMouseButton",
                    "isOptional": false
                },
                "feet": {
                    "type": "sc.BodyPartMouseButton",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.EquipMenu": {
            "fields": {
                "globalButtons": {
                    "type": "sc.EquipMenu.GlobalButtons",
                    "isOptional": false
                },
                "statusContainer": {
                    "type": "sc.EquipStatusContainer",
                    "isOptional": false
                },
                "rightContainer": {
                    "type": "sc.EquipRightContainer",
                    "isOptional": false
                },
                "overview": {
                    "type": "sc.EquipLevelOverview",
                    "isOptional": false
                },
                "quickSelectButtonGroup": {
                    "type": "sc.ButtonGroup",
                    "isOptional": false
                },
                "hotkeys": {
                    "type": "Record<'help' | 'status' | 'sort' | 'switch', sc.ButtonGui>",
                    "isOptional": false
                },
                "sortMenu": {
                    "type": "sc.ItemSortMenu",
                    "isOptional": false
                },
                "helpGui": {
                    "type": "sc.HelpScreen",
                    "isOptional": false
                }
            },
            "functions": {
                "initEquipIcon": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "button",
                            "type": "sc.BodyPartMouseButton",
                            "isOptional": false
                        },
                        {
                            "name": "item",
                            "type": "ItemID",
                            "isOptional": false
                        }
                    ]
                },
                "_onHelpButtonCheck": {
                    "returnType": "boolean",
                    "args": []
                },
                "_onHelpButtonPressed": {
                    "returnType": "void",
                    "args": []
                },
                "createHelpGui": {
                    "returnType": "void",
                    "args": []
                },
                "onSortButtonCheck": {
                    "returnType": "boolean",
                    "args": []
                },
                "onSortButtonPress": {
                    "returnType": "void",
                    "args": []
                },
                "onStatusButtonCheck": {
                    "returnType": "boolean",
                    "args": []
                },
                "onStatusButtonPress": {
                    "returnType": "void",
                    "args": []
                },
                "onHotkeySwitchCheck": {
                    "returnType": "boolean",
                    "args": []
                },
                "_addHotKeys": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "longTransition",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "_exitMenu": {
                    "returnType": "void",
                    "args": []
                },
                "_moveBodyPartLines": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "part",
                            "type": "sc.MENU_EQUIP_BODYPART",
                            "isOptional": false
                        },
                        {
                            "name": "_unused",
                            "type": "unknown",
                            "isOptional": true
                        }
                    ]
                },
                "_pullInAllButtons": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "button",
                            "type": "sc.BodyPartMouseButton",
                            "isOptional": false
                        },
                        {
                            "name": "_unused",
                            "type": "unknown",
                            "isOptional": true
                        }
                    ]
                },
                "_updateSortHotkey": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "currentSortMethodName",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "_updateMouseButtons": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "data",
                            "type": "sc.PLAYER_MSG_ITEM_OBTAINED_DATA",
                            "isOptional": false
                        },
                        {
                            "name": "dontSkipAnim",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "exitMenu": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "nextMenu",
                            "type": "sc.MENU_SUBMENU",
                            "isOptional": true
                        }
                    ]
                },
                "init": {
                    "returnType": "sc.EquipMenu",
                    "args": []
                }
            },
            "parents": [
                "sc.BaseMenu",
                "sc.Model.Observer"
            ]
        },
        "sc": {
            "fields": {
                "EquipMenu": {
                    "type": "EquipMenuConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.menu.gui.equip.equip-misc": {
        "sc.EquipLevelOverview": {
            "fields": {},
            "functions": {
                "init": {
                    "returnType": "EquipLevelOverview",
                    "args": []
                }
            },
            "parents": [
                "sc.MenuPanel"
            ]
        },
        "sc": {
            "fields": {
                "EquipLevelOverview": {
                    "type": "EquipLevelOverviewConstructor"
                },
                "BodyPartButton": {
                    "type": "BodyPartButtonConstructor"
                },
                "BodyPartMouseButton": {
                    "type": "BodyPartMouseButtonConstructor"
                },
                "EquipMenuMiddleIcon": {
                    "type": "EquipMenuMiddleIconConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.BodyPartButton": {
            "fields": {
                "otherButton": {
                    "type": "sc.BodyPartMouseButton",
                    "isOptional": true
                },
                "callback": {
                    "type": "(focus: boolean, pressed: boolean) => void",
                    "isOptional": true
                }
            },
            "functions": {
                "setPressedAndUnFocus": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "value",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "BodyPartButton",
                    "args": [
                        {
                            "name": "text",
                            "type": "sc.TextLike",
                            "isOptional": false
                        },
                        {
                            "name": "width",
                            "type": "number",
                            "isOptional": true
                        },
                        {
                            "name": "type",
                            "type": "sc.ButtonGui.Type",
                            "isOptional": true
                        },
                        {
                            "name": "keepPressed",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "blockedSound",
                            "type": "ig.Sound",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": [
                "sc.ButtonGui"
            ]
        },
        "sc.BodyPartMouseButton": {
            "fields": {
                "gfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "button": {
                    "type": "sc.BodyPartButton",
                    "isOptional": false
                },
                "slope": {
                    "type": "sc.SlopeLine",
                    "isOptional": false
                },
                "line": {
                    "type": "ig.ColorGui",
                    "isOptional": false
                },
                "connect": {
                    "type": "ig.ColorGui",
                    "isOptional": false
                },
                "end": {
                    "type": "ig.ImageGui",
                    "isOptional": false
                },
                "equip": {
                    "type": "sc.EquipMenuMiddleIcon",
                    "isOptional": false
                },
                "sizeTransition": {
                    "type": "ig.GuiHook.SizeTransition",
                    "isOptional": true
                },
                "topY": {
                    "type": "number",
                    "isOptional": false
                },
                "bottomY": {
                    "type": "number",
                    "isOptional": false
                },
                "_isActiveTop": {
                    "type": "boolean",
                    "isOptional": false
                },
                "_hasLine": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "_focusCallback": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "button",
                            "type": "ig.FocusGui",
                            "isOptional": true
                        },
                        {
                            "name": "fromMouse",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "_updateSize": {
                    "returnType": "void",
                    "args": []
                },
                "setEquip": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "offsetX",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "type",
                            "type": "sc.ITEMS_EQUIP_TYPES",
                            "isOptional": false
                        },
                        {
                            "name": "_unused",
                            "type": "unknown",
                            "isOptional": true
                        },
                        {
                            "name": "dontSkipAnim",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "setPressedAndUnFocus": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "state",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "moveToBottom": {
                    "returnType": "void",
                    "args": []
                },
                "moveToTop": {
                    "returnType": "void",
                    "args": []
                },
                "showButton": {
                    "returnType": "void",
                    "args": []
                },
                "hideButton": {
                    "returnType": "void",
                    "args": []
                },
                "showLine": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "slopeIsOnTop",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "hideLine": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "slopeIsOnTop",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "resetLine": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "BodyPartMouseButton",
                    "args": [
                        {
                            "name": "slopeIsOnTop",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "slopeOffsetX",
                            "type": "number",
                            "isOptional": true
                        },
                        {
                            "name": "slopeSize",
                            "type": "number",
                            "isOptional": true
                        },
                        {
                            "name": "lineWidth",
                            "type": "number",
                            "isOptional": true
                        },
                        {
                            "name": "topY",
                            "type": "number",
                            "isOptional": true
                        },
                        {
                            "name": "slopeOffsetY",
                            "type": "number",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc.EquipMenuMiddleIcon": {
            "fields": {
                "gfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "menuGfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "equipIcon": {
                    "type": "ig.ImageGui",
                    "isOptional": false
                },
                "animTimer": {
                    "type": "number",
                    "isOptional": false
                },
                "animFrame": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "setEquip": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "offsetX",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "type",
                            "type": "sc.ITEMS_EQUIP_TYPES",
                            "isOptional": false
                        },
                        {
                            "name": "_unused",
                            "type": "unknown",
                            "isOptional": true
                        },
                        {
                            "name": "dontSkipAnim",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "getTypeIndex": {
                    "returnType": "unknown",
                    "args": [
                        {
                            "name": "type",
                            "type": "sc.ITEMS_EQUIP_TYPES",
                            "isOptional": false
                        }
                    ]
                },
                "update": {
                    "returnType": "void",
                    "args": []
                },
                "updateDrawables": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "a_",
                            "type": "unknown",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "EquipMenuMiddleIcon",
                    "args": []
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        }
    },
    "game.feature.menu.gui.equip.equip-status": {
        "sc.EquipStatusContainer.BaseParams": {
            "fields": {
                "hp": {
                    "type": "sc.SimpleStatusDisplay",
                    "isOptional": false
                },
                "atk": {
                    "type": "sc.SimpleStatusDisplay",
                    "isOptional": false
                },
                "def": {
                    "type": "sc.SimpleStatusDisplay",
                    "isOptional": false
                },
                "foc": {
                    "type": "sc.SimpleStatusDisplay",
                    "isOptional": false
                },
                "fire": {
                    "type": "sc.SimpleStatusDisplay",
                    "isOptional": false
                },
                "cold": {
                    "type": "sc.SimpleStatusDisplay",
                    "isOptional": false
                },
                "shock": {
                    "type": "sc.SimpleStatusDisplay",
                    "isOptional": false
                },
                "wave": {
                    "type": "sc.SimpleStatusDisplay",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.EquipStatusContainer": {
            "fields": {
                "data": {
                    "type": "{ id: number; description: string }",
                    "isOptional": false
                },
                "compareMode": {
                    "type": "boolean",
                    "isOptional": false
                },
                "compareOffHand": {
                    "type": "boolean",
                    "isOptional": false
                },
                "baseParams": {
                    "type": "sc.EquipStatusContainer.BaseParams",
                    "isOptional": false
                },
                "allModifiers": {
                    "type": "Record<keyof sc.MODIFIERS, sc.SimpleStatusDisplay>",
                    "isOptional": false
                },
                "modifiers": {
                    "type": "unknown",
                    "isOptional": false
                },
                "statusPanel": {
                    "type": "sc.MenuPanel",
                    "isOptional": false
                },
                "modPanel": {
                    "type": "sc.HeaderMenuPanel",
                    "isOptional": false
                },
                "modMore": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "arrow": {
                    "type": "ig.ImageGui",
                    "isOptional": false
                },
                "arrow2": {
                    "type": "ig.ImageGui",
                    "isOptional": false
                },
                "gfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "mode": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "showMenu": {
                    "returnType": "void",
                    "args": []
                },
                "toggleViewMode": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "button",
                            "type": "sc.EquipStatusContainer.Button",
                            "isOptional": true
                        }
                    ]
                },
                "updateStatusView": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "button",
                            "type": "sc.EquipStatusContainer.Button",
                            "isOptional": true
                        }
                    ]
                },
                "updateModText": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "highestModifierIndex",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "_createStatusDisplay": {
                    "returnType": "sc.SimpleStatusDisplay",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "name",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "colorIndex",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "icon",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "usePercent",
                            "type": "boolean",
                            "isOptional": false
                        },
                        {
                            "name": "maxValue",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "currentValue",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "noPercent",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "menu",
                            "type": "sc.MenuPanel",
                            "isOptional": true
                        },
                        {
                            "name": "descriptionLangId",
                            "type": "string",
                            "isOptional": true
                        },
                        {
                            "name": "order",
                            "type": "number",
                            "isOptional": true
                        }
                    ]
                },
                "_setParameters": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "item",
                            "type": "sc.ItemID",
                            "isOptional": false
                        },
                        {
                            "name": "resetModifiersValues",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "_calculateDifferenceModifier": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "currentGear",
                            "type": "sc.ItemID",
                            "isOptional": false
                        },
                        {
                            "name": "modifier",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "newValue",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "fromPlayer",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "_calculateDifference": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "currentGear",
                            "type": "sc.ItemID",
                            "isOptional": false
                        },
                        {
                            "name": "param",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "newValue",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "element",
                            "type": "sc.ELEMENT",
                            "isOptional": true
                        }
                    ]
                },
                "_resetChangeValue": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "resetModifiersValues",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "_setCurrentValues": {
                    "returnType": "void",
                    "args": []
                },
                "_setCurrentModifiers": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "EquipStatusContainer",
                    "args": []
                }
            },
            "parents": [
                "ig.GuiElementBase",
                "sc.Model.Observer"
            ]
        },
        "sc.EquipStatusContainer.data": {
            "fields": {
                "id": {
                    "type": "number",
                    "isOptional": false
                },
                "description": {
                    "type": "string",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc": {
            "fields": {
                "EquipStatusContainer": {
                    "type": "EquipStatusContainerConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.menu.gui.help-boxes": {
        "sc.HelpScrollContainer": {
            "fields": {
                "scrollPane": {
                    "type": "sc.ScrollPane",
                    "isOptional": false
                },
                "content": {
                    "type": "ig.GuiElementBase",
                    "isOptional": false
                }
            },
            "functions": {
                "setElement": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "gui",
                            "type": "ig.GuiElementBase",
                            "isOptional": false
                        }
                    ]
                },
                "scroll": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "value",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "skipTransition",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "getScrollY": {
                    "returnType": "number",
                    "args": []
                },
                "clear": {
                    "returnType": "void",
                    "args": []
                },
                "_updateContentHeight": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "HelpScrollContainer",
                    "args": []
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc": {
            "fields": {
                "HelpScrollContainer": {
                    "type": "HelpScrollContainerConstructor"
                },
                "MultiPagePageCounter": {
                    "type": "MultiPagePageCounterConstructor"
                },
                "MultiPageBoxGui": {
                    "type": "MultiPageBoxGuiConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.MultiPagePageCounter": {
            "fields": {
                "count": {
                    "type": "sc.NumberGui",
                    "isOptional": false
                },
                "max": {
                    "type": "sc.NumberGui",
                    "isOptional": false
                }
            },
            "functions": {
                "setCount": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "count",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "setMax": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "max",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "MultiPagePageCounter",
                    "args": [
                        {
                            "name": "width",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc.MultiPageBoxGui.Page": {
            "fields": {
                "header": {
                    "type": "Nullable<string>",
                    "isOptional": true
                },
                "title": {
                    "type": "Nullable<string>",
                    "isOptional": true
                },
                "content": {
                    "type": "string[]",
                    "isOptional": false
                },
                "isList": {
                    "type": "boolean",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.MultiPageBoxGui.ConditionalPage": {
            "fields": {
                "condition": {
                    "type": "string",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": [
                "Page"
            ]
        },
        "sc.MultiPageBoxGui": {
            "fields": {
                "msgBox": {
                    "type": "sc.CenterBoxGui",
                    "isOptional": false
                },
                "content": {
                    "type": "ig.GuiElementBase",
                    "isOptional": false
                },
                "header": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "buttonInteract": {
                    "type": "ig.ButtonInteractEntry",
                    "isOptional": false
                },
                "buttonGroup": {
                    "type": "sc.ButtonGroup",
                    "isOptional": false
                },
                "defaultHeaderText": {
                    "type": "string",
                    "isOptional": false
                },
                "linePadding": {
                    "type": "number",
                    "isOptional": false
                },
                "listPadding": {
                    "type": "number",
                    "isOptional": false
                },
                "turnLeft": {
                    "type": "sc.ButtonGui",
                    "isOptional": false
                },
                "turnRight": {
                    "type": "sc.ButtonGui",
                    "isOptional": false
                },
                "pageCounter": {
                    "type": "sc.MultiPagePageCounter",
                    "isOptional": false
                },
                "pages": {
                    "type": "sc.MultiPageBoxGui.Page[]",
                    "isOptional": false
                },
                "curPage": {
                    "type": "number",
                    "isOptional": false
                },
                "backSound": {
                    "type": "ig.Sound",
                    "isOptional": false
                },
                "_width": {
                    "type": "number",
                    "isOptional": false
                },
                "scrollContainer": {
                    "type": "sc.HelpScrollContainer",
                    "isOptional": false
                }
            },
            "functions": {
                "openMenu": {
                    "returnType": "void",
                    "args": []
                },
                "closeMenu": {
                    "returnType": "void",
                    "args": []
                },
                "addPage": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "header",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "content",
                            "type": "string[]",
                            "isOptional": false
                        },
                        {
                            "name": "isList",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "addPages": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "pages",
                            "type": "sc.MultiPageBoxGui.ConditionalPage[]",
                            "isOptional": false
                        }
                    ]
                },
                "setDefaultHeaderText": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "header",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "_setPage": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "addListEntry": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "langLabel",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "parent",
                            "type": "ig.GuiElementBase",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "_createInitContent": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "width",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "onTurnLeftCheck": {
                    "returnType": "boolean",
                    "args": []
                },
                "onTurnRightCheck": {
                    "returnType": "boolean",
                    "args": []
                },
                "init": {
                    "returnType": "MultiPageBoxGui",
                    "args": [
                        {
                            "name": "width",
                            "type": "number",
                            "isOptional": true
                        },
                        {
                            "name": "height",
                            "type": "number",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        }
    },
    "game.feature.menu.gui.help.help-menu": {
        "sc.HelpScreen.Annotation": {
            "fields": {
                "type": {
                    "type": "keyof sc.HELP_ANNO_TYPE",
                    "isOptional": false
                },
                "content": {
                    "type": "{ title?: string; description?: string }",
                    "isOptional": true
                },
                "title": {
                    "type": "string",
                    "isOptional": true
                },
                "description": {
                    "type": "string",
                    "isOptional": true
                },
                "offset": {
                    "type": "Vec2",
                    "isOptional": true
                },
                "size": {
                    "type": "Vec2",
                    "isOptional": true
                },
                "index": {
                    "type": "Vec2",
                    "isOptional": true
                },
                "flipIconX": {
                    "type": "boolean",
                    "isOptional": true
                },
                "flipIconY": {
                    "type": "boolean",
                    "isOptional": true
                },
                "descType": {
                    "type": "'buff' | 'levels' | string",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.HelpScreen": {
            "fields": {
                "hotkeyHelp": {
                    "type": "sc.ButtonGui",
                    "isOptional": false
                },
                "hotkeyBack": {
                    "type": "sc.ButtonGui",
                    "isOptional": false
                },
                "topBar": {
                    "type": "ig.ColorGui",
                    "isOptional": false
                },
                "bottomBar": {
                    "type": "ig.ColorGui",
                    "isOptional": false
                },
                "box": {
                    "type": "sc.HelpScreenBorder",
                    "isOptional": false
                },
                "color": {
                    "type": "ig.ColorGui",
                    "isOptional": false
                },
                "content": {
                    "type": "ig.GuiElementBase",
                    "isOptional": false
                },
                "info": {
                    "type": "sc.HelpInfoBox",
                    "isOptional": false
                },
                "buttonInteract": {
                    "type": "ig.ButtonInteractEntry",
                    "isOptional": false
                },
                "buttonGroup": {
                    "type": "sc.ButtonGroup",
                    "isOptional": false
                },
                "backCallback": {
                    "type": "Nullable<() => void>",
                    "isOptional": true
                },
                "manualTitle": {
                    "type": "string",
                    "isOptional": false
                },
                "manualContent": {
                    "type": "string[]",
                    "isOptional": false
                },
                "manualGui": {
                    "type": "sc.MultiPageBoxGui",
                    "isOptional": false
                },
                "base": {
                    "type": "sc.BaseMenu",
                    "isOptional": false
                },
                "addons": {
                    "type": "ig.GuiElementBase[]",
                    "isOptional": false
                },
                "fillEmptySpaces": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "openMenu": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "fillEmptySpaces",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "exitMenu": {
                    "returnType": "void",
                    "args": []
                },
                "createAnnotationsRec": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "gui",
                            "type": "ig.GuiElementBase",
                            "isOptional": false
                        },
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "count",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "createGUI": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "_unused",
                            "type": "unknown",
                            "isOptional": false
                        },
                        {
                            "name": "annotation",
                            "type": "sc.HelpScreen.Annotation",
                            "isOptional": false
                        },
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "addToButtonGroup": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "gui",
                            "type": "sc.HelpAnnoBase",
                            "isOptional": false
                        },
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "onHotkeyHelpCheck": {
                    "returnType": "boolean",
                    "args": []
                },
                "onHelpButtonPressed": {
                    "returnType": "void",
                    "args": []
                },
                "onHotkeyBackCheck": {
                    "returnType": "boolean",
                    "args": []
                },
                "onBackButtonPressed": {
                    "returnType": "void",
                    "args": []
                },
                "createHelpGui": {
                    "returnType": "void",
                    "args": []
                },
                "onAddHotkeys": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "HelpScreen",
                    "args": [
                        {
                            "name": "base",
                            "type": "sc.BaseMenu",
                            "isOptional": false
                        },
                        {
                            "name": "manualTitle",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "manualContent",
                            "type": "sc.MultiPageBoxGui.ConditionalPage[]",
                            "isOptional": false
                        },
                        {
                            "name": "backCallback",
                            "type": "() => void",
                            "isOptional": false
                        },
                        {
                            "name": "fillEmptySpaces",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase",
                "sc.Model.Observer"
            ]
        },
        "sc": {
            "fields": {
                "HelpScreen": {
                    "type": "HelpScreenConstructor"
                },
                "HelpScreenBorder": {
                    "type": "HelpScreenBorderConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.HelpScreenBorder": {
            "fields": {
                "box": {
                    "type": "ig.BoxGui",
                    "isOptional": false
                }
            },
            "functions": {
                "show": {
                    "returnType": "void",
                    "args": []
                },
                "hide": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "HelpScreenBorder",
                    "args": []
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        }
    },
    "game.feature.menu.gui.help.help-misc": {
        "sc.HelpAnnoBase": {
            "fields": {},
            "functions": {},
            "parents": [
                "ig.FocusGui"
            ]
        },
        "sc": {
            "fields": {
                "HelpAnnoBase": {
                    "type": "HelpAnnoBaseConstructor"
                },
                "HELP_ANNO_TYPE": {
                    "type": "HELP_ANNO_TYPE"
                },
                "HelpInfoBox": {
                    "type": "HelpInfoBoxConstructor"
                },
                "HelpLevelEntry": {
                    "type": "HelpLevelEntryConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.HELP_ANNO_TYPE": {
            "fields": {
                "INFO": {
                    "type": "sc.HelpAnnoBase",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.HelpInfoBox": {
            "fields": {
                "title": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "description": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "line": {
                    "type": "ig.ColorGui",
                    "isOptional": false
                },
                "content": {
                    "type": "ig.GuiElementBase",
                    "isOptional": false
                }
            },
            "functions": {
                "show": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "button",
                            "type": "sc.ButtonGui",
                            "isOptional": false
                        },
                        {
                            "name": "title",
                            "type": "Nullable<string>",
                            "isOptional": false
                        },
                        {
                            "name": "description",
                            "type": "Nullable<string>",
                            "isOptional": false
                        },
                        {
                            "name": "content",
                            "type": "sc.HelpScreen.Annotation['content']",
                            "isOptional": false
                        },
                        {
                            "name": "type",
                            "type": "sc.HelpScreen.Annotation['descType']",
                            "isOptional": false
                        }
                    ]
                },
                "hide": {
                    "returnType": "void",
                    "args": []
                },
                "getText": {
                    "returnType": "string",
                    "args": [
                        {
                            "name": "stringGetter",
                            "type": "(arg: T) => string | string",
                            "isOptional": false
                        },
                        {
                            "name": "stringGetterArgument",
                            "type": "T",
                            "isOptional": true
                        }
                    ]
                },
                "init": {
                    "returnType": "HelpInfoBox",
                    "args": []
                }
            },
            "parents": [
                "sc.MenuPanel"
            ]
        },
        "sc.HelpLevelEntry": {
            "fields": {
                "color": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "desc": {
                    "type": "sc.TextGui",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "HelpLevelEntry",
                    "args": [
                        {
                            "name": "colorID",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "fontColor",
                            "type": "sc.FONT_COLORS",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        }
    },
    "game.feature.menu.gui.item.item-list": {
        "sc.ItemTabbedBox.TabButton": {
            "fields": {
                "ninepatch": {
                    "type": "ig.NinePatch",
                    "isOptional": false
                },
                "text": {
                    "type": "sc.TextLike",
                    "isOptional": false
                },
                "icon": {
                    "type": "string",
                    "isOptional": false
                },
                "data": {
                    "type": "unknown",
                    "isOptional": false
                },
                "noIcon": {
                    "type": "boolean",
                    "isOptional": false
                },
                "textChild": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "_smallWidth": {
                    "type": "number",
                    "isOptional": false
                },
                "_largeWidth": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "setData": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "data",
                            "type": "unknown",
                            "isOptional": false
                        }
                    ]
                },
                "getButtonText": {
                    "returnType": "sc.TextLike",
                    "args": []
                },
                "setText": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "text",
                            "type": "sc.TextLike",
                            "isOptional": false
                        }
                    ]
                },
                "setWidthToTextSize": {
                    "returnType": "void",
                    "args": []
                },
                "onPressedChange": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "pressed",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "TabButton",
                    "args": [
                        {
                            "name": "text",
                            "type": "Nullable<sc.TextLike>",
                            "isOptional": true
                        },
                        {
                            "name": "icon",
                            "type": "Nullable<string>",
                            "isOptional": true
                        },
                        {
                            "name": "largeWidth",
                            "type": "Nullable<number>",
                            "isOptional": true
                        },
                        {
                            "name": "smallWidth",
                            "type": "Nullable<number>",
                            "isOptional": true
                        },
                        {
                            "name": "noIcon",
                            "type": "Nullable<boolean>",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": [
                "ig.FocusGui"
            ]
        },
        "sc.ItemTabbedBox": {
            "fields": {
                "tabArray": {
                    "type": "sc.ItemTabbedBox.TabButton[]",
                    "isOptional": false
                },
                "TabButton": {
                    "type": "ItemTabbedBox.TabButtonConstructor",
                    "isOptional": false
                }
            },
            "functions": {
                "_createTabButton": {
                    "returnType": "sc.ItemTabbedBox.TabButton",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "icon",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "type",
                            "type": "sc.ITEMS_TYPES",
                            "isOptional": false
                        },
                        {
                            "name": "subType",
                            "type": "Nullable<sc.ITEMS_EQUIP_TYPES>",
                            "isOptional": true
                        }
                    ]
                },
                "init": {
                    "returnType": "ItemTabbedBox",
                    "args": []
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc": {
            "fields": {
                "ItemTabbedBox": {
                    "type": "ItemTabbedBoxConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.menu.gui.item.item-menu": {
        "sc.ItemMenu": {
            "fields": {
                "hotkeyHelp": {
                    "type": "sc.ButtonGui",
                    "isOptional": false
                },
                "hotkeyFav": {
                    "type": "sc.ButtonGui",
                    "isOptional": false
                },
                "hotkeySort": {
                    "type": "sc.ButtonGui",
                    "isOptional": false
                },
                "statusEquipBox": {
                    "type": "sc.ItemStatusEquip",
                    "isOptional": false
                },
                "statusModifierBox": {
                    "type": "sc.ItemEquipModifier",
                    "isOptional": false
                },
                "statusDefaultBox": {
                    "type": "sc.ItemStatusDefault",
                    "isOptional": false
                },
                "statusBuffBox": {
                    "type": "sc.ItemStatusBuffs",
                    "isOptional": false
                },
                "statusFavs": {
                    "type": "sc.ItemStatusFavorites",
                    "isOptional": false
                },
                "statusTrade": {
                    "type": "sc.ItemStatusTrade",
                    "isOptional": false
                },
                "listBox": {
                    "type": "sc.ItemTabbedBox",
                    "isOptional": false
                },
                "consHelp": {
                    "type": "sc.ItemBuffHelp",
                    "isOptional": false
                },
                "sortMenu": {
                    "type": "sc.ItemSortMenu",
                    "isOptional": false
                },
                "helpGui": {
                    "type": "sc.HelpScreen",
                    "isOptional": false
                }
            },
            "functions": {
                "addObservers": {
                    "returnType": "void",
                    "args": []
                },
                "removeObservers": {
                    "returnType": "void",
                    "args": []
                },
                "showMenu": {
                    "returnType": "void",
                    "args": []
                },
                "hideMenu": {
                    "returnType": "void",
                    "args": []
                },
                "exitMenu": {
                    "returnType": "void",
                    "args": []
                },
                "onHotkeyHelpCheck": {
                    "returnType": "boolean",
                    "args": []
                },
                "onHelpButtonPressed": {
                    "returnType": "void",
                    "args": []
                },
                "createHelpGui": {
                    "returnType": "void",
                    "args": []
                },
                "onHotkeyFavoriteCheck": {
                    "returnType": "boolean",
                    "args": []
                },
                "onFavButtonPress": {
                    "returnType": "void",
                    "args": []
                },
                "onHotkeySortCheck": {
                    "returnType": "boolean",
                    "args": []
                },
                "onSortButtonPress": {
                    "returnType": "void",
                    "args": []
                },
                "onAddHotkeys": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "longTransition",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "commitHotKeysToTopBar": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "longTransition",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "onBackButtonPress": {
                    "returnType": "void",
                    "args": []
                },
                "_updateSortMenuButton": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "text",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "ItemMenu",
                    "args": []
                }
            },
            "parents": [
                "sc.BaseMenu",
                "sc.Model.Observer"
            ]
        },
        "sc": {
            "fields": {
                "ItemMenu": {
                    "type": "ItemMenuConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.menu.gui.item.item-sort-menu": {
        "sc.SortMenu": {
            "fields": {
                "ninepatch": {
                    "type": "ig.NinePatch",
                    "isOptional": false
                },
                "transitions": {
                    "type": "Record<string, ig.GuiHook.Transition>",
                    "isOptional": false
                },
                "buttongroup": {
                    "type": "sc.ButtonGroup",
                    "isOptional": false
                },
                "active": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "addButton": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "enumIndex",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "buttonIndex",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "showSortMenu": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "referenceGUI",
                            "type": "ig.GuiElementBase",
                            "isOptional": false
                        }
                    ]
                },
                "showSortMenuAt": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "hideSortMenu": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "sc.SortMenu",
                    "args": [
                        {
                            "name": "callback",
                            "type": "(button: ig.FocusGui) => void",
                            "isOptional": false
                        },
                        {
                            "name": "backCallback",
                            "type": "() => void",
                            "isOptional": true
                        },
                        {
                            "name": "widthOverride",
                            "type": "number",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": [
                "ig.BoxGui"
            ]
        },
        "sc": {
            "fields": {
                "SortMenu": {
                    "type": "SortMenuConstructor"
                },
                "ItemSortMenu": {
                    "type": "ItemSortMenuConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.ItemSortMenu": {
            "fields": {
                "name": {
                    "type": "string",
                    "isOptional": false
                },
                "description": {
                    "type": "string",
                    "isOptional": false
                },
                "sortType": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "onButtonPress": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "button",
                            "type": "sc.ButtonGui & { name: string; description: string; sortType: number }",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "ItemSortMenu",
                    "args": []
                }
            },
            "parents": [
                "sc.SortMenu"
            ]
        }
    },
    "game.feature.menu.gui.item.item-status-buffs": {
        "sc.ItemStatusBuffs": {
            "fields": {
                "gfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "maxBuffs": {
                    "type": "sc.NumberGui",
                    "isOptional": false
                },
                "currentBuffs": {
                    "type": "sc.NumberGui",
                    "isOptional": false
                },
                "_removeStartIndex": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "addObservers": {
                    "returnType": "void",
                    "args": []
                },
                "removeObservers": {
                    "returnType": "void",
                    "args": []
                },
                "showMenu": {
                    "returnType": "void",
                    "args": []
                },
                "exitMenu": {
                    "returnType": "void",
                    "args": []
                },
                "_createBuffs": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "ItemStatusBuffs",
                    "args": []
                }
            },
            "parents": [
                "sc.HeaderMenuPanel",
                "sc.Model.Observer"
            ]
        },
        "sc": {
            "fields": {
                "ItemStatusBuffs": {
                    "type": "ItemStatusBuffsConstructor"
                },
                "ItemBuffHelp": {
                    "type": "ItemBuffHelpConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.ItemBuffHelp": {
            "fields": {
                "gfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "store": {
                    "type": "boolean",
                    "isOptional": true
                }
            },
            "functions": {
                "addObservers": {
                    "returnType": "void",
                    "args": []
                },
                "removeObservers": {
                    "returnType": "void",
                    "args": []
                },
                "showMenu": {
                    "returnType": "void",
                    "args": []
                },
                "exitMenu": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "store",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "init": {
                    "returnType": "ItemBuffHelp",
                    "args": []
                }
            },
            "parents": [
                "ig.GuiElementBase",
                "sc.Model.Observer"
            ]
        }
    },
    "game.feature.menu.gui.item.item-status-default": {
        "sc.ItemStatusDefaultBar": {
            "fields": {
                "type": {
                    "type": "sc.MENU_BAR_TYPE",
                    "isOptional": false
                },
                "maxValue": {
                    "type": "number",
                    "isOptional": false
                },
                "currentValue": {
                    "type": "number",
                    "isOptional": false
                },
                "targetValue": {
                    "type": "number",
                    "isOptional": false
                },
                "maxNumber": {
                    "type": "sc.NumberGui",
                    "isOptional": false
                },
                "currentNumber": {
                    "type": "sc.NumberGui",
                    "isOptional": false
                },
                "barHeight": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "ItemStatusDefaultBar",
                    "args": [
                        {
                            "name": "text",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "type",
                            "type": "sc.MENU_BAR_TYPE",
                            "isOptional": false
                        },
                        {
                            "name": "buff",
                            "type": "unknown",
                            "isOptional": false
                        },
                        {
                            "name": "width",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "barHeight",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "position",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc": {
            "fields": {
                "ItemStatusDefaultBar": {
                    "type": "ItemStatusDefaultBarConstructor"
                },
                "ItemStatusDefault": {
                    "type": "ItemStatusDefaultConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.ItemStatusDefault": {
            "fields": {
                "menuGfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "level": {
                    "type": "sc.NumberGui",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "ItemStatusDefault",
                    "args": []
                }
            },
            "parents": [
                "sc.MenuPanel"
            ]
        }
    },
    "game.feature.menu.gui.item.item-status-equip": {
        "sc.ItemStatusEquip.BaseParams": {
            "fields": {
                "hp": {
                    "type": "number",
                    "isOptional": false
                },
                "atk": {
                    "type": "number",
                    "isOptional": false
                },
                "def": {
                    "type": "number",
                    "isOptional": false
                },
                "foc": {
                    "type": "number",
                    "isOptional": false
                },
                "fire": {
                    "type": "number",
                    "isOptional": false
                },
                "cold": {
                    "type": "number",
                    "isOptional": false
                },
                "shock": {
                    "type": "number",
                    "isOptional": false
                },
                "wave": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.ItemStatusEquip": {
            "fields": {
                "baseParams": {
                    "type": "sc.ItemStatusEquip.BaseParams",
                    "isOptional": false
                },
                "gfx": {
                    "type": "ig.Image",
                    "isOptional": false
                }
            },
            "functions": {
                "addObservers": {
                    "returnType": "void",
                    "args": []
                },
                "removeObservers": {
                    "returnType": "void",
                    "args": []
                },
                "showMenu": {
                    "returnType": "void",
                    "args": []
                },
                "exitMenu": {
                    "returnType": "void",
                    "args": []
                },
                "_setParameters": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "itemId",
                            "type": "sc.ItemID",
                            "isOptional": false
                        }
                    ]
                },
                "_resetParameters": {
                    "returnType": "void",
                    "args": []
                },
                "_createStatusDisplay": {
                    "returnType": "sc.SimpleStatusDisplay",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "name",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "colorIndex",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "icon",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "usePercent",
                            "type": "boolean",
                            "isOptional": false
                        },
                        {
                            "name": "maxValue",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "ItemStatusEquip",
                    "args": []
                }
            },
            "parents": [
                "sc.MenuPanel",
                "sc.Model.Observer"
            ]
        },
        "sc": {
            "fields": {
                "ItemStatusEquip": {
                    "type": "ItemStatusEquipConstructor"
                },
                "ItemEquipModifier": {
                    "type": "ItemEquipModifierConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.ItemEquipModifier": {
            "fields": {
                "modifierText": {
                    "type": "null",
                    "isOptional": false
                },
                "modifierPool": {
                    "type": "Record<keyof typeof sc.MODIFIERS, sc.SimpleStatusDisplay>",
                    "isOptional": false
                }
            },
            "functions": {
                "addObservers": {
                    "returnType": "void",
                    "args": []
                },
                "removeObservers": {
                    "returnType": "void",
                    "args": []
                },
                "showMenu": {
                    "returnType": "void",
                    "args": []
                },
                "exitMenu": {
                    "returnType": "void",
                    "args": []
                },
                "_setParameters": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "item",
                            "type": "sc.ItemID",
                            "isOptional": false
                        }
                    ]
                },
                "_resetParameters": {
                    "returnType": "void",
                    "args": []
                },
                "_createStatusDisplay": {
                    "returnType": "sc.SimpleStatusDisplay",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "name",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "colorIndex",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "icon",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "usePercent",
                            "type": "boolean",
                            "isOptional": false
                        },
                        {
                            "name": "maxValue",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "noPercent",
                            "type": "boolean",
                            "isOptional": false
                        },
                        {
                            "name": "modifierName",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "yOffset",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "ItemEquipModifier",
                    "args": []
                }
            },
            "parents": [
                "sc.HeaderMenuPanel",
                "sc.Model.Observer"
            ]
        }
    },
    "game.feature.menu.gui.item.item-status-favs": {
        "sc.FavoriteElementGui": {
            "fields": {
                "gfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "text": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "id": {
                    "type": "sc.ItemID",
                    "isOptional": false
                }
            },
            "functions": {
                "setItem": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "item",
                            "type": "sc.ItemID",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "FavoriteElementGui",
                    "args": []
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc": {
            "fields": {
                "FavoriteElementGui": {
                    "type": "FavoriteElementGuiConstructor"
                },
                "ItemStatusFavorites": {
                    "type": "ItemStatusFavoritesConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.ItemStatusFavorites": {
            "fields": {
                "gfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "line": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "maxFavs": {
                    "type": "sc.NumberGui",
                    "isOptional": false
                },
                "currentFavs": {
                    "type": "sc.NumberGui",
                    "isOptional": false
                },
                "_favs": {
                    "type": "sc.FavoriteElementGui[]",
                    "isOptional": false
                }
            },
            "functions": {
                "addObservers": {
                    "returnType": "void",
                    "args": []
                },
                "removeObservers": {
                    "returnType": "void",
                    "args": []
                },
                "showMenu": {
                    "returnType": "void",
                    "args": []
                },
                "exitMenu": {
                    "returnType": "void",
                    "args": []
                },
                "updateFavorites": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "ItemStatusFavorites",
                    "args": []
                }
            },
            "parents": [
                "sc.HeaderMenuPanel",
                "sc.Model.Observer"
            ]
        }
    },
    "game.feature.menu.gui.item.item-status-trade": {
        "sc.ItemStatusTrade": {
            "fields": {
                "gfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "content": {
                    "type": "ig.GuiElementBase",
                    "isOptional": false
                },
                "BaseEntryType": {
                    "type": "sc.ItemStatusTrade.BaseEntryTypeConstructor",
                    "isOptional": false
                }
            },
            "functions": {
                "_setTradeInfo": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "itemID",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "ItemStatusTrade",
                    "args": []
                }
            },
            "parents": [
                "sc.HeaderMenuPanel"
            ]
        },
        "sc": {
            "fields": {
                "ItemStatusTrade": {
                    "type": "ItemStatusTradeConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.ItemStatusTrade.BaseEntryType": {
            "fields": {
                "gfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "tradeGfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "type": {
                    "type": "string",
                    "isOptional": false
                },
                "itemID": {
                    "type": "number",
                    "isOptional": false
                },
                "textEntry": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "subEntry": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "tradeIcon": {
                    "type": "ig.ImageGui",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "BaseEntryType",
                    "args": [
                        {
                            "name": "itemSource",
                            "type": "sc.Inventory.ItemSource",
                            "isOptional": false
                        },
                        {
                            "name": "itemID",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "hasSubText",
                            "type": "Nullable<boolean>",
                            "isOptional": true
                        },
                        {
                            "name": "noMaxWidth",
                            "type": "Nullable<boolean>",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        }
    },
    "game.feature.menu.gui.list-boxes": {
        "sc.ButtonListBox": {
            "fields": {
                "buttonGroup": {
                    "type": "sc.ButtonGroup",
                    "isOptional": false
                },
                "contentPane": {
                    "type": "ig.GuiElementBase",
                    "isOptional": false
                },
                "paddingTop": {
                    "type": "number",
                    "isOptional": false
                },
                "paddingBetween": {
                    "type": "number",
                    "isOptional": false
                },
                "columnPadding": {
                    "type": "number",
                    "isOptional": false
                },
                "buttonWidth": {
                    "type": "number",
                    "isOptional": false
                },
                "useShoulderScroll": {
                    "type": "boolean",
                    "isOptional": false
                },
                "forceLastScroll": {
                    "type": "boolean",
                    "isOptional": false
                },
                "buttonInteract": {
                    "type": "ig.ButtonInteractEntry",
                    "isOptional": false
                },
                "pageSize": {
                    "type": "number",
                    "isOptional": false
                },
                "offsets": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "columns": {
                    "type": "sc.LIST_COLUMNS",
                    "isOptional": false
                },
                "_prevIndex": {
                    "type": "number",
                    "isOptional": false
                },
                "_skipFirst": {
                    "type": "boolean",
                    "isOptional": false
                },
                "_prevScrollBarHeight": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "setButtonGroup": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "buttonGroup",
                            "type": "sc.ButtonGroup",
                            "isOptional": false
                        }
                    ]
                },
                "activate": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "buttonInteract",
                            "type": "Nullable<ig.ButtonInteractEntry>",
                            "isOptional": true
                        }
                    ]
                },
                "deactivate": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "buttonInteract",
                            "type": "Nullable<ig.ButtonInteractEntry>",
                            "isOptional": true
                        }
                    ]
                },
                "addButton": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "button",
                            "type": "ig.FocusGui",
                            "isOptional": false
                        },
                        {
                            "name": "skipButtonGroup",
                            "type": "Nullable<false>",
                            "isOptional": true
                        },
                        {
                            "name": "xOffset",
                            "type": "Nullable<number>",
                            "isOptional": true
                        },
                        {
                            "name": "yOffset",
                            "type": "Nullable<number>",
                            "isOptional": true
                        }
                    ]
                },
                "clear": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "skip",
                            "type": "Nullable<boolean>",
                            "isOptional": true
                        }
                    ]
                },
                "scrollToY": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "b_",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "_getContentHeight": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "isNotFirstColumn",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "_setContentHeight": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "height",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "ButtonListBox",
                    "args": [
                        {
                            "name": "paddingTop",
                            "type": "number",
                            "isOptional": true
                        },
                        {
                            "name": "paddingBetween",
                            "type": "number",
                            "isOptional": true
                        },
                        {
                            "name": "pageSize",
                            "type": "number",
                            "isOptional": true
                        },
                        {
                            "name": "columns",
                            "type": "sc.LIST_COLUMNS",
                            "isOptional": true
                        },
                        {
                            "name": "columnPadding",
                            "type": "number",
                            "isOptional": true
                        },
                        {
                            "name": "buttonWidth",
                            "type": "number",
                            "isOptional": true
                        },
                        {
                            "name": "buttonInteract",
                            "type": "ig.ButtonInteractEntry",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": [
                "sc.ScrollPane"
            ]
        },
        "sc": {
            "fields": {
                "ButtonListBox": {
                    "type": "ButtonListBoxConstructor"
                },
                "ItemListBox": {
                    "type": "ItemListBoxConstructor"
                },
                "MultiColumnItemListBox": {
                    "type": "MultiColumnItemListBoxConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.ItemListBox": {
            "fields": {
                "list": {
                    "type": "sc.ButtonListBox",
                    "isOptional": false
                }
            },
            "functions": {
                "clear": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "skip",
                            "type": "Nullable<boolean>",
                            "isOptional": true
                        }
                    ]
                },
                "addButton": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "gui",
                            "type": "ig.FocusGui",
                            "isOptional": false
                        }
                    ]
                },
                "getChildren": {
                    "returnType": "ig.GuiHook[]",
                    "args": []
                },
                "init": {
                    "returnType": "ItemListBox",
                    "args": [
                        {
                            "name": "topPadding",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "noHeader",
                            "type": "boolean",
                            "isOptional": false
                        },
                        {
                            "name": "buttonInteract",
                            "type": "ig.ButtonInteractEntry",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc.MultiColumnItemListBox": {
            "fields": {
                "list": {
                    "type": "sc.ButtonListBox",
                    "isOptional": false
                }
            },
            "functions": {
                "addButton": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "button",
                            "type": "sc.ListBoxButton",
                            "isOptional": false
                        }
                    ]
                },
                "clear": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "refocus",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "buttonGroup": {
                    "returnType": "sc.ButtonGroup",
                    "args": []
                },
                "init": {
                    "returnType": "sc.MultiColumnItemListBox",
                    "args": [
                        {
                            "name": "b_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "a_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "columns",
                            "type": "sc.LIST_COLUMNS",
                            "isOptional": false
                        },
                        {
                            "name": "c_",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        }
    },
    "game.feature.menu.gui.lore.lore-list": {
        "sc.LoreListBoxNew": {
            "fields": {},
            "functions": {},
            "parents": [
                "sc.ListTabbedPane"
            ]
        },
        "sc": {
            "fields": {
                "LoreListBoxNew": {
                    "type": "LoreListBoxNewConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.menu.gui.lore.lore-menu": {},
    "game.feature.menu.gui.lore.lore-misc": {
        "sc.LoreInfoBox": {
            "fields": {
                "title": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "category": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "alternativeArrow": {
                    "type": "ig.ImageGui",
                    "isOptional": false
                },
                "alternative": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "scrollContainer": {
                    "type": "sc.ScrollPane",
                    "isOptional": false
                },
                "focus": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "setLore": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "LoreInfoBox",
                    "args": []
                }
            },
            "parents": [
                "ig.BoxGui"
            ]
        },
        "sc": {
            "fields": {
                "LoreInfoBox": {
                    "type": "LoreInfoBoxConstructor"
                },
                "LoreEntryButton": {
                    "type": "LoreEntryButtonConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.LoreEntryButton": {
            "fields": {},
            "functions": {},
            "parents": [
                "sc.ListBoxButton"
            ]
        }
    },
    "game.feature.menu.gui.main-menu": {
        "sc.MainMenu": {
            "fields": {
                "screenBlocking": {
                    "type": "boolean",
                    "isOptional": false
                },
                "gfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "submenus": {
                    "type": "Record<string, sc.BaseMenu>",
                    "isOptional": false
                },
                "topBar": {
                    "type": "ig.ColorGui",
                    "isOptional": false
                },
                "hotkeyBar": {
                    "type": "sc.MainMenu.TopBar",
                    "isOptional": false
                },
                "smallRhombus": {
                    "type": "sc.MainMenu.SmallRhombus",
                    "isOptional": false
                },
                "lea": {
                    "type": "sc.MainMenu.Lea",
                    "isOptional": false
                },
                "sline": {
                    "type": "sc.MainMenu.StatusLine",
                    "isOptional": false
                },
                "moneyTime": {
                    "type": "sc.TimeAndMoneyGUI",
                    "isOptional": false
                },
                "menuDisplay": {
                    "type": "sc.MainMenu.CurrentMenuDisplay",
                    "isOptional": false
                },
                "backButton": {
                    "type": "sc.ButtonGui",
                    "isOptional": false
                },
                "info": {
                    "type": "sc.InfoBar",
                    "isOptional": false
                },
                "buffInfo": {
                    "type": "sc.BuffInfo",
                    "isOptional": false
                },
                "subMenuInsertPos": {
                    "type": "number",
                    "isOptional": false
                },
                "TopBar": {
                    "type": "sc.MainMenu.TopBarConstructor",
                    "isOptional": false
                },
                "SubMenuBox": {
                    "type": "sc.MainMenu.SubMenuBoxConstructor",
                    "isOptional": false
                },
                "CurrentMenuDisplay": {
                    "type": "sc.MainMenu.CurrentMenuDisplayConstructor",
                    "isOptional": false
                },
                "StatusLine": {
                    "type": "sc.MainMenu.StatusLineConstructor",
                    "isOptional": false
                },
                "LeaLarge": {
                    "type": "sc.MainMenu.LeaLargeConstructor",
                    "isOptional": false
                },
                "LeaSmall": {
                    "type": "sc.MainMenu.LeaSmallConstructor",
                    "isOptional": false
                },
                "Lea": {
                    "type": "sc.MainMenu.LeaConstructor",
                    "isOptional": false
                },
                "SmallRhombus": {
                    "type": "sc.MainMenu.SmallRhombusConstructor",
                    "isOptional": false
                },
                "x": {
                    "type": "number",
                    "isOptional": false
                },
                "y": {
                    "type": "number",
                    "isOptional": false
                },
                "offX": {
                    "type": "number",
                    "isOptional": false
                },
                "offY": {
                    "type": "number",
                    "isOptional": false
                },
                "w": {
                    "type": "number",
                    "isOptional": false
                },
                "h": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "_checkBackButtonInput": {
                    "returnType": "boolean",
                    "args": []
                },
                "_onBackButton": {
                    "returnType": "void",
                    "args": []
                },
                "_enterMenu": {
                    "returnType": "void",
                    "args": []
                },
                "_exitMenu": {
                    "returnType": "void",
                    "args": []
                },
                "_preCleanUp": {
                    "returnType": "void",
                    "args": []
                },
                "_postCleanUp": {
                    "returnType": "void",
                    "args": []
                },
                "_switchMenus": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "newId",
                            "type": "sc.MENU_SUBMENU",
                            "isOptional": false
                        },
                        {
                            "name": "oldId",
                            "type": "sc.MENU_SUBMENU",
                            "isOptional": false
                        }
                    ]
                },
                "_createMenu": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "id",
                            "type": "sc.MENU_SUBMENU",
                            "isOptional": false
                        }
                    ]
                },
                "_getMenuFromID": {
                    "returnType": "sc.BaseMenu",
                    "args": [
                        {
                            "name": "id",
                            "type": "sc.MENU_SUBMENU",
                            "isOptional": false
                        }
                    ]
                },
                "_makeExtraTransitions": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "newId",
                            "type": "sc.MENU_SUBMENU",
                            "isOptional": true
                        },
                        {
                            "name": "_oldId",
                            "type": "Nullable<sc.MENU_SUBMENU>",
                            "isOptional": true
                        },
                        {
                            "name": "skipTransition",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "init": {
                    "returnType": "MainMenu",
                    "args": []
                }
            },
            "parents": [
                "ig.GuiElementBase",
                "sc.Model.Observer"
            ]
        },
        "sc": {
            "fields": {
                "MainMenu": {
                    "type": "MainMenuConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.MainMenu.TopBar": {
            "fields": {
                "hotkeys": {
                    "type": "unknown[]",
                    "isOptional": false
                },
                "_lateHotKeys": {
                    "type": "boolean",
                    "isOptional": false
                },
                "_hotkeyTimer": {
                    "type": "number",
                    "isOptional": false
                },
                "_hotkeyTime": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "enterMenu": {
                    "returnType": "void",
                    "args": []
                },
                "exitMenu": {
                    "returnType": "void",
                    "args": []
                },
                "cleanChildren": {
                    "returnType": "void",
                    "args": []
                },
                "_addHotKeyButtons": {
                    "returnType": "void",
                    "args": []
                },
                "_positionHotKeys": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "addGuis",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "updateSize",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "hideHotkeys": {
                    "returnType": "void",
                    "args": []
                },
                "addHotkeysToTopBar": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "resetHotkeyTimer",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "updateHotkeys": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "updateSize",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "init": {
                    "returnType": "TopBar",
                    "args": [
                        {
                            "name": "width",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc.MainMenu.CurrentMenuDisplay": {
            "fields": {
                "boxes": {
                    "type": "sc.MainMenu.SubMenuBox[]",
                    "isOptional": false
                }
            },
            "functions": {
                "pushMenuDisplay": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "CurrentMenuDisplay",
                    "args": []
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc.MainMenu.SubMenuBox": {
            "fields": {
                "text": {
                    "type": "sc.TextGui",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "SubMenuBox",
                    "args": [
                        {
                            "name": "text",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.BoxGui"
            ]
        },
        "sc.MainMenu.StatusLine": {
            "fields": {
                "slope": {
                    "type": "sc.SlopeLine",
                    "isOptional": false
                },
                "line": {
                    "type": "ig.ColorGui",
                    "isOptional": false
                }
            },
            "functions": {
                "showLine": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "time",
                            "type": "number",
                            "isOptional": true
                        }
                    ]
                },
                "hideLine": {
                    "returnType": "void",
                    "args": []
                },
                "hideLineFade": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "StatusLine",
                    "args": []
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc.MainMenu.LeaLarge": {
            "fields": {
                "gfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "skinGfx": {
                    "type": "ig.Image",
                    "isOptional": true
                },
                "bounds": {
                    "type": "Bounds",
                    "isOptional": true
                }
            },
            "functions": {
                "setBounds": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "bounds",
                            "type": "Bounds",
                            "isOptional": true
                        }
                    ]
                },
                "init": {
                    "returnType": "LeaLarge",
                    "args": []
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc.MainMenu.LeaSmall": {
            "fields": {
                "gfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "skinGfx": {
                    "type": "ig.Image",
                    "isOptional": true
                },
                "bounds": {
                    "type": "Bounds",
                    "isOptional": true
                }
            },
            "functions": {
                "setBounds": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "bounds",
                            "type": "Bounds",
                            "isOptional": true
                        }
                    ]
                },
                "init": {
                    "returnType": "LeaSmall",
                    "args": []
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc.MainMenu.Lea": {
            "fields": {
                "large": {
                    "type": "sc.MainMenu.LeaLarge",
                    "isOptional": false
                },
                "small": {
                    "type": "sc.MainMenu.LeaSmall",
                    "isOptional": false
                }
            },
            "functions": {
                "moveLea": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "offX",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "offY",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "small",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "time",
                            "type": "number",
                            "isOptional": true
                        }
                    ]
                },
                "hideLea": {
                    "returnType": "void",
                    "args": []
                },
                "reset": {
                    "returnType": "void",
                    "args": []
                },
                "fadeToSmall": {
                    "returnType": "void",
                    "args": []
                },
                "fadeToLarge": {
                    "returnType": "void",
                    "args": []
                },
                "isSmall": {
                    "returnType": "boolean",
                    "args": []
                },
                "init": {
                    "returnType": "Lea",
                    "args": []
                }
            },
            "parents": [
                "ig.GuiElementBase",
                "sc.Model.Observer"
            ]
        },
        "sc.MainMenu.SmallRhombus": {
            "fields": {
                "gfx": {
                    "type": "ig.Image",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "SmallRhombus",
                    "args": []
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        }
    },
    "game.feature.menu.gui.map.map-area": {
        "sc.MapArea": {
            "fields": {},
            "functions": {
                "init": {
                    "returnType": "MapArea",
                    "args": []
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc": {
            "fields": {
                "MapArea": {
                    "type": "MapAreaConstructor"
                },
                "MapAreaContainer": {
                    "type": "MapAreaContainerConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.MapAreaContainer.AreaCache": {
            "fields": {
                "x": {
                    "type": "number",
                    "isOptional": false
                },
                "y": {
                    "type": "number",
                    "isOptional": false
                },
                "cx": {
                    "type": "number",
                    "isOptional": false
                },
                "cy": {
                    "type": "number",
                    "isOptional": false
                },
                "floor": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.MapAreaContainer": {
            "fields": {
                "gfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "background": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "area": {
                    "type": "sc.MapArea",
                    "isOptional": false
                },
                "buttongroup": {
                    "type": "sc.MouseButtonGroup",
                    "isOptional": false
                },
                "_lastMousePos": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "_cursorPos": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "_dragTimer": {
                    "type": "number",
                    "isOptional": false
                },
                "_delayedDrag": {
                    "type": "boolean",
                    "isOptional": false
                },
                "_alphaTimer": {
                    "type": "number",
                    "isOptional": false
                },
                "_alphaTime": {
                    "type": "number",
                    "isOptional": false
                },
                "_alpha": {
                    "type": "number",
                    "isOptional": false
                },
                "_firstVisit": {
                    "type": "boolean",
                    "isOptional": false
                },
                "_prevFloor": {
                    "type": "number",
                    "isOptional": false
                },
                "_vertOffset": {
                    "type": "number",
                    "isOptional": false
                },
                "_vertOffsetTarget": {
                    "type": "number",
                    "isOptional": false
                },
                "_vertOffsetStart": {
                    "type": "number",
                    "isOptional": false
                },
                "_vertOffsetCurrent": {
                    "type": "number",
                    "isOptional": false
                },
                "_vertOffsetTimer": {
                    "type": "number",
                    "isOptional": false
                },
                "_vertOffsetTime": {
                    "type": "number",
                    "isOptional": false
                },
                "_areaCache": {
                    "type": "Record<string, sc.MapAreaContainer.AreaCache>",
                    "isOptional": false
                },
                "_gamepadActive": {
                    "type": "boolean",
                    "isOptional": false
                },
                "_lastDevice": {
                    "type": "number",
                    "isOptional": false
                },
                "mapNameGui": {
                    "type": "sc.MapNameGui",
                    "isOptional": false
                },
                "hoverRoom": {
                    "type": "Nullable<sc.LandmarkGui | sc.StampGui | sc.AreaRoomBounds | false>",
                    "isOptional": false
                },
                "cursor": {
                    "type": "sc.MapCursor",
                    "isOptional": false
                },
                "landmarks": {
                    "type": "sc.LandmarkGui[]",
                    "isOptional": false
                },
                "stamps": {
                    "type": "sc.StampGui[]",
                    "isOptional": false
                }
            },
            "functions": {
                "onMouseInteract": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "mouseOver",
                            "type": "boolean",
                            "isOptional": false
                        },
                        {
                            "name": "clicked",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "onLandmarkPressed": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "landmark",
                            "type": "sc.LandmarkGui",
                            "isOptional": false
                        }
                    ]
                },
                "findMap": {
                    "returnType": "boolean | undefined",
                    "args": [
                        {
                            "name": "mx",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "my",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "gamepad",
                            "type": "boolean",
                            "isOptional": false
                        },
                        {
                            "name": "wait",
                            "type": "number",
                            "isOptional": true
                        }
                    ]
                },
                "showLandmarkName": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "loadNewArea": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "areaName",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "onLoadableComplete": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "loaded",
                            "type": "boolean",
                            "isOptional": false
                        },
                        {
                            "name": "area",
                            "type": "sc.MapModel.Area",
                            "isOptional": false
                        }
                    ]
                },
                "setArea": {
                    "returnType": "void",
                    "args": []
                },
                "createLandmarks": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "doAnything",
                            "type": "boolean",
                            "isOptional": false
                        },
                        {
                            "name": "floor",
                            "type": "sc.MapFloor",
                            "isOptional": false
                        }
                    ]
                },
                "addStamp": {
                    "returnType": "void",
                    "args": []
                },
                "isSettable": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "floor",
                            "type": "sc.MapFloor",
                            "isOptional": false
                        },
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "getCurrentFloorGui": {
                    "returnType": "Nullable<sc.MapFloor>",
                    "args": []
                },
                "centerCurrentPosition": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "showFloors",
                            "type": "boolean",
                            "isOptional": false
                        },
                        {
                            "name": "smooth",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "limitCameraPos": {
                    "returnType": "void",
                    "args": []
                },
                "limitCursorPos": {
                    "returnType": "void",
                    "args": []
                },
                "initCursor": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "pos",
                            "type": "Vec2",
                            "isOptional": false
                        }
                    ]
                },
                "calculateScrollingOffset": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "skipTransition",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "showMenu": {
                    "returnType": "void",
                    "args": []
                },
                "exitMenu": {
                    "returnType": "void",
                    "args": []
                },
                "addObservers": {
                    "returnType": "void",
                    "args": []
                },
                "removeObservers": {
                    "returnType": "void",
                    "args": []
                }
            },
            "parents": [
                "ig.GuiElementBase",
                "sc.Model.Observer"
            ]
        }
    },
    "game.feature.menu.gui.map.map-floor": {
        "sc.MapRoom": {
            "fields": {
                "gfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "room": {
                    "type": "sc.AreaRoomBounds",
                    "isOptional": false
                },
                "buffer": {
                    "type": "ig.ImageAtlasFragment",
                    "isOptional": false
                },
                "floor": {
                    "type": "sc.AreaLoadable.Floor",
                    "isOptional": false
                },
                "name": {
                    "type": "string",
                    "isOptional": false
                },
                "id": {
                    "type": "number",
                    "isOptional": false
                },
                "roomAlpha": {
                    "type": "number",
                    "isOptional": false
                },
                "tileWidth": {
                    "type": "number",
                    "isOptional": false
                },
                "tileHeight": {
                    "type": "number",
                    "isOptional": false
                },
                "active": {
                    "type": "boolean",
                    "isOptional": false
                },
                "unlocked": {
                    "type": "boolean",
                    "isOptional": false
                },
                "prerendered": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "onVisibilityChange": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "visible",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "preRender": {
                    "returnType": "void",
                    "args": []
                },
                "clearPrerendered": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "MapRoom",
                    "args": [
                        {
                            "name": "room",
                            "type": "sc.AreaRoomBounds",
                            "isOptional": false
                        },
                        {
                            "name": "floor",
                            "type": "sc.AreaLoadable.Floor",
                            "isOptional": false
                        },
                        {
                            "name": "id",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc": {
            "fields": {
                "MapRoom": {
                    "type": "MapRoomConstructor"
                },
                "MapFloor": {
                    "type": "MapFloorConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.MapFloor": {
            "fields": {
                "floor": {
                    "type": "sc.AreaLoadable.Floor",
                    "isOptional": false
                },
                "name": {
                    "type": "string",
                    "isOptional": false
                },
                "nameGui": {
                    "type": "null",
                    "isOptional": false
                },
                "leaGui": {
                    "type": "sc.MapCurrentRoomWrapper",
                    "isOptional": false
                },
                "rooms": {
                    "type": "sc.AreaRoomBounds[]",
                    "isOptional": false
                },
                "activeRoom": {
                    "type": "ig.GuiHook",
                    "isOptional": false
                },
                "callback": {
                    "type": "(doAnything: boolean, mapFloor: sc.MapFloor, rooms: sc.MapRoom) => void",
                    "isOptional": false
                },
                "bounds": {
                    "type": "Vec2 & { width: number; height: number }",
                    "isOptional": false
                },
                "width": {
                    "type": "number",
                    "isOptional": false
                },
                "height": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "onAttach": {
                    "returnType": "void",
                    "args": []
                },
                "update": {
                    "returnType": "void",
                    "args": []
                },
                "updateDrawables": {
                    "returnType": "void",
                    "args": []
                },
                "showFloor": {
                    "returnType": "void",
                    "args": []
                },
                "hideFloor": {
                    "returnType": "void",
                    "args": []
                },
                "calculateOpacity": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "skipTransition",
                            "type": "boolean",
                            "isOptional": false
                        },
                        {
                            "name": "show",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "calculatePosOffset": {
                    "returnType": "void",
                    "args": []
                },
                "addObservers": {
                    "returnType": "void",
                    "args": []
                },
                "removeObservers": {
                    "returnType": "void",
                    "args": []
                },
                "_updateAlphaOnRooms": {
                    "returnType": "void",
                    "args": []
                },
                "_createIcons": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "rooms",
                            "type": "sc.MapRoom[]",
                            "isOptional": false
                        }
                    ]
                },
                "_createRooms": {
                    "returnType": "sc.MapRoom[]",
                    "args": []
                },
                "getBounds": {
                    "returnType": "sc.MapFloor['bounds']",
                    "args": [
                        {
                            "name": "hooks",
                            "type": "ig.GuiHook[]",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "MapFloor",
                    "args": [
                        {
                            "name": "floor",
                            "type": "sc.AreaLoadable.Floor",
                            "isOptional": false
                        },
                        {
                            "name": "callback",
                            "type": "sc.MapFloor['callback']",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase",
                "sc.Model.Observer"
            ]
        }
    },
    "game.feature.menu.gui.map.map-menu": {},
    "game.feature.menu.gui.map.map-misc": {
        "sc.MapCurrentRoomWrapper": {
            "fields": {
                "gfx": {
                    "type": "ig.Image",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "MapCurrentRoomWrapper",
                    "args": [
                        {
                            "name": "activeRoom",
                            "type": "ig.GuiHook",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc": {
            "fields": {
                "MapCurrentRoomWrapper": {
                    "type": "MapCurrentRoomWrapperConstructor"
                },
                "LandmarkGui": {
                    "type": "LandmarkGuiConstructor"
                },
                "MapNameGui": {
                    "type": "MapNameGuiConstructor"
                },
                "WorldmapAreaName": {
                    "type": "WorldmapAreaNameConstructor"
                },
                "MapCursor": {
                    "type": "MapCursorConstructor"
                },
                "MapChestDisplay": {
                    "type": "MapChestDisplayConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.LandmarkGui": {
            "fields": {
                "map": {
                    "type": "sc.AreaLoadable.Map",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "LandmarkGui",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "landmark",
                            "type": "any",
                            "isOptional": false
                        },
                        {
                            "name": "floor",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "map",
                            "type": "any",
                            "isOptional": false
                        },
                        {
                            "name": "area",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.FocusGui"
            ]
        },
        "sc.MapNameGui": {
            "fields": {
                "ninepatch": {
                    "type": "ig.NinePatch",
                    "isOptional": false
                },
                "text": {
                    "type": "sc.TextGui",
                    "isOptional": false
                }
            },
            "functions": {
                "setText": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "text",
                            "type": "sc.TextLike",
                            "isOptional": false
                        },
                        {
                            "name": "wait",
                            "type": "number",
                            "isOptional": true
                        },
                        {
                            "name": "skipTransition",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "init": {
                    "returnType": "MapNameGui",
                    "args": []
                }
            },
            "parents": [
                "ig.BoxGui"
            ]
        },
        "sc.WorldmapAreaName": {
            "fields": {
                "gfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "name": {
                    "type": "sc.MapNameGui",
                    "isOptional": false
                },
                "hasText": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "setText": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "text",
                            "type": "sc.TextLike",
                            "isOptional": false
                        },
                        {
                            "name": "wait",
                            "type": "Nullable<boolean>",
                            "isOptional": true
                        },
                        {
                            "name": "skip",
                            "type": "Nullable<boolean>",
                            "isOptional": true
                        }
                    ]
                },
                "init": {
                    "returnType": "WorldmapAreaName",
                    "args": []
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc.MapCursor": {
            "fields": {
                "gfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "focusOffset": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "focus": {
                    "type": "boolean",
                    "isOptional": false
                },
                "_focusTimer": {
                    "type": "number",
                    "isOptional": false
                },
                "_focusTime": {
                    "type": "number",
                    "isOptional": false
                },
                "_focusOffset": {
                    "type": "number",
                    "isOptional": false
                },
                "_lastDevice": {
                    "type": "number",
                    "isOptional": false
                },
                "_gamepadActive": {
                    "type": "boolean",
                    "isOptional": false
                },
                "_worldmap": {
                    "type": "boolean",
                    "isOptional": false
                },
                "_ignoreModel": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "focusOnNode": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "unfocus": {
                    "returnType": "void",
                    "args": []
                },
                "moveTo": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "smooth",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "transitionTime",
                            "type": "number",
                            "isOptional": true
                        }
                    ]
                },
                "looseFocus": {
                    "returnType": "void",
                    "args": []
                },
                "addObservers": {
                    "returnType": "void",
                    "args": []
                },
                "removeObservers": {
                    "returnType": "void",
                    "args": []
                },
                "update": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "MapCursor",
                    "args": [
                        {
                            "name": "worldmap",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase",
                "sc.Model.Observer"
            ]
        },
        "sc.MapChestDisplay": {
            "fields": {
                "current": {
                    "type": "sc.NumberGui",
                    "isOptional": false
                },
                "max": {
                    "type": "sc.NumberGui",
                    "isOptional": false
                },
                "_oldCount": {
                    "type": "number",
                    "isOptional": false
                },
                "_oldMax": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "MapChestDisplay",
                    "args": []
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        }
    },
    "game.feature.menu.gui.map.map-stamp": {
        "sc.StampGui": {
            "fields": {
                "gfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "key": {
                    "type": "sc.MAP_STAMPS",
                    "isOptional": false
                },
                "icon": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "floor": {
                    "type": "number",
                    "isOptional": false
                },
                "floorGui": {
                    "type": "sc.MapFloor",
                    "isOptional": false
                },
                "name": {
                    "type": "string",
                    "isOptional": false
                },
                "index": {
                    "type": "number",
                    "isOptional": false
                },
                "activated": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "setKey": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "key",
                            "type": "sc.MAP_STAMPS",
                            "isOptional": false
                        }
                    ]
                },
                "getDistanceToCursor": {
                    "returnType": "number",
                    "args": []
                },
                "init": {
                    "returnType": "StampGui",
                    "args": [
                        {
                            "name": "key",
                            "type": "sc.MAP_STAMPS",
                            "isOptional": false
                        },
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "floor",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "index",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "floorGui",
                            "type": "sc.MapFloor",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.FocusGui"
            ]
        },
        "sc": {
            "fields": {
                "StampGui": {
                    "type": "StampGuiConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.menu.gui.map.map-worldmap": {
        "sc.AreaButton": {
            "fields": {
                "key": {
                    "type": "string",
                    "isOptional": false
                },
                "area": {
                    "type": "sc.MapModel.Area",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": [
                "ig.FocusGui"
            ]
        },
        "sc": {
            "fields": {
                "AreaButton": {
                    "type": "AreaButtonConstructor"
                },
                "MapWorldMap": {
                    "type": "MapWorldMapConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.MapWorldMap": {
            "fields": {
                "areaName": {
                    "type": "sc.WorldmapAreaName",
                    "isOptional": false
                }
            },
            "functions": {
                "_setAreaName": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "button",
                            "type": "sc.AreaButton",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "MapWorldMap",
                    "args": []
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        }
    },
    "game.feature.menu.gui.menu-misc": {
        "sc.MODIFIER_ICON_DRAW": {
            "fields": {
                "X": {
                    "type": "number"
                },
                "Y": {
                    "type": "number"
                },
                "SIZE": {
                    "type": "number"
                },
                "MAX_PER_ROW": {
                    "type": "number"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.PercentNumber": {
            "fields": {
                "number": {
                    "type": "sc.NumberGui",
                    "isOptional": false
                }
            },
            "functions": {
                "setNumber": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "number",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "skipTransition",
                            "type": "Nullable<boolean>",
                            "isOptional": true
                        }
                    ]
                },
                "setColor": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "color",
                            "type": "sc.GUI_NUMBER_COLOR",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "PercentNumber",
                    "args": [
                        {
                            "name": "maxValue",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "sc.NumberGui.Settings",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc": {
            "fields": {
                "PercentNumber": {
                    "type": "PercentNumberConstructor"
                },
                "NewUnlockButton": {
                    "type": "NewUnlockButtonConstructor"
                },
                "BuffInfo": {
                    "type": "BuffInfoConstructor"
                },
                "InfoBar": {
                    "type": "InfoBarConstructor"
                },
                "ListBoxButton": {
                    "type": "ListBoxButtonConstructor"
                },
                "ItemBoxButton": {
                    "type": "ItemBoxButtonConstructor"
                },
                "SimpleStatusDisplay": {
                    "type": "SimpleStatusDisplayConstructor"
                },
                "PercentChar": {
                    "type": "PercentCharConstructor"
                },
                "MenuPanel": {
                    "type": "MenuPanelConstructor"
                },
                "HeaderMenuPanel": {
                    "type": "HeaderMenuPanelConstructor"
                },
                "MenuScanLines": {
                    "type": "MenuScanLinesConstructor"
                },
                "ScrollPane": {
                    "type": "ScrollPaneConstructor"
                },
                "Slider": {
                    "type": "SliderConstructor"
                },
                "TimeAndMoneyGUI": {
                    "type": "TimeAndMoneyGUIConstructor"
                },
                "DummyContainer": {
                    "type": "DummyContainerConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.NewUnlockButton": {
            "fields": {},
            "functions": {},
            "parents": [
                "sc.ButtonGui"
            ]
        },
        "sc.BuffInfo": {
            "fields": {
                "_width": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "setText": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "text",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "initDelay",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "BuffInfo",
                    "args": []
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc.InfoBar": {
            "fields": {
                "text": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "sizeTransition": {
                    "type": "{\n        startWidth: number;\n        width: number;\n        startHeight: number;\n        height: number;\n        time: number;\n        timeFunction: KeySpline;\n        timer: number;\n      }",
                    "isOptional": false
                },
                "skipRender": {
                    "type": "boolean",
                    "isOptional": false
                },
                "alpha": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "doSizeTransition": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "width",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "height",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "time",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "timeFunction",
                            "type": "KeySpline",
                            "isOptional": false
                        },
                        {
                            "name": "delay",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "setText": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "text",
                            "type": "sc.TextLike",
                            "isOptional": false
                        },
                        {
                            "name": "sizeTransitionDelay",
                            "type": "number",
                            "isOptional": true
                        }
                    ]
                },
                "init": {
                    "returnType": "InfoBar",
                    "args": [
                        {
                            "name": "width",
                            "type": "number",
                            "isOptional": true
                        },
                        {
                            "name": "height",
                            "type": "number",
                            "isOptional": true
                        },
                        {
                            "name": "skipRender",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc.InfoBar.sizeTransition": {
            "fields": {
                "startWidth": {
                    "type": "number",
                    "isOptional": false
                },
                "width": {
                    "type": "number",
                    "isOptional": false
                },
                "startHeight": {
                    "type": "number",
                    "isOptional": false
                },
                "height": {
                    "type": "number",
                    "isOptional": false
                },
                "time": {
                    "type": "number",
                    "isOptional": false
                },
                "timeFunction": {
                    "type": "KeySpline",
                    "isOptional": false
                },
                "timer": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.ListBoxButton.Data": {
            "fields": {
                "id": {
                    "type": "string | number",
                    "isOptional": false
                },
                "description": {
                    "type": "string",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.ListBoxButton": {
            "fields": {
                "button": {
                    "type": "sc.ButtonGui",
                    "isOptional": false
                },
                "data": {
                    "type": "sc.ListBoxButton.Data",
                    "isOptional": false
                },
                "_width": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "setButtonText": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "text",
                            "type": "sc.TextLike",
                            "isOptional": false
                        }
                    ]
                },
                "setWidth": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "buttonWidth",
                            "type": "number",
                            "isOptional": true
                        },
                        {
                            "name": "lineWidth",
                            "type": "number",
                            "isOptional": true
                        }
                    ]
                },
                "setText": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "text",
                            "type": "sc.TextLike",
                            "isOptional": false
                        }
                    ]
                },
                "setActive": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "active",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "ListBoxButton",
                    "args": [
                        {
                            "name": "text",
                            "type": "sc.TextLike",
                            "isOptional": false
                        },
                        {
                            "name": "buttonWidth",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "lineWidth",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "id",
                            "type": "string | number",
                            "isOptional": true
                        },
                        {
                            "name": "description",
                            "type": "string",
                            "isOptional": true
                        },
                        {
                            "name": "noLine",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "alignCenter",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "sound",
                            "type": "ig.Sound",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": [
                "ig.FocusGui"
            ]
        },
        "sc.ItemBoxButton": {
            "fields": {
                "amount": {
                    "type": "sc.NumberGui",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "sc.ItemBoxButton",
                    "args": [
                        {
                            "name": "text",
                            "type": "sc.TextLike",
                            "isOptional": false
                        },
                        {
                            "name": "buttonWidth",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "lineWidth",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "amount",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "id",
                            "type": "string | number",
                            "isOptional": true
                        },
                        {
                            "name": "description",
                            "type": "string",
                            "isOptional": true
                        },
                        {
                            "name": "noLine",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "alignCenter",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "sound",
                            "type": "ig.Sound",
                            "isOptional": true
                        },
                        {
                            "name": "maxValue",
                            "type": "number",
                            "isOptional": true
                        },
                        {
                            "name": "level",
                            "type": "number",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": [
                "sc.ListBoxButton"
            ]
        },
        "sc.SimpleStatusDisplay": {
            "fields": {
                "gfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "lineID": {
                    "type": "number",
                    "isOptional": false
                },
                "iconIndex": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "currentValueGui": {
                    "type": "sc.NumberGui",
                    "isOptional": false
                },
                "changeValueGui": {
                    "type": "sc.NumberGui",
                    "isOptional": false
                },
                "arrowGui": {
                    "type": "ig.ImageGui",
                    "isOptional": false
                },
                "percentCurrentGui": {
                    "type": "sc.PercentChar",
                    "isOptional": false
                },
                "simpleMode": {
                    "type": "boolean",
                    "isOptional": false
                },
                "noPercentMode": {
                    "type": "boolean",
                    "isOptional": false
                },
                "width": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "SimpleStatusDisplay",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "lineID",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "iconID",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "usePercent",
                            "type": "boolean",
                            "isOptional": false
                        },
                        {
                            "name": "maxValue",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "simpleMode",
                            "type": "boolean",
                            "isOptional": false
                        },
                        {
                            "name": "width",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "noPercentMode",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc.PercentChar": {
            "fields": {},
            "functions": {},
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc.MenuPanel": {
            "fields": {},
            "functions": {
                "init": {
                    "returnType": "sc.MenuPanel",
                    "args": [
                        {
                            "name": "panelType",
                            "type": "sc.MenuPanelType",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": [
                "ig.BoxGui"
            ]
        },
        "sc.HeaderMenuPanel": {
            "fields": {},
            "functions": {},
            "parents": [
                "sc.MenuPanel"
            ]
        },
        "sc.MenuScanLines": {
            "fields": {},
            "functions": {
                "init": {
                    "returnType": "MenuScanLines",
                    "args": []
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc.ScrollPane.Container": {
            "fields": {
                "scrollIndex": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "getContentWidth": {
                    "returnType": "number",
                    "args": []
                },
                "getContentHeight": {
                    "returnType": "number",
                    "args": []
                },
                "init": {
                    "returnType": "Container",
                    "args": []
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc.ScrollPane": {
            "fields": {
                "box": {
                    "type": "sc.ScrollPane.Container",
                    "isOptional": false
                },
                "scrollType": {
                    "type": "sc.ScrollType",
                    "isOptional": false
                },
                "scrollbarV": {
                    "type": "sc.Slider",
                    "isOptional": true
                },
                "scrollbarH": {
                    "type": "sc.Slider",
                    "isOptional": true
                },
                "showTopBar": {
                    "type": "boolean",
                    "isOptional": false
                },
                "showBottomBar": {
                    "type": "boolean",
                    "isOptional": false
                },
                "Container": {
                    "type": "sc.ScrollPane.ContainerConstructor",
                    "isOptional": false
                }
            },
            "functions": {
                "setContent": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "content",
                            "type": "ig.GuiElementBase",
                            "isOptional": false
                        }
                    ]
                },
                "scrollY": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "amount",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "skipTransition",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "time",
                            "type": "number",
                            "isOptional": true
                        },
                        {
                            "name": "timeFunction",
                            "type": "KeySpline",
                            "isOptional": true
                        }
                    ]
                },
                "setScrollY": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "value",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "skipTransition",
                            "type": "Nullable<boolean>",
                            "isOptional": true
                        },
                        {
                            "name": "time",
                            "type": "Nullable<number>",
                            "isOptional": true
                        },
                        {
                            "name": "timeFunction",
                            "type": "Nullable<KeySpline>",
                            "isOptional": true
                        }
                    ]
                },
                "recalculateScrollBars": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "skipTransition",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "getScrollY": {
                    "returnType": "number",
                    "args": []
                },
                "init": {
                    "returnType": "sc.ScrollPane",
                    "args": [
                        {
                            "name": "scrollType",
                            "type": "sc.ScrollType",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc.Slider.Thumb": {
            "fields": {},
            "functions": {
                "updateDrawables": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "renderer",
                            "type": "ig.GuiRenderer",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc.Slider": {
            "fields": {
                "offset": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "inset": {
                    "type": "{ top: number; right: number; bottom: number; left: number }",
                    "isOptional": false
                },
                "minValue": {
                    "type": "number",
                    "isOptional": false
                },
                "maxValue": {
                    "type": "number",
                    "isOptional": false
                },
                "value": {
                    "type": "number",
                    "isOptional": false
                },
                "vertical": {
                    "type": "boolean",
                    "isOptional": false
                },
                "scaleThumb": {
                    "type": "boolean",
                    "isOptional": false
                },
                "prefWidth": {
                    "type": "number",
                    "isOptional": false
                },
                "prefHeight": {
                    "type": "number",
                    "isOptional": false
                },
                "thumb": {
                    "type": "sc.Slider.Thumb",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "sc.Slider",
                    "args": [
                        {
                            "name": "vertical",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "thumb",
                            "type": "sc.Slider.Thumb",
                            "isOptional": true
                        },
                        {
                            "name": "scaleThumb",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc.Slider.inset": {
            "fields": {
                "top": {
                    "type": "number",
                    "isOptional": false
                },
                "right": {
                    "type": "number",
                    "isOptional": false
                },
                "bottom": {
                    "type": "number",
                    "isOptional": false
                },
                "left": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.TimeAndMoneyGUI": {
            "fields": {
                "gfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "timeGfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "credit": {
                    "type": "sc.NumberGui",
                    "isOptional": false
                },
                "timeSec": {
                    "type": "sc.NumberGui",
                    "isOptional": false
                },
                "timeMin": {
                    "type": "sc.NumberGui",
                    "isOptional": false
                },
                "timeHour": {
                    "type": "sc.NumberGui",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "TimeAndMoneyGUI",
                    "args": []
                }
            },
            "parents": [
                "sc.MenuPanel"
            ]
        },
        "sc.DummyContainer": {
            "fields": {},
            "functions": {
                "init": {
                    "returnType": "DummyContainer",
                    "args": [
                        {
                            "name": "child",
                            "type": "ig.GuiElementBase",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        }
    },
    "game.feature.menu.gui.museum.museum-menu": {},
    "game.feature.menu.gui.new-game.new-game-dialogs": {
        "sc.NewGameModeSelectDialog": {
            "fields": {
                "gfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "msgBox": {
                    "type": "sc.CenterBoxGui",
                    "isOptional": false
                },
                "normal": {
                    "type": "sc.NewGameModeDialogButton",
                    "isOptional": false
                },
                "plus": {
                    "type": "sc.NewGameModeDialogButton",
                    "isOptional": false
                },
                "header": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "content": {
                    "type": "ig.GuiElementBase",
                    "isOptional": false
                },
                "info": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "buttons": {
                    "type": "[]",
                    "isOptional": false
                },
                "buttonInteract": {
                    "type": "ig.ButtonInteractEntry",
                    "isOptional": false
                },
                "buttongroup": {
                    "type": "sc.ButtonGroup",
                    "isOptional": false
                },
                "callback": {
                    "type": "(button: sc.ButtonGui, dialog: sc.NewGameModeSelectDialog) => void",
                    "isOptional": false
                }
            },
            "functions": {
                "show": {
                    "returnType": "void",
                    "args": []
                },
                "hide": {
                    "returnType": "void",
                    "args": []
                },
                "onBackButtonCheck": {
                    "returnType": "boolean",
                    "args": []
                },
                "init": {
                    "returnType": "NewGameModeSelectDialog",
                    "args": [
                        {
                            "name": "callback",
                            "type": "sc.NewGameModeSelectDialog['callback']",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc": {
            "fields": {
                "NewGameModeSelectDialog": {
                    "type": "NewGameModeSelectDialogConstructor"
                },
                "NewGameModeDialogButton": {
                    "type": "NewGameModeDialogButtonConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.NewGameModeDialogButton": {
            "fields": {
                "framePatch": {
                    "type": "ig.NinePatch",
                    "isOptional": false
                },
                "gfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "frame": {
                    "type": "ig.BoxGui",
                    "isOptional": false
                },
                "image": {
                    "type": "ig.ImageGui",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "NewGameModeDialogButton",
                    "args": [
                        {
                            "name": "text",
                            "type": "sc.TextLike",
                            "isOptional": false
                        },
                        {
                            "name": "data",
                            "type": "sc.ButtonGui['data']",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": [
                "sc.ButtonGui"
            ]
        }
    },
    "game.feature.menu.gui.new-game.new-game-list": {},
    "game.feature.menu.gui.new-game.new-game-menu": {
        "sc.NewGamePlusMenu": {
            "fields": {
                "points": {
                    "type": "sc.NewGameCart",
                    "isOptional": false
                },
                "button": {
                    "type": "sc.ButtonGui",
                    "isOptional": false
                }
            },
            "functions": {
                "onPostDirectEnter": {
                    "returnType": "void",
                    "args": []
                },
                "onHotkeyBeginCheck": {
                    "returnType": "boolean",
                    "args": []
                },
                "onBeginButtonPressed": {
                    "returnType": "void",
                    "args": []
                },
                "createHelpGui": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "NewGamePlusMenu",
                    "args": []
                }
            },
            "parents": [
                "sc.ListInfoMenu"
            ]
        },
        "sc": {
            "fields": {
                "NewGamePlusMenu": {
                    "type": "NewGamePlusMenuConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.menu.gui.new-game.new-game-misc": {
        "sc.NewGameCart": {
            "fields": {
                "points": {
                    "type": "sc.NewGameCartEntry",
                    "isOptional": false
                },
                "cost": {
                    "type": "sc.NewGameCartEntry",
                    "isOptional": false
                },
                "rest": {
                    "type": "sc.NewGameCartEntry",
                    "isOptional": false
                },
                "enabled": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "resetNumbers": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "skipTransition",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "updateCost": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "skipTransition",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "init": {
                    "returnType": "NewGameCart",
                    "args": []
                }
            },
            "parents": [
                "sc.MenuPanel"
            ]
        },
        "sc": {
            "fields": {
                "NewGameCart": {
                    "type": "NewGameCartConstructor"
                },
                "NewGameCartEntry": {
                    "type": "NewGameCartEntryConstructor"
                },
                "NewGameToggleSet": {
                    "type": "NewGameToggleSetConstructor"
                },
                "NewGameOptionButton": {
                    "type": "NewGameOptionButtonConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.NewGameCartEntry": {
            "fields": {
                "gfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "text": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "number": {
                    "type": "sc.NumberGui",
                    "isOptional": false
                },
                "hideSymbol": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "setNumber": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "max",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "skipTransition",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "init": {
                    "returnType": "NewGameCartEntry",
                    "args": [
                        {
                            "name": "text",
                            "type": "sc.TextLike",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc.NewGameToggleSet": {
            "fields": {
                "header": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "background": {
                    "type": "ig.ColorGui",
                    "isOptional": false
                },
                "buttons": {
                    "type": "sc.NewGameOptionButton[]",
                    "isOptional": false
                },
                "set": {
                    "type": "sc.NewGameSet",
                    "isOptional": false
                },
                "listIndex": {
                    "type": "number",
                    "isOptional": false
                },
                "counter": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "updateTogglesStates": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "pressed",
                            "type": "sc.NewGameOptionButton",
                            "isOptional": false
                        }
                    ]
                },
                "updateActiveState": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "trophies",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "totalCost",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "trophies1",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "getSingleCost": {
                    "returnType": "number",
                    "args": []
                },
                "hasRequired": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "key",
                            "type": "sc.NEW_GAME_OPTIONS.Keys",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "NewGameToggleSet",
                    "args": [
                        {
                            "name": "set",
                            "type": "sc.NEW_GAME_SETS.Keys",
                            "isOptional": false
                        },
                        {
                            "name": "list",
                            "type": "sc.MultiColumnItemListBox",
                            "isOptional": false
                        },
                        {
                            "name": "yOffset",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "listIndex",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "counter",
                            "type": "{ counter: number }",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc.NewGameOptionButton": {
            "fields": {
                "data": {
                    "type": "{ id: string; description: string }",
                    "isOptional": false
                },
                "set": {
                    "type": "sc.NewGameSet",
                    "isOptional": false
                }
            },
            "functions": {
                "updateToggleState": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "NewGameOptionButton",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "amount",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "id",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "description",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "setKey",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "setOptions",
                            "type": "sc.NewGameSet",
                            "isOptional": false
                        },
                        {
                            "name": "setGui",
                            "type": "sc.NewGameToggleSet",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "sc.ListBoxButton"
            ]
        },
        "sc.NewGameOptionButton.data": {
            "fields": {
                "id": {
                    "type": "string",
                    "isOptional": false
                },
                "description": {
                    "type": "string",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.menu.gui.options.options-list": {
        "sc": {
            "fields": {
                "keyBinderGui": {
                    "type": "Nullable<sc.KeyBinderGui>"
                },
                "OptionsTabBox": {
                    "type": "OptionsTabBoxConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.OptionsTabBox.Tabs": {
            "fields": {
                "general": {
                    "type": "sc.ItemTabbedBox.TabButton",
                    "isOptional": false
                },
                "interface": {
                    "type": "sc.ItemTabbedBox.TabButton",
                    "isOptional": false
                },
                "video": {
                    "type": "sc.ItemTabbedBox.TabButton",
                    "isOptional": false
                },
                "audio": {
                    "type": "sc.ItemTabbedBox.TabButton",
                    "isOptional": false
                },
                "controls": {
                    "type": "sc.ItemTabbedBox.TabButton",
                    "isOptional": false
                },
                "assists": {
                    "type": "sc.ItemTabbedBox.TabButton",
                    "isOptional": false
                },
                "arena": {
                    "type": "sc.ItemTabbedBox.TabButton",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.OptionsTabBox.ButtonData": {
            "fields": {
                "type": {
                    "type": "sc.OPTION_CATEGORY",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.OptionsTabBox.TabButton": {
            "fields": {
                "data": {
                    "type": "ButtonData",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": [
                "sc.ItemTabbedBox"
            ]
        },
        "sc.OptionsTabBox": {
            "fields": {
                "prevIndex": {
                    "type": "number",
                    "isOptional": false
                },
                "tabs": {
                    "type": "OptionsTabBox.Tabs",
                    "isOptional": false
                },
                "tabArray": {
                    "type": "sc.OptionsTabBox.TabButton[]",
                    "isOptional": false
                },
                "tabGroup": {
                    "type": "sc.ButtonGroup",
                    "isOptional": false
                },
                "rows": {
                    "type": "Nullable<sc.OptionsTabBox['rows']>",
                    "isOptional": false
                },
                "rowButtonGroup": {
                    "type": "sc.RowButtonGroup",
                    "isOptional": false
                },
                "tabContent": {
                    "type": "{\n        buttonGroup: Nullable<sc.OptionsTabBox['rowButtonGroup']>;\n        list: Nullable<sc.OptionsTabBox['list']>;\n        rows: Nullable<sc.OptionsTabBox['rows']>;\n      }[]",
                    "isOptional": false
                },
                "buttonGroup": {
                    "type": "Nullable<sc.OptionsTabBox['rowButtonGroup']>",
                    "isOptional": false
                },
                "list": {
                    "type": "sc.ButtonListBox",
                    "isOptional": false
                },
                "prevPressed": {
                    "type": "sc.OptionsTabBox.TabButton",
                    "isOptional": false
                },
                "menuScanLines": {
                    "type": "sc.MenuScanLines",
                    "isOptional": false
                }
            },
            "functions": {
                "showMenu": {
                    "returnType": "void",
                    "args": []
                },
                "_createOptionList": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "tabIndex",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "_rearrangeTabs": {
                    "returnType": "void",
                    "args": []
                },
                "_createTabButton": {
                    "returnType": "sc.OptionsTabBox.TabButton",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "type",
                            "type": "sc.OPTION_CATEGORY",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "OptionsTabBox",
                    "args": [
                        {
                            "name": "isLocal",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        }
    },
    "game.feature.menu.gui.options.options-menu": {
        "sc.OptionsMenu": {
            "fields": {
                "hotkeyHelp": {
                    "type": "sc.ButtonGui",
                    "isOptional": false
                },
                "hotkeyDefault": {
                    "type": "sc.ButtonGui",
                    "isOptional": false
                },
                "listBox": {
                    "type": "sc.OptionsTabBox",
                    "isOptional": false
                },
                "helpGui": {
                    "type": "sc.HelpScreen",
                    "isOptional": false
                },
                "blackBox": {
                    "type": "ig.ColorGui",
                    "isOptional": false
                },
                "langGui": {
                    "type": "sc.OptionLangPopUp",
                    "isOptional": false
                }
            },
            "functions": {
                "addObservers": {
                    "returnType": "void",
                    "args": []
                },
                "removeObservers": {
                    "returnType": "void",
                    "args": []
                },
                "showMenu": {
                    "returnType": "void",
                    "args": []
                },
                "hideMenu": {
                    "returnType": "void",
                    "args": []
                },
                "exitMenu": {
                    "returnType": "void",
                    "args": []
                },
                "onHotkeyDefaultCheck": {
                    "returnType": "boolean",
                    "args": []
                },
                "onDefaultButtonPressed": {
                    "returnType": "void",
                    "args": []
                },
                "onHotkeyHelpCheck": {
                    "returnType": "boolean",
                    "args": []
                },
                "onHelpButtonPressed": {
                    "returnType": "void",
                    "args": []
                },
                "createHelpGui": {
                    "returnType": "void",
                    "args": []
                },
                "onAddHotkeys": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "longTransition",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "commitHotKeysToTopBar": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "longTransition",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "onBackButtonPress": {
                    "returnType": "void",
                    "args": []
                },
                "onLangPopUpClose": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "OptionsMenu",
                    "args": []
                }
            },
            "parents": [
                "sc.BaseMenu",
                "sc.Model.Observer"
            ]
        },
        "sc": {
            "fields": {
                "OptionsMenu": {
                    "type": "OptionsMenuConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.menu.gui.options.options-misc": {
        "sc.KeyBinderGui": {
            "fields": {
                "box": {
                    "type": "sc.BlackWhiteBox",
                    "isOptional": false
                },
                "button": {
                    "type": "sc.ButtonGui",
                    "isOptional": false
                },
                "back": {
                    "type": "sc.ButtonGui",
                    "isOptional": false
                }
            },
            "functions": {
                "show": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "finishCallback",
                            "type": "(keyCode: number | null, isAlternative: boolean, unbind: boolean) => void",
                            "isOptional": false
                        },
                        {
                            "name": "forAction",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "isAlternative",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "KeyBinderGui",
                    "args": []
                }
            },
            "parents": [
                "ig.ColorGui"
            ]
        },
        "sc": {
            "fields": {
                "KeyBinderGui": {
                    "type": "KeyBinderGuiConstructor"
                },
                "OptionSlider": {
                    "type": "OptionSliderConstructor"
                },
                "OptionThumb": {
                    "type": "OptionThumbConstructor"
                },
                "OptionFocusSlider": {
                    "type": "OptionFocusSliderConstructor"
                },
                "OptionLangPopUp": {
                    "type": "OptionLangPopUpConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.OptionSlider": {
            "fields": {
                "fill": {
                    "type": "boolean",
                    "isOptional": false
                },
                "focus": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "OptionSlider",
                    "args": [
                        {
                            "name": "a_",
                            "type": "unknown",
                            "isOptional": false
                        },
                        {
                            "name": "b_",
                            "type": "unknown",
                            "isOptional": false
                        },
                        {
                            "name": "c_",
                            "type": "unknown",
                            "isOptional": false
                        },
                        {
                            "name": "d_",
                            "type": "unknown",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "sc.Slider"
            ]
        },
        "sc.OptionThumb": {
            "fields": {
                "thumbNinePatch": {
                    "type": "ig.NinePatch",
                    "isOptional": false
                },
                "currentOffset": {
                    "type": "string",
                    "isOptional": false
                },
                "slider": {
                    "type": "sc.OptionFocusSlider",
                    "isOptional": false
                },
                "drag": {
                    "type": "boolean",
                    "isOptional": false
                },
                "wasDragged": {
                    "type": "boolean",
                    "isOptional": false
                },
                "starValue": {
                    "type": "number",
                    "isOptional": false
                },
                "_startPos": {
                    "type": "Vec2",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "OptionThumb",
                    "args": [
                        {
                            "name": "slider",
                            "type": "sc.OptionFocusSlider",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc.OptionFocusSlider": {
            "fields": {
                "slider": {
                    "type": "sc.OptionSlider",
                    "isOptional": false
                },
                "thumb": {
                    "type": "sc.OptionThumb",
                    "isOptional": false
                },
                "snap": {
                    "type": "boolean",
                    "isOptional": false
                },
                "clickSound": {
                    "type": "ig.Sound",
                    "isOptional": false
                },
                "_hasKeyboardFocus": {
                    "type": "boolean",
                    "isOptional": false
                },
                "changeCallback": {
                    "type": "(value: number) => void",
                    "isOptional": false
                },
                "_buttonGroup": {
                    "type": "Nullable<ig.ButtonGroup>",
                    "isOptional": false
                },
                "data": {
                    "type": "string",
                    "isOptional": true
                }
            },
            "functions": {
                "setPreferredThumbSize": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "width",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "height",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "setSize": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "sliderHeight",
                            "type": "number",
                            "isOptional": true
                        }
                    ]
                },
                "setValue": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "value",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "getValue": {
                    "returnType": "number",
                    "args": []
                },
                "setMinMaxValue": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "min",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "max",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "OptionFocusSlider",
                    "args": [
                        {
                            "name": "changeCallback",
                            "type": "(value: number) => void",
                            "isOptional": false
                        },
                        {
                            "name": "snap",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "fill",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "buttonGroup",
                            "type": "ig.ButtonGroup",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": [
                "ig.FocusGui"
            ]
        },
        "sc.OptionLangPopUp": {
            "fields": {
                "buttongroup": {
                    "type": "sc.ButtonGroup",
                    "isOptional": false
                },
                "buttons": {
                    "type": "Record<sc.LANGUAGE, sc.ButtonGui>",
                    "isOptional": false
                },
                "active": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "createButtons": {
                    "returnType": "void",
                    "args": []
                },
                "show": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "anchor",
                            "type": "sc.OPTION_GUIS_DEFS.LANGUAGE",
                            "isOptional": false
                        },
                        {
                            "name": "callback",
                            "type": "() => void",
                            "isOptional": true
                        }
                    ]
                },
                "init": {
                    "returnType": "OptionLangPopUp",
                    "args": []
                }
            },
            "parents": [
                "ig.BoxGui"
            ]
        }
    },
    "game.feature.menu.gui.options.options-types": {
        "sc.OPTION_GUIS_DEFS.BUTTON_GROUP": {
            "fields": {
                "base": {
                    "type": "sc.OptionRow",
                    "isOptional": false
                },
                "buttons": {
                    "type": "sc.ButtonGui[]",
                    "isOptional": false
                },
                "_prevPressed": {
                    "type": "sc.ButtonGui",
                    "isOptional": false
                },
                "_rowGroup": {
                    "type": "sc.RowButtonGroup",
                    "isOptional": false
                },
                "data": {
                    "type": "{ id: number }",
                    "isOptional": false
                }
            },
            "functions": {
                "resetButtons": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "except",
                            "type": "sc.ButtonGui",
                            "isOptional": false
                        }
                    ]
                },
                "onAttach": {
                    "returnType": "void",
                    "args": []
                },
                "onDetach": {
                    "returnType": "void",
                    "args": []
                },
                "onPressed": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "button",
                            "type": "sc.ButtonGui & { data: { id: number } }",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "BUTTON_GROUP",
                    "args": [
                        {
                            "name": "optionRow",
                            "type": "sc.OptionRow",
                            "isOptional": false
                        },
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "rowGroup",
                            "type": "sc.RowButtonGroup",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase",
                "sc.Model.Observer"
            ]
        },
        "sc.OPTION_GUIS_DEFS.BUTTON_GROUP.data": {
            "fields": {
                "id": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.OPTION_GUIS_DEFS.ARRAY_SLIDER": {
            "fields": {
                "slider": {
                    "type": "sc.OptionFocusSlider",
                    "isOptional": false
                },
                "base": {
                    "type": "sc.OptionRow",
                    "isOptional": false
                },
                "_lastVal": {
                    "type": "number",
                    "isOptional": false
                },
                "scale": {
                    "type": "number",
                    "isOptional": false
                },
                "stepSize": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "onLeftRight": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "direction",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "ARRAY_SLIDER",
                    "args": [
                        {
                            "name": "optionRow",
                            "type": "sc.OptionRow",
                            "isOptional": false
                        },
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "rowGroup",
                            "type": "sc.RowButtonGroup",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc.OPTION_GUIS_DEFS.OBJECT_SLIDER": {
            "fields": {
                "slider": {
                    "type": "sc.OptionFocusSlider",
                    "isOptional": false
                },
                "base": {
                    "type": "sc.OptionRow",
                    "isOptional": false
                },
                "entries": {
                    "type": "number[]",
                    "isOptional": false
                },
                "currentNumber": {
                    "type": "sc.TextGui | sc.NumberGui",
                    "isOptional": false
                },
                "_lastVal": {
                    "type": "number",
                    "isOptional": false
                },
                "showPercentage": {
                    "type": "boolean",
                    "isOptional": true
                }
            },
            "functions": {
                "updateNumberDisplay": {
                    "returnType": "void",
                    "args": []
                },
                "onAttach": {
                    "returnType": "void",
                    "args": []
                },
                "onDetach": {
                    "returnType": "void",
                    "args": []
                },
                "onChange": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "value",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "onLeftRight": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "direction",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "OBJECT_SLIDER",
                    "args": [
                        {
                            "name": "optionRow",
                            "type": "sc.OptionRow",
                            "isOptional": false
                        },
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "rowGroup",
                            "type": "sc.RowButtonGroup",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase",
                "sc.Model.Observer"
            ]
        },
        "sc.OPTION_GUIS_DEFS.CHECKBOX": {
            "fields": {
                "base": {
                    "type": "sc.OptionRow",
                    "isOptional": false
                },
                "button": {
                    "type": "sc.CheckboxGui",
                    "isOptional": false
                }
            },
            "functions": {
                "onPressed": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "checkbox",
                            "type": "sc.CheckboxGui",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "CHECKBOX",
                    "args": [
                        {
                            "name": "optionRow",
                            "type": "sc.OptionRow",
                            "isOptional": false
                        },
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "rowGroup",
                            "type": "sc.RowButtonGroup",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc.OPTION_GUIS_DEFS.CONTROLS": {
            "fields": {
                "keyButton": {
                    "type": "sc.ButtonGui",
                    "isOptional": false
                },
                "altButton": {
                    "type": "sc.ButtonGui",
                    "isOptional": false
                },
                "base": {
                    "type": "sc.OptionRow",
                    "isOptional": false
                },
                "controlKey": {
                    "type": "string",
                    "isOptional": false
                }
            },
            "functions": {
                "onPressed": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "button",
                            "type": "sc.ButtonGui",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "CONTROLS",
                    "args": [
                        {
                            "name": "optionRow",
                            "type": "sc.OptionRow",
                            "isOptional": false
                        },
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "rowGroup",
                            "type": "sc.RowButtonGroup",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase",
                "sc.Model.Observer"
            ]
        },
        "sc.OPTION_GUIS_DEFS.LANGUAGE": {
            "fields": {
                "button": {
                    "type": "sc.ButtonGui",
                    "isOptional": false
                },
                "base": {
                    "type": "sc.OptionRow",
                    "isOptional": false
                }
            },
            "functions": {
                "onLanguageSelected": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "focusLost",
                            "type": "boolean",
                            "isOptional": false
                        },
                        {
                            "name": "lang",
                            "type": "sc.LANGUAGE",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "LANGUAGE",
                    "args": [
                        {
                            "name": "optionRow",
                            "type": "sc.OptionRow",
                            "isOptional": false
                        },
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "rowGroup",
                            "type": "sc.RowButtonGroup",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc": {
            "fields": {
                "OPTION_GUIS": {
                    "type": "{\n      [sc.OPTION_TYPES.BUTTON_GROUP]: sc.OPTION_GUIS_DEFS.BUTTON_GROUP_CONSTRUCTOR;\n      [sc.OPTION_TYPES.ARRAY_SLIDER]: sc.OPTION_GUIS_DEFS.ARRAY_SLIDER_CONSTRUCTOR;\n      [sc.OPTION_TYPES.OBJECT_SLIDER]: sc.OPTION_GUIS_DEFS.OBJECT_SLIDER_CONSTRUCTOR;\n      [sc.OPTION_TYPES.CHECKBOX]: sc.OPTION_GUIS_DEFS.CHECKBOX_CONSTRUCTOR;\n      [sc.OPTION_TYPES.CONTROLS]: sc.OPTION_GUIS_DEFS.CONTROLS_CONSTRUCTOR;\n      [sc.OPTION_TYPES.LANGUAGE]: sc.OPTION_GUIS_DEFS.LANGUAGE_CONSTRUCTOR;\n    }"
                },
                "[sc.OPTION_TYPES.BUTTON_GROUP]": {
                    "type": "sc.OPTION_GUIS_DEFS.BUTTON_GROUP_CONSTRUCTOR",
                    "isOptional": false
                },
                "[sc.OPTION_TYPES.ARRAY_SLIDER]": {
                    "type": "sc.OPTION_GUIS_DEFS.ARRAY_SLIDER_CONSTRUCTOR",
                    "isOptional": false
                },
                "[sc.OPTION_TYPES.OBJECT_SLIDER]": {
                    "type": "sc.OPTION_GUIS_DEFS.OBJECT_SLIDER_CONSTRUCTOR",
                    "isOptional": false
                },
                "[sc.OPTION_TYPES.CHECKBOX]": {
                    "type": "sc.OPTION_GUIS_DEFS.CHECKBOX_CONSTRUCTOR",
                    "isOptional": false
                },
                "[sc.OPTION_TYPES.CONTROLS]": {
                    "type": "sc.OPTION_GUIS_DEFS.CONTROLS_CONSTRUCTOR",
                    "isOptional": false
                },
                "[sc.OPTION_TYPES.LANGUAGE]": {
                    "type": "sc.OPTION_GUIS_DEFS.LANGUAGE_CONSTRUCTOR",
                    "isOptional": false
                },
                "OptionInfoBox": {
                    "type": "OptionInfoBoxConstructor"
                },
                "OptionRow": {
                    "type": "OptionRowConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.OptionInfoBox": {
            "fields": {
                "text": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "box": {
                    "type": "sc.CenterBoxGui",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "OptionInfoBox",
                    "args": [
                        {
                            "name": "option",
                            "type": "sc.OptionDefinition.INFO",
                            "isOptional": false
                        },
                        {
                            "name": "width",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc.OptionRow": {
            "fields": {
                "gfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "row": {
                    "type": "number",
                    "isOptional": false
                },
                "optionName": {
                    "type": "string",
                    "isOptional": false
                },
                "option": {
                    "type": "sc.OptionDefinition",
                    "isOptional": false
                },
                "optionDes": {
                    "type": "string",
                    "isOptional": false
                },
                "local": {
                    "type": "boolean",
                    "isOptional": false
                },
                "divider": {
                    "type": "boolean",
                    "isOptional": false
                },
                "nameGui": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "typeGui": {
                    "type": "| sc.OPTION_GUIS_DEFS.BUTTON_GROUP\n        | sc.OPTION_GUIS_DEFS.ARRAY_SLIDER\n        | sc.OPTION_GUIS_DEFS.OBJECT_SLIDER\n        | sc.OPTION_GUIS_DEFS.CHECKBOX\n        | sc.OPTION_GUIS_DEFS.CONTROLS\n        | sc.OPTION_GUIS_DEFS.LANGUAGE",
                    "isOptional": false
                },
                "_hasEntered": {
                    "type": "boolean",
                    "isOptional": false
                },
                "_rowGroup": {
                    "type": "sc.RowButtonGroup",
                    "isOptional": false
                }
            },
            "functions": {
                "onPressed": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "pressedGui",
                            "type": "ig.FocusGui",
                            "isOptional": false
                        }
                    ]
                },
                "onLeftRight": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "isRight",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "OptionRow",
                    "args": [
                        {
                            "name": "option",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "row",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "rowGroup",
                            "type": "sc.RowButtonGroup",
                            "isOptional": false
                        },
                        {
                            "name": "local",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "width",
                            "type": "number",
                            "isOptional": true
                        },
                        {
                            "name": "height",
                            "type": "number",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        }
    },
    "game.feature.menu.gui.quest-hub.quest-hub-list": {
        "sc.QuestHubList": {
            "fields": {},
            "functions": {},
            "parents": [
                "sc.ListTabbedPane"
            ]
        },
        "sc": {
            "fields": {
                "QuestHubList": {
                    "type": "QuestHubListConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.menu.gui.quest-hub.quest-hub-menu": {},
    "game.feature.menu.gui.quests.quest-details": {
        "sc.QuestDetailTasks": {
            "fields": {
                "ninepatch": {
                    "type": "ig.NinePatch",
                    "isOptional": false
                },
                "container": {
                    "type": "sc.ScrollPane",
                    "isOptional": false
                },
                "content": {
                    "type": "ig.GuiElementBase",
                    "isOptional": false
                }
            },
            "functions": {
                "scroll": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "skip",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "show": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "quest",
                            "type": "sc.Quest",
                            "isOptional": false
                        },
                        {
                            "name": "dontSkip",
                            "type": "Nullable<boolean>",
                            "isOptional": true
                        },
                        {
                            "name": "skipIfChildren",
                            "type": "Nullable<boolean>",
                            "isOptional": true
                        }
                    ]
                },
                "hide": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "QuestDetailTasks",
                    "args": []
                }
            },
            "parents": [
                "ig.BoxGui"
            ]
        },
        "sc": {
            "fields": {
                "QuestDetailTasks": {
                    "type": "QuestDetailTasksConstructor"
                },
                "QuestDetailsSolved": {
                    "type": "QuestDetailsSolvedConstructor"
                },
                "QuestCharacterView": {
                    "type": "QuestCharacterViewConstructor"
                },
                "QuestDetailsView": {
                    "type": "QuestDetailsViewConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.QuestDetailsSolved": {
            "fields": {
                "endDescription": {
                    "type": "sc.TextGui",
                    "isOptional": false
                }
            },
            "functions": {
                "show": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "quest",
                            "type": "sc.Quest",
                            "isOptional": false
                        }
                    ]
                },
                "hide": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "QuestDetailsSolved",
                    "args": []
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc.QuestCharacterView": {
            "fields": {},
            "functions": {},
            "parents": [
                "ig.BoxGui"
            ]
        },
        "sc.QuestDetailsView": {
            "fields": {
                "gfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "titleGui": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "descriptionGui": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "locationArea": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "locationMap": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "personTextGui": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "personCharGui": {
                    "type": "sc.QuestCharacterView",
                    "isOptional": false
                },
                "expGui": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "moneyGui": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "cpGui": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "itemsGui": {
                    "type": "ig.GuiElementBase",
                    "isOptional": false
                },
                "atCurLevelGui": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "activeView": {
                    "type": "sc.QuestDetailTasks",
                    "isOptional": false
                },
                "solvedView": {
                    "type": "sc.QuestDetailsSolved",
                    "isOptional": false
                },
                "buttongroup": {
                    "type": "sc.ButtonGroup",
                    "isOptional": false
                },
                "taskButton": {
                    "type": "Nullable<sc.ButtonGui>",
                    "isOptional": false
                },
                "taskSwitch": {
                    "type": "boolean",
                    "isOptional": false
                },
                "lines": {
                    "type": "ig.ColorGui[]",
                    "isOptional": false
                },
                "currentQuest": {
                    "type": "sc.Quest",
                    "isOptional": false
                },
                "submitSound": {
                    "type": "ig.Sound",
                    "isOptional": false
                }
            },
            "functions": {
                "checkTaskSwitch": {
                    "returnType": "void",
                    "args": []
                },
                "addObservers": {
                    "returnType": "void",
                    "args": []
                },
                "removeObservers": {
                    "returnType": "void",
                    "args": []
                },
                "show": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "quest",
                            "type": "sc.Quest",
                            "isOptional": false
                        }
                    ]
                },
                "hide": {
                    "returnType": "void",
                    "args": []
                },
                "_setQuest": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "quest",
                            "type": "sc.Quest",
                            "isOptional": false
                        }
                    ]
                },
                "doButtonTraversal": {
                    "returnType": "void",
                    "args": []
                },
                "onBackButtonPress": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "QuestDetailsView",
                    "args": [
                        {
                            "name": "taskButton",
                            "type": "sc.ButtonGui",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "sc.QuestBaseBox",
                "sc.Model.Observer"
            ]
        }
    },
    "game.feature.menu.gui.quests.quest-entries": {
        "sc.SubTaskEntryBase": {
            "fields": {
                "textGui": {
                    "type": "sc.TextGui",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "SubTaskEntryBase",
                    "args": [
                        {
                            "name": "quest",
                            "type": "sc.Quest",
                            "isOptional": false
                        },
                        {
                            "name": "taskIndex",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "subTaskIndex",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "subTask",
                            "type": "sc.QuestSubTaskBase",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": [
                "ig.BoxGui"
            ]
        },
        "sc": {
            "fields": {
                "SubTaskEntryBase": {
                    "type": "SubTaskEntryBaseConstructor"
                },
                "TaskEntry": {
                    "type": "TaskEntryConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.TaskEntry": {
            "fields": {
                "taskIndex": {
                    "type": "number | undefined",
                    "isOptional": false
                },
                "quest": {
                    "type": "Nullable<sc.Quest>",
                    "isOptional": false
                },
                "taskText": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "taskDoneIcon": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "_subtasks": {
                    "type": "sc.SubTaskEntryBase[]",
                    "isOptional": false
                }
            },
            "functions": {
                "setTask": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "taskIndex",
                            "type": "number",
                            "isOptional": true
                        },
                        {
                            "name": "quest",
                            "type": "Nullable<sc.Quest>",
                            "isOptional": true
                        },
                        {
                            "name": "hide",
                            "type": "Nullable<boolean>",
                            "isOptional": true
                        },
                        {
                            "name": "large",
                            "type": "Nullable<boolean>",
                            "isOptional": true
                        },
                        {
                            "name": "minimize",
                            "type": "Nullable<boolean>",
                            "isOptional": true
                        }
                    ]
                },
                "show": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "delay",
                            "type": "Nullable<boolean>",
                            "isOptional": true
                        },
                        {
                            "name": "initDelay",
                            "type": "Nullable<number>",
                            "isOptional": true
                        }
                    ]
                },
                "_addSubTaskTask": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "subtask",
                            "type": "sc.SubTaskEntryBase",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        }
    },
    "game.feature.menu.gui.quests.quest-menu": {},
    "game.feature.menu.gui.quests.quest-misc": {
        "sc.SolvedLine": {
            "fields": {
                "ninepatch": {
                    "type": "ig.NinePatch",
                    "isOptional": false
                },
                "textGui": {
                    "type": "sc.TextGui",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "SolvedLine",
                    "args": []
                }
            },
            "parents": [
                "ig.SimpleGui"
            ]
        },
        "sc": {
            "fields": {
                "SolvedLine": {
                    "type": "SolvedLineConstructor"
                },
                "QuestBaseBox": {
                    "type": "QuestBaseBoxConstructor"
                },
                "QuestInfoBoxActive": {
                    "type": "QuestInfoBoxActiveConstructor"
                },
                "QuestInfoBoxSolved": {
                    "type": "QuestInfoBoxSolvedConstructor"
                },
                "QuestInfoBox": {
                    "type": "QuestInfoBoxConstructor"
                },
                "QuestDialog": {
                    "type": "QuestDialogConstructor"
                },
                "QuestDialogWrapper": {
                    "type": "QuestDialogWrapperConstructor"
                },
                "QuestStartDialogButtonBox": {
                    "type": "QuestStartDialogButtonBoxConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.QuestBaseBox": {
            "fields": {
                "ninepatch": {
                    "type": "ig.NinePatch",
                    "isOptional": false
                },
                "levelGui": {
                    "type": "sc.NumberGui",
                    "isOptional": false
                },
                "elite": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "setLevel": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "level",
                            "type": "Nullable<number>",
                            "isOptional": true
                        }
                    ]
                },
                "setElite": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "isElite",
                            "type": "boolean",
                            "isOptional": false
                        },
                        {
                            "name": "isSolved",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "QuestBaseBox",
                    "args": [
                        {
                            "name": "width",
                            "type": "Nullable<number>",
                            "isOptional": true
                        },
                        {
                            "name": "height",
                            "type": "Nullable<number>",
                            "isOptional": true
                        },
                        {
                            "name": "level",
                            "type": "Nullable<number>",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": [
                "ig.BoxGui"
            ]
        },
        "sc.QuestInfoBoxActive": {
            "fields": {
                "gfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "lineGui": {
                    "type": "ig.ColorGui",
                    "isOptional": false
                },
                "taskContainer": {
                    "type": "ig.GuiElementBase",
                    "isOptional": false
                }
            },
            "functions": {
                "setTasks": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "quest",
                            "type": "sc.Quest",
                            "isOptional": false
                        },
                        {
                            "name": "currentTask",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "_addTask": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "quest",
                            "type": "sc.Quest",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "QuestInfoBoxActive",
                    "args": []
                }
            },
            "parents": [
                "ig.SimpleGui"
            ]
        },
        "sc.QuestInfoBoxSolved": {
            "fields": {
                "solvedGui": {
                    "type": "sc.SolvedLine",
                    "isOptional": false
                },
                "endDescription": {
                    "type": "sc.TextGui",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "QuestInfoBoxSolved",
                    "args": []
                }
            },
            "parents": [
                "ig.SimpleGui"
            ]
        },
        "sc.QuestInfoBox": {
            "fields": {
                "gfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "titleGui": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "descriptionGui": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "locationGui": {
                    "type": "ig.ColorGui",
                    "isOptional": false
                },
                "locationText": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "activeView": {
                    "type": "sc.QuestInfoBoxActive",
                    "isOptional": false
                },
                "solvedView": {
                    "type": "sc.QuestInfoBoxSolved",
                    "isOptional": false
                }
            },
            "functions": {
                "setQuest": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "quest",
                            "type": "sc.Quest",
                            "isOptional": false
                        }
                    ]
                },
                "show": {
                    "returnType": "void",
                    "args": []
                },
                "hide": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "skip",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "init": {
                    "returnType": "QuestInfoBox",
                    "args": []
                }
            },
            "parents": [
                "sc.QuestBaseBox"
            ]
        },
        "sc.QuestDialog": {
            "fields": {
                "gfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "titleGui": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "descriptionGui": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "endDescriptionGui": {
                    "type": "Nullable<sc.TextGui>",
                    "isOptional": false
                },
                "firstTaskGui": {
                    "type": "Nullable<sc.TextGui>",
                    "isOptional": false
                },
                "expGui": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "creditGui": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "cpGui": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "itemsGui": {
                    "type": "ig.GuiElementBase",
                    "isOptional": false
                },
                "solvedGui": {
                    "type": "Nullable<sc.SolvedLine>",
                    "isOptional": false
                },
                "quest": {
                    "type": "sc.Quest",
                    "isOptional": false
                }
            },
            "functions": {
                "setQuest": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "quest",
                            "type": "Nullable<sc.Quest>",
                            "isOptional": true
                        }
                    ]
                },
                "setQuestRewards": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "quest",
                            "type": "sc.Quest",
                            "isOptional": false
                        },
                        {
                            "name": "hideRewards",
                            "type": "boolean",
                            "isOptional": false
                        },
                        {
                            "name": "finished",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "QuestDialog",
                    "args": [
                        {
                            "name": "quest",
                            "type": "sc.Quest",
                            "isOptional": false
                        },
                        {
                            "name": "finished",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "sc.QuestBaseBox"
            ]
        },
        "sc.QuestDialogWrapper": {
            "fields": {
                "screenInteract": {
                    "type": "sc.ScreenInteractEntry",
                    "isOptional": false
                },
                "buttonInteract": {
                    "type": "ig.ButtonInteractEntry",
                    "isOptional": false
                },
                "buttonGroup": {
                    "type": "sc.ButtonGroup",
                    "isOptional": false
                },
                "callback": {
                    "type": "(accepted: boolean, quest: sc.Quest) => void",
                    "isOptional": false
                },
                "quest": {
                    "type": "null",
                    "isOptional": false
                },
                "questBox": {
                    "type": "sc.QuestDialog",
                    "isOptional": false
                },
                "buttons": {
                    "type": "sc.QuestStartDialogButtonBox",
                    "isOptional": false
                },
                "acceptText": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "overlay": {
                    "type": "ig.GuiElementBase",
                    "isOptional": false
                },
                "finished": {
                    "type": "boolean",
                    "isOptional": false
                },
                "firstQuest": {
                    "type": "sc.Quest",
                    "isOptional": false
                },
                "subQuests": {
                    "type": "sc.QuestTask['subQuests']",
                    "isOptional": false
                },
                "next": {
                    "type": "number",
                    "isOptional": false
                },
                "_characterName": {
                    "type": "Nullable<string>",
                    "isOptional": false
                },
                "_mapName": {
                    "type": "Nullable<string>",
                    "isOptional": false
                }
            },
            "functions": {
                "onDetach": {
                    "returnType": "void",
                    "args": []
                },
                "onButtonPress": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "button",
                            "type": "sc.ButtonGui",
                            "isOptional": false
                        }
                    ]
                },
                "_close": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "accept",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "QuestDialogWrapper",
                    "args": [
                        {
                            "name": "firstQuest",
                            "type": "sc.Quest",
                            "isOptional": false
                        },
                        {
                            "name": "callback",
                            "type": "sc.QuestDialogWrapper['callback']",
                            "isOptional": false
                        },
                        {
                            "name": "finished",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "characterName",
                            "type": "string",
                            "isOptional": true
                        },
                        {
                            "name": "mapName",
                            "type": "string",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc.QuestStartDialogButtonBox": {
            "fields": {
                "acceptButton": {
                    "type": "sc.ButtonGui",
                    "isOptional": false
                },
                "declineButton": {
                    "type": "sc.ButtonGui",
                    "isOptional": false
                },
                "acceptMode": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "setAcceptMode": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "buttonGroup",
                            "type": "sc.ButtonGroup",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "QuestStartDialogButtonBox",
                    "args": [
                        {
                            "name": "buttonGroup",
                            "type": "sc.ButtonGroup",
                            "isOptional": false
                        },
                        {
                            "name": "finished",
                            "type": "boolean",
                            "isOptional": false
                        },
                        {
                            "name": "mandatory",
                            "type": "boolean",
                            "isOptional": false
                        },
                        {
                            "name": "parentQuest",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.BoxGui"
            ]
        }
    },
    "game.feature.menu.gui.quests.quest-tab-list": {
        "sc.QuestData": {
            "fields": {
                "quest": {
                    "type": "string",
                    "isOptional": false
                },
                "index": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.QuestListBox": {
            "fields": {
                "tabArray": {
                    "type": "sc.ItemTabbedBox.TabButton[]",
                    "isOptional": false
                }
            },
            "functions": {
                "_createTabButton": {
                    "returnType": "sc.ItemTabbedBox.TabButton",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "type",
                            "type": "sc.QUEST_LIST_TYPE",
                            "isOptional": false
                        },
                        {
                            "name": "icon",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc": {
            "fields": {
                "QuestListBox": {
                    "type": "QuestListBoxConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.menu.gui.save.save-list": {
        "sc.SaveAutoSaveSlot": {
            "fields": {
                "button": {
                    "type": "null",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "SaveAutoSaveSlot",
                    "args": []
                }
            },
            "parents": [
                "ig.BoxGui"
            ]
        },
        "sc": {
            "fields": {
                "SaveAutoSaveSlot": {
                    "type": "SaveAutoSaveSlotConstructor"
                },
                "SaveList": {
                    "type": "SaveListConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.SaveList": {
            "fields": {
                "gfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "list": {
                    "type": "sc.ButtonListBox",
                    "isOptional": false
                },
                "buttongroup": {
                    "type": "sc.ButtonGroup",
                    "isOptional": false
                },
                "slots": {
                    "type": "sc.SaveSlotButton[]",
                    "isOptional": false
                },
                "submitSound": {
                    "type": "ig.Sound",
                    "isOptional": false
                },
                "selectedSlot": {
                    "type": "sc.SaveSlotButton",
                    "isOptional": false
                },
                "autoSlot": {
                    "type": "sc.SaveAutoSaveSlot",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "SaveList",
                    "args": []
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        }
    },
    "game.feature.menu.gui.save.save-menu": {
        "sc.SaveMenu": {
            "fields": {
                "list": {
                    "type": "sc.SaveList",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "SaveMenu",
                    "args": []
                }
            },
            "parents": [
                "sc.BaseMenu"
            ]
        },
        "sc": {
            "fields": {
                "SaveMenu": {
                    "type": "SaveMenuConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.menu.gui.save.save-misc": {
        "sc.SaveSlotNewButton": {
            "fields": {
                "slot": {
                    "type": "number",
                    "isOptional": false
                },
                "slotOver": {
                    "type": "sc.SaveSlotButtonHighlight",
                    "isOptional": false
                },
                "text": {
                    "type": "sc.TextGui",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "SaveSlotNewButton",
                    "args": []
                }
            },
            "parents": [
                "ig.FocusGui"
            ]
        },
        "sc": {
            "fields": {
                "SaveSlotNewButton": {
                    "type": "SaveSlotNewButtonConstructor"
                },
                "SaveSlotButton": {
                    "type": "SaveSlotButtonConstructor"
                },
                "SaveSlotPlayTime": {
                    "type": "SaveSlotPlayTimeConstructor"
                },
                "SaveSlotLocation": {
                    "type": "SaveSlotLocationConstructor"
                },
                "SaveSlotParty": {
                    "type": "SaveSlotPartyConstructor"
                },
                "SaveSlotElements": {
                    "type": "SaveSlotElementsConstructor"
                },
                "SaveSlotChapter": {
                    "type": "SaveSlotChapterConstructor"
                },
                "SaveSlotButtonHighlight": {
                    "type": "SaveSlotButtonHighlightConstructor"
                },
                "SaveSlotUpdateEffect": {
                    "type": "SaveSlotUpdateEffectConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.SaveSlotButton": {
            "fields": {
                "slot": {
                    "type": "number",
                    "isOptional": false
                },
                "slotOver": {
                    "type": "sc.SaveSlotButtonHighlight",
                    "isOptional": false
                },
                "level": {
                    "type": "sc.NumberGui",
                    "isOptional": false
                },
                "location": {
                    "type": "sc.SaveSlotLocation",
                    "isOptional": false
                },
                "time": {
                    "type": "sc.SaveSlotPlayTime",
                    "isOptional": false
                },
                "credit": {
                    "type": "sc.NumberGui",
                    "isOptional": false
                },
                "chapter": {
                    "type": "sc.SaveSlotChapter",
                    "isOptional": false
                },
                "party": {
                    "type": "sc.SaveSlotParty",
                    "isOptional": false
                },
                "elements": {
                    "type": "sc.SaveSlotElements",
                    "isOptional": false
                },
                "autoSlotMiss": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "wrapper": {
                    "type": "ig.GuiElementBase",
                    "isOptional": false
                },
                "content": {
                    "type": "ig.GuiElementBase",
                    "isOptional": false
                },
                "effect": {
                    "type": "sc.SaveSlotUpdateEffect",
                    "isOptional": false
                }
            },
            "functions": {
                "setSave": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "save",
                            "type": "ig.SaveSlot.Data",
                            "isOptional": false
                        },
                        {
                            "name": "slot",
                            "type": "number",
                            "isOptional": true
                        },
                        {
                            "name": "skip",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "init": {
                    "returnType": "SaveSlotButton",
                    "args": [
                        {
                            "name": "save",
                            "type": "ig.SaveSlot.Data",
                            "isOptional": true
                        },
                        {
                            "name": "slot",
                            "type": "number",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": [
                "ig.FocusGui"
            ]
        },
        "sc.SaveSlotPlayTime": {
            "fields": {
                "gfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "hour": {
                    "type": "sc.NumberGui",
                    "isOptional": false
                },
                "minute": {
                    "type": "sc.NumberGui",
                    "isOptional": false
                },
                "second": {
                    "type": "sc.NumberGui",
                    "isOptional": false
                },
                "millis": {
                    "type": "Nullable<sc.NumberGui>",
                    "isOptional": false
                },
                "color": {
                    "type": "sc.GUI_NUMBER_COLOR",
                    "isOptional": false
                },
                "hideHours": {
                    "type": "boolean",
                    "isOptional": false
                },
                "drawHourDots": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "setColor": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "color",
                            "type": "sc.GUI_NUMBER_COLOR",
                            "isOptional": true
                        }
                    ]
                },
                "setTime": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "save",
                            "type": "ig.SaveSlot.Data",
                            "isOptional": false
                        },
                        {
                            "name": "skip",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "setTimeFromValue": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "seconds",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "skip",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "init": {
                    "returnType": "SaveSlotPlayTime",
                    "args": []
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc.SaveSlotLocation": {
            "fields": {
                "location": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "version": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "newGamePlus": {
                    "type": "ig.ImageGui",
                    "isOptional": false
                }
            },
            "functions": {
                "setLocation": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "save",
                            "type": "ig.SaveSlot.Data",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc.SaveSlotParty": {
            "fields": {
                "headsGfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "party": {
                    "type": "number[]",
                    "isOptional": false
                }
            },
            "functions": {
                "setParty": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "save",
                            "type": "ig.SaveSlot.Data",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "SaveSlotParty",
                    "args": []
                }
            },
            "parents": [
                "ig.BoxGui"
            ]
        },
        "sc.SaveSlotElements": {
            "fields": {
                "elements": {
                    "type": "[boolean, boolean, boolean, boolean]",
                    "isOptional": false
                }
            },
            "functions": {
                "setElements": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "save",
                            "type": "ig.SaveSlot.Data",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "SaveSlotElements",
                    "args": []
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc.SaveSlotChapter": {
            "fields": {
                "textGui": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "chapterGui": {
                    "type": "sc.NumberGui",
                    "isOptional": false
                },
                "metaMarker": {
                    "type": "ig.ImageGui",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "SaveSlotChapter",
                    "args": []
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc.SaveSlotButtonHighlight": {
            "fields": {
                "slot": {
                    "type": "number",
                    "isOptional": false
                },
                "focus": {
                    "type": "boolean",
                    "isOptional": false
                },
                "newgame": {
                    "type": "boolean",
                    "isOptional": false
                },
                "slotGui": {
                    "type": "sc.TextGui | sc.NumberGui",
                    "isOptional": false
                }
            },
            "functions": {
                "setSlot": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "slot",
                            "type": "number",
                            "isOptional": true
                        }
                    ]
                },
                "init": {
                    "returnType": "SaveSlotButtonHighlight",
                    "args": []
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc.SaveSlotUpdateEffect": {
            "fields": {},
            "functions": {
                "init": {
                    "returnType": "SaveSlotUpdateEffect",
                    "args": []
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        }
    },
    "game.feature.menu.gui.shop.shop-cart": {
        "sc.ShopCart": {
            "fields": {
                "ninepatch": {
                    "type": "ig.NinePatch",
                    "isOptional": false
                },
                "credits": {
                    "type": "sc.ShopCartEntry",
                    "isOptional": false
                },
                "value": {
                    "type": "sc.ShopCartEntry",
                    "isOptional": false
                },
                "rest": {
                    "type": "sc.ShopCartEntry",
                    "isOptional": false
                },
                "checkout": {
                    "type": "sc.ButtonGui",
                    "isOptional": false
                },
                "enabled": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "resetNumbers": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "skipTransition",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "updateValue": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "skipTransition",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "setCheckout": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "value",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "onCheckoutPress": {
                    "returnType": "void",
                    "args": []
                },
                "onCheckoutCheck": {
                    "returnType": "boolean",
                    "args": []
                },
                "init": {
                    "returnType": "ShopCart",
                    "args": []
                }
            },
            "parents": [
                "ig.BoxGui"
            ]
        },
        "sc": {
            "fields": {
                "ShopCart": {
                    "type": "ShopCartConstructor"
                },
                "ShopCartEntry": {
                    "type": "ShopCartEntryConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.ShopCartEntry": {
            "fields": {
                "gfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "text": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "number": {
                    "type": "sc.NumberGui",
                    "isOptional": false
                },
                "hideSymbol": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "setNumber": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "value",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "skipTransition",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "init": {
                    "returnType": "ShopCartEntry",
                    "args": [
                        {
                            "name": "text",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        }
    },
    "game.feature.menu.gui.shop.shop-confirm": {
        "sc.ShopConfirmEntry": {
            "fields": {
                "gfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "item": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "amount": {
                    "type": "sc.NumberGui",
                    "isOptional": false
                },
                "price": {
                    "type": "sc.NumberGui",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "ShopConfirmEntry",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "amount",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "price",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc": {
            "fields": {
                "ShopConfirmEntry": {
                    "type": "ShopConfirmEntryConstructor"
                },
                "ShopConfirmDialog": {
                    "type": "ShopConfirmDialogConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.ShopConfirmDialog": {
            "fields": {
                "notifyRaritySell": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "createList": {
                    "returnType": "void",
                    "args": []
                }
            },
            "parents": [
                "sc.ModalButtonInteract"
            ]
        }
    },
    "game.feature.menu.gui.shop.shop-list": {
        "sc.ShopItemButton": {
            "fields": {
                "price": {
                    "type": "number",
                    "isOptional": false
                },
                "owned": {
                    "type": "sc.NumberGui",
                    "isOptional": false
                }
            },
            "functions": {
                "setCountNumber": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "value",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "skipTransition",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "init": {
                    "returnType": "sc.ShopItemButton",
                    "args": [
                        {
                            "name": "itemName",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "itemID",
                            "type": "sc.ItemID",
                            "isOptional": false
                        },
                        {
                            "name": "itemDescription",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "itemAmount",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "cost",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "itemEquipLevel",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "sc.ListBoxButton"
            ]
        },
        "sc": {
            "fields": {
                "ShopItemButton": {
                    "type": "ShopItemButtonConstructor"
                },
                "ShopListMenu": {
                    "type": "ShopListMenuConstructor"
                },
                "ShopPageCounter": {
                    "type": "ShopPageCounterConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.ShopListMenu": {
            "fields": {
                "buttongroup": {
                    "type": "sc.ButtonGroup",
                    "isOptional": false
                },
                "pagesCache": {
                    "type": "[]",
                    "isOptional": false
                },
                "list": {
                    "type": "sc.ItemListBox",
                    "isOptional": false
                },
                "repeater": {
                    "type": "ig.PressRepeater",
                    "isOptional": false
                },
                "_prevSortType": {
                    "type": "sc.SORT_TYPE",
                    "isOptional": false
                },
                "_amp": {
                    "type": "number",
                    "isOptional": false
                },
                "_ampTimer": {
                    "type": "number",
                    "isOptional": false
                },
                "_ampDir": {
                    "type": "Nullable<-1 | 1>",
                    "isOptional": false
                }
            },
            "functions": {
                "getRepeaterValue": {
                    "returnType": "number",
                    "args": []
                },
                "getActiveElement": {
                    "returnType": "sc.ShopItemButton",
                    "args": []
                },
                "stepRight": {
                    "returnType": "void",
                    "args": []
                },
                "stepLeft": {
                    "returnType": "void",
                    "args": []
                },
                "changeCount": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "direction",
                            "type": "1 | -1",
                            "isOptional": false
                        }
                    ]
                },
                "playSound": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "direction",
                            "type": "1 | -1",
                            "isOptional": false
                        },
                        {
                            "name": "repeater",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "updateListEntries": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "resetCounters",
                            "type": "Nullable<boolean>",
                            "isOptional": true
                        }
                    ]
                },
                "updateShopPage": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "sortOrder",
                            "type": "Nullable<sc.SORT_TYPE>",
                            "isOptional": true
                        }
                    ]
                },
                "createBuyList": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "refocus",
                            "type": "Nullable<boolean>",
                            "isOptional": true
                        },
                        {
                            "name": "fromMouse",
                            "type": "Nullable<boolean>",
                            "isOptional": true
                        },
                        {
                            "name": "skipSounds",
                            "type": "Nullable<boolean>",
                            "isOptional": true
                        },
                        {
                            "name": "sortType",
                            "type": "Nullable<sc.SORT_TYPE>",
                            "isOptional": true
                        }
                    ]
                },
                "scrapSellList": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "shopItems",
                            "type": "sc.ItemID[]",
                            "isOptional": false
                        }
                    ]
                },
                "scrapBuyList": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "shopItems",
                            "type": "ig.Database.ShopItem[]",
                            "isOptional": false
                        }
                    ]
                },
                "onPressCallback": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "button",
                            "type": "sc.ShopItemButton",
                            "isOptional": false
                        }
                    ]
                },
                "onBackButtonPress": {
                    "returnType": "void",
                    "args": []
                },
                "leaveList": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "ShopListMenu",
                    "args": []
                }
            },
            "parents": [
                "sc.MenuPanel"
            ]
        },
        "sc.ShopPageCounter": {
            "fields": {
                "pageText": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "cycleLeft": {
                    "type": "sc.ButtonGui",
                    "isOptional": false
                },
                "cycleRight": {
                    "type": "sc.ButtonGui",
                    "isOptional": false
                }
            },
            "functions": {
                "show": {
                    "returnType": "void",
                    "args": []
                },
                "cycleSellPages": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "dir",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "sc.MenuPanel"
            ]
        }
    },
    "game.feature.menu.gui.shop.shop-menu": {
        "sc.ShopMenu": {
            "fields": {
                "hotkeyHelp": {
                    "type": "sc.ButtonGui",
                    "isOptional": false
                },
                "hotkeySort": {
                    "type": "sc.ButtonGui",
                    "isOptional": false
                },
                "hotkeySwitch": {
                    "type": "sc.ButtonGui",
                    "isOptional": false
                },
                "shopName": {
                    "type": "sc.ShopStartTitle",
                    "isOptional": false
                },
                "start": {
                    "type": "sc.ShopStartMenu",
                    "isOptional": false
                },
                "shopList": {
                    "type": "sc.ShopListMenu",
                    "isOptional": false
                },
                "pageView": {
                    "type": "sc.ShopPageCounter",
                    "isOptional": false
                },
                "stats": {
                    "type": "sc.ShopEquipStats",
                    "isOptional": false
                },
                "cart": {
                    "type": "sc.ShopCart",
                    "isOptional": false
                },
                "quantity": {
                    "type": "sc.ShopQuantitySelect",
                    "isOptional": false
                },
                "confirmDialog": {
                    "type": "sc.ShopConfirmDialog",
                    "isOptional": false
                },
                "sortMenu": {
                    "type": "sc.SortMenu",
                    "isOptional": false
                },
                "helpGui": {
                    "type": "sc.HelpScreen",
                    "isOptional": false
                }
            },
            "functions": {
                "openQuantitySelect": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "button",
                            "type": "sc.ButtonGui",
                            "isOptional": false
                        }
                    ]
                },
                "updateSortMenuButton": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "sortName",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "resolveStateChange": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "prevShopState",
                            "type": "Nullable<sc.MENU_SHOP_STATE>",
                            "isOptional": false
                        },
                        {
                            "name": "skipTransition",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "onConfirm": {
                    "returnType": "void",
                    "args": []
                },
                "buyItems": {
                    "returnType": "boolean",
                    "args": []
                },
                "sellItems": {
                    "returnType": "boolean",
                    "args": []
                },
                "onQuantitySubmit": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "button",
                            "type": "sc.ShopItemButton",
                            "isOptional": false
                        },
                        {
                            "name": "amount",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "onQuantityBack": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "button",
                            "type": "sc.ShopItemButton",
                            "isOptional": false
                        }
                    ]
                },
                "onHotkeyHelpCheck": {
                    "returnType": "boolean",
                    "args": []
                },
                "onHelpButtonPressed": {
                    "returnType": "void",
                    "args": []
                },
                "onHotkeySortCheck": {
                    "returnType": "boolean",
                    "args": []
                },
                "onHotkeySwitchCheck": {
                    "returnType": "boolean",
                    "args": []
                },
                "onSortButtonPress": {
                    "returnType": "void",
                    "args": []
                },
                "onExecuteSort": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "button",
                            "type": "sc.ButtonGui",
                            "isOptional": false
                        }
                    ]
                },
                "createHelpGui": {
                    "returnType": "void",
                    "args": []
                },
                "onAddHotkeys": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "longTransition",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "commitHotKeysToTopBar": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "longTransition",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "onBackButtonPress": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "ShopMenu",
                    "args": []
                }
            },
            "parents": [
                "sc.BaseMenu",
                "sc.Model.Observer"
            ]
        },
        "sc": {
            "fields": {
                "ShopMenu": {
                    "type": "ShopMenuConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.menu.gui.shop.shop-misc": {
        "sc.ShopHelper": {
            "fields": {},
            "functions": {
                "getMaxBuyable": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "itemID",
                            "type": "sc.ItemID",
                            "isOptional": false
                        },
                        {
                            "name": "cartAmount",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "price",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "maxOwn",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "sortList": {
                    "returnType": "ig.Database.ShopItem[]",
                    "args": [
                        {
                            "name": "items",
                            "type": "ig.Database.ShopItem[]",
                            "isOptional": false
                        },
                        {
                            "name": "sortType",
                            "type": "sc.SORT_TYPE",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": []
        },
        "sc": {
            "fields": {
                "ShopHelper": {
                    "type": "ShopHelper"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.menu.gui.shop.shop-quantity": {
        "sc.ShopQuantitySelect": {
            "fields": {
                "active": {
                    "type": "boolean",
                    "isOptional": false
                },
                "_max": {
                    "type": "number",
                    "isOptional": false
                },
                "_button": {
                    "type": "sc.ShopItemButton",
                    "isOptional": false
                }
            },
            "functions": {
                "show": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "button",
                            "type": "sc.ShopItemButton",
                            "isOptional": false
                        },
                        {
                            "name": "submitCallback",
                            "type": "sc.ShopQuantitySelect.SubmitCallback",
                            "isOptional": false
                        },
                        {
                            "name": "cancelCallback",
                            "type": "sc.ShopQuantitySelect.CancelCallback",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.BoxGui"
            ]
        },
        "sc": {
            "fields": {
                "ShopQuantitySelect": {
                    "type": "ShopQuantitySelectConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.menu.gui.shop.shop-start": {
        "sc.ShopStartMenu": {
            "fields": {
                "ninepatch": {
                    "type": "ig.NinePatch",
                    "isOptional": false
                },
                "buy": {
                    "type": "sc.ButtonGui",
                    "isOptional": false
                },
                "sell": {
                    "type": "sc.ButtonGui",
                    "isOptional": false
                },
                "buttongroup": {
                    "type": "sc.ButtonGroup",
                    "isOptional": false
                }
            },
            "functions": {
                "onButtonPress": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "button",
                            "type": "sc.ButtonGui",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "ShopStartMenu",
                    "args": []
                }
            },
            "parents": [
                "ig.BoxGui"
            ]
        },
        "sc": {
            "fields": {
                "ShopStartMenu": {
                    "type": "ShopStartMenuConstructor"
                },
                "ShopStartTitle": {
                    "type": "ShopStartTitleConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.ShopStartTitle": {
            "fields": {
                "ninepatch": {
                    "type": "ig.NinePatch",
                    "isOptional": false
                },
                "text": {
                    "type": "sc.TextGui",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "ShopStartTitle",
                    "args": []
                }
            },
            "parents": [
                "ig.BoxGui"
            ]
        }
    },
    "game.feature.menu.gui.shop.shop-stats": {
        "sc.ShopEquipStats": {
            "fields": {},
            "functions": {
                "init": {
                    "returnType": "ShopEquipStats",
                    "args": []
                }
            },
            "parents": [
                "sc.TradeToggleStats"
            ]
        },
        "sc": {
            "fields": {
                "ShopEquipStats": {
                    "type": "ShopEquipStatsConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.menu.gui.social.social-list": {
        "sc.SocialList": {
            "fields": {},
            "functions": {
                "init": {
                    "returnType": "SocialList",
                    "args": []
                }
            },
            "parents": [
                "sc.ListTabbedPane"
            ]
        },
        "sc": {
            "fields": {
                "SocialList": {
                    "type": "SocialListConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.menu.gui.social.social-menu": {},
    "game.feature.menu.gui.social.social-misc": {
        "sc.SocialInfoBox": {
            "fields": {
                "equip": {
                    "type": "ig.GuiElementBase",
                    "isOptional": false
                }
            },
            "functions": {
                "setCharacter": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "createEquipEntry": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "itemID",
                            "type": "sc.ItemID",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "bodypart",
                            "type": "sc.MENU_EQUIP_BODYPART_STR",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.BoxGui"
            ]
        },
        "sc": {
            "fields": {
                "SocialInfoBox": {
                    "type": "SocialInfoBoxConstructor"
                },
                "SocialPartyBox": {
                    "type": "SocialPartyBoxConstructor"
                },
                "SocialPartyMember": {
                    "type": "SocialPartyMemberConstructor"
                },
                "SocialBaseInfoBox": {
                    "type": "SocialBaseInfoBoxConstructor"
                },
                "SocialEntryButton": {
                    "type": "SocialEntryButtonConstructor"
                },
                "SocialHead": {
                    "type": "SocialHeadConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.SocialPartyBox": {
            "fields": {
                "lea": {
                    "type": "null",
                    "isOptional": false
                },
                "members": {
                    "type": "sc.SocialPartyMember[]",
                    "isOptional": false
                }
            },
            "functions": {
                "updatePartyMembers": {
                    "returnType": "void",
                    "args": []
                },
                "show": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "update",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "hide": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "skip",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "SocialPartyBox",
                    "args": []
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc.SocialPartyMember": {
            "fields": {},
            "functions": {},
            "parents": [
                "sc.MenuPanel"
            ]
        },
        "sc.SocialBaseInfoBox": {
            "fields": {
                "exp": {
                    "type": "sc.ItemStatusDefaultBar",
                    "isOptional": false
                },
                "hp": {
                    "type": "sc.ItemStatusDefaultBar",
                    "isOptional": false
                },
                "sp": {
                    "type": "sc.ItemStatusDefaultBar",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "SocialBaseInfoBox",
                    "args": []
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc.SocialEntryButton": {
            "fields": {
                "gfx2": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "head": {
                    "type": "sc.SocialHead",
                    "isOptional": false
                },
                "status": {
                    "type": "ig.ImageGui",
                    "isOptional": false
                },
                "key": {
                    "type": "string",
                    "isOptional": false
                }
            },
            "functions": {
                "updateMemberStatus": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "SocialEntryButton",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "model",
                            "type": "sc.PartyMemberModel",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "sc.ListBoxButton"
            ]
        },
        "sc.SocialHead": {
            "fields": {
                "active": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": [
                "ig.GuiElementBase"
            ]
        }
    },
    "game.feature.menu.gui.start-menu": {
        "sc.StartMenu.Buttons": {
            "fields": {
                "quest": {
                    "type": "sc.ButtonGui",
                    "isOptional": false
                },
                "skills": {
                    "type": "sc.ButtonGui",
                    "isOptional": false
                },
                "equipment": {
                    "type": "sc.ButtonGui",
                    "isOptional": false
                },
                "items": {
                    "type": "sc.ButtonGui",
                    "isOptional": false
                },
                "status": {
                    "type": "sc.ButtonGui",
                    "isOptional": false
                },
                "social": {
                    "type": "sc.ButtonGui",
                    "isOptional": false
                },
                "synopsis": {
                    "type": "sc.NewUnlockButton",
                    "isOptional": false
                },
                "save": {
                    "type": "sc.ButtonGui",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.StartMenu": {
            "fields": {
                "buttons": {
                    "type": "sc.StartMenu.Buttons",
                    "isOptional": false
                }
            },
            "functions": {
                "showMenu": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "StartMenu",
                    "args": []
                }
            },
            "parents": [
                "sc.BaseMenu"
            ]
        },
        "sc": {
            "fields": {
                "StartMenu": {
                    "type": "StartMenuConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.menu.gui.stats.stats-gui-builds": {
        "sc.Stats.StatItem": {
            "fields": {
                "type": {
                    "type": "keyof typeof sc.STATS_ENTRY_TYPE",
                    "isOptional": true
                },
                "subtype": {
                    "type": "keyof typeof sc.STATS_ENTRY_TYPE",
                    "isOptional": true
                },
                "displayName": {
                    "type": "string",
                    "isOptional": true
                },
                "highlight": {
                    "type": "{ min: number } | boolean",
                    "isOptional": true
                },
                "min": {
                    "type": "number",
                    "isOptional": false
                },
                "group": {
                    "type": "string",
                    "isOptional": true
                },
                "stat": {
                    "type": "string",
                    "isOptional": true
                },
                "map": {
                    "type": "string",
                    "isOptional": true
                },
                "max": {
                    "type": "() => number",
                    "isOptional": true
                },
                "getSettings": {
                    "type": "(key: string) => StatItem | null",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "sc": {
            "fields": {
                "STATS_BUILD": {
                    "type": "Record<sc.STATS_CATEGORY, Record<string, Stats.StatItem>>"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.menu.gui.stats.stats-list": {
        "sc.StatsListBox": {
            "fields": {},
            "functions": {},
            "parents": [
                "sc.TabbedPane"
            ]
        },
        "sc": {
            "fields": {
                "StatsListBox": {
                    "type": "StatsListBoxConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.menu.gui.stats.stats-menu": {},
    "game.feature.menu.gui.stats.stats-misc": {},
    "game.feature.menu.gui.stats.stats-types": {
        "sc.StatsBaseEntryGui": {
            "fields": {},
            "functions": {},
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc": {
            "fields": {
                "StatsBaseEntryGui": {
                    "type": "StatsBaseEntryGuiConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.STATS_ENTRY_TYPE.Time": {
            "fields": {},
            "functions": {},
            "parents": [
                "sc.StatsBaseEntryGui"
            ]
        },
        "sc.STATS_ENTRY_TYPE": {
            "fields": {
                "Time": {
                    "type": "TimeConstructor"
                },
                "Percent": {
                    "type": "PercentConstructor"
                },
                "KeyValue": {
                    "type": "KeyValueConstructor"
                },
                "KeyCurMax": {
                    "type": "KeyCurMaxConstructor"
                },
                "KeyValuePercent": {
                    "type": "KeyValuePercentConstructor"
                },
                "Separator": {
                    "type": "SeparatorConstructor"
                },
                "Logs": {
                    "type": "LogsConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.STATS_ENTRY_TYPE.Percent": {
            "fields": {},
            "functions": {},
            "parents": [
                "sc.StatsBaseEntryGui"
            ]
        },
        "sc.STATS_ENTRY_TYPE.KeyValue": {
            "fields": {},
            "functions": {},
            "parents": [
                "sc.StatsBaseEntryGui"
            ]
        },
        "sc.STATS_ENTRY_TYPE.KeyCurMax": {
            "fields": {},
            "functions": {},
            "parents": [
                "sc.StatsBaseEntryGui"
            ]
        },
        "sc.STATS_ENTRY_TYPE.KeyValuePercent": {
            "fields": {},
            "functions": {},
            "parents": [
                "sc.StatsBaseEntryGui"
            ]
        },
        "sc.STATS_ENTRY_TYPE.Separator": {
            "fields": {},
            "functions": {},
            "parents": [
                "sc.StatsBaseEntryGui"
            ]
        },
        "sc.STATS_ENTRY_TYPE.Logs": {
            "fields": {},
            "functions": {},
            "parents": [
                "sc.StatsBaseEntryGui"
            ]
        }
    },
    "game.feature.menu.gui.status.status-menu": {},
    "game.feature.menu.gui.status.status-misc": {
        "sc.StatusParamBar": {
            "fields": {
                "gfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "lineID": {
                    "type": "number",
                    "isOptional": false
                },
                "usePercent": {
                    "type": "boolean",
                    "isOptional": false
                },
                "iconIndex": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "skipVertLine": {
                    "type": "boolean",
                    "isOptional": false
                },
                "base": {
                    "type": "sc.NumberGui",
                    "isOptional": false
                },
                "equip": {
                    "type": "sc.NumberGui",
                    "isOptional": false
                },
                "skills": {
                    "type": "sc.NumberGui",
                    "isOptional": false
                },
                "equipAdd": {
                    "type": "sc.NumberGui",
                    "isOptional": false
                },
                "skillAdd": {
                    "type": "sc.NumberGui",
                    "isOptional": false
                },
                "_baseRed": {
                    "type": "boolean",
                    "isOptional": false
                },
                "_equipRed": {
                    "type": "boolean",
                    "isOptional": false
                },
                "_skillsRed": {
                    "type": "boolean",
                    "isOptional": false
                },
                "_hideAll": {
                    "type": "boolean",
                    "isOptional": false
                },
                "_skillHidden": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "StatusParamBar",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "description",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "size",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "lineID",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "iconID",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "usePercent",
                            "type": "boolean",
                            "isOptional": false
                        },
                        {
                            "name": "skillHidden",
                            "type": "boolean",
                            "isOptional": false
                        },
                        {
                            "name": "noPercent",
                            "type": "boolean",
                            "isOptional": false
                        },
                        {
                            "name": "longNumber",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc": {
            "fields": {
                "StatusParamBar": {
                    "type": "StatusParamBarConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.menu.gui.status.status-view-combat-arts": {
        "sc.StatusViewCombatArtsEntry": {
            "fields": {
                "skillIcons": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "icon": {
                    "type": "ig.ImageGui",
                    "isOptional": false
                },
                "level": {
                    "type": "sc.NumberGui",
                    "isOptional": false
                },
                "sp": {
                    "type": "sc.NumberGui",
                    "isOptional": false
                },
                "dmgType": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "stunType": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "condition": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "name": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "description": {
                    "type": "sc.TextGui",
                    "isOptional": false
                }
            },
            "functions": {
                "getConditionType": {
                    "returnType": "string",
                    "args": []
                },
                "init": {
                    "returnType": "StatusViewCombatArtsEntry",
                    "args": [
                        {
                            "name": "artLevel",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "action",
                            "type": "sc.PlayerAction",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc": {
            "fields": {
                "StatusViewCombatArtsEntry": {
                    "type": "StatusViewCombatArtsEntryConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.menu.gui.status.status-view-main": {
        "sc.StatusViewMainEquipment.Entry": {
            "fields": {
                "textGui": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "itemGui": {
                    "type": "sc.TextGui & sc.TextGui.LevelDrawData",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "Entry",
                    "args": [
                        {
                            "name": "bodyPart",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc.StatusViewMainEquipment": {
            "fields": {
                "Entry": {
                    "type": "EntryConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.StatusViewMainParameters.BaseParams": {
            "fields": {
                "hp": {
                    "type": "sc.SimpleStatusDisplay",
                    "isOptional": false
                },
                "atk": {
                    "type": "sc.SimpleStatusDisplay",
                    "isOptional": false
                },
                "def": {
                    "type": "sc.SimpleStatusDisplay",
                    "isOptional": false
                },
                "foc": {
                    "type": "sc.SimpleStatusDisplay",
                    "isOptional": false
                },
                "fire": {
                    "type": "sc.SimpleStatusDisplay",
                    "isOptional": false
                },
                "cold": {
                    "type": "sc.SimpleStatusDisplay",
                    "isOptional": false
                },
                "shock": {
                    "type": "sc.SimpleStatusDisplay",
                    "isOptional": false
                },
                "wave": {
                    "type": "sc.SimpleStatusDisplay",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.StatusViewMainParameters": {
            "fields": {
                "menuGfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "level": {
                    "type": "sc.NumberGui",
                    "isOptional": false
                },
                "baseParams": {
                    "type": "sc.StatusViewMainParameters.BaseParams",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "StatusViewMainParameters",
                    "args": []
                }
            },
            "parents": [
                "sc.MenuPanel"
            ]
        },
        "sc": {
            "fields": {
                "StatusViewMainParameters": {
                    "type": "StatusViewMainParametersConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.menu.gui.status.status-view-modifiers": {},
    "game.feature.menu.gui.status.status-view-parameters": {},
    "game.feature.menu.gui.synop.synop-menu": {},
    "game.feature.menu.gui.synop.synop-misc": {
        "sc.LogGuiTypeBase": {
            "fields": {
                "textGui": {
                    "type": "sc.TextGui",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "LogGuiTypeBase",
                    "args": [
                        {
                            "name": "settings",
                            "type": "any",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc": {
            "fields": {
                "LogGuiTypeBase": {
                    "type": "LogGuiTypeBaseConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.menu.gui.tab-box": {
        "sc.TabbedPane.Settings": {
            "fields": {
                "type": {
                    "type": "number",
                    "isOptional": true
                },
                "skipSounds": {
                    "type": "boolean",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.TabbedPane.Content": {
            "fields": {
                "buttongroup": {
                    "type": "sc.ButtonGroup",
                    "isOptional": false
                },
                "list": {
                    "type": "sc.ButtonListBox",
                    "isOptional": false
                },
                "sort": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.TabbedPane": {
            "fields": {
                "tabGroup": {
                    "type": "sc.ButtonGroup",
                    "isOptional": false
                },
                "keys": {
                    "type": "string[]",
                    "isOptional": false
                },
                "tabs": {
                    "type": "Record<string, sc.ItemTabbedBox.TabButton>",
                    "isOptional": false
                },
                "tabArray": {
                    "type": "sc.ItemTabbedBox.TabButton[]",
                    "isOptional": false
                },
                "tabContent": {
                    "type": "sc.TabbedPane.Content[]",
                    "isOptional": false
                },
                "currentTabIndex": {
                    "type": "number",
                    "isOptional": false
                },
                "currentContent": {
                    "type": "sc.TabbedPane.Content",
                    "isOptional": false
                },
                "cacheContent": {
                    "type": "boolean",
                    "isOptional": false
                },
                "_prevIndex": {
                    "type": "number",
                    "isOptional": false
                },
                "_prevPressed": {
                    "type": "sc.ItemTabbedBox.TabButton",
                    "isOptional": false
                }
            },
            "functions": {
                "setPanelSize": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "width",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "height",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "addTab": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "index",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "sc.TabbedPane.Settings",
                            "isOptional": false
                        }
                    ]
                },
                "setTab": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "ignorePrev",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "settings",
                            "type": "sc.TabbedPane.Settings",
                            "isOptional": true
                        }
                    ]
                },
                "show": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "tabIndex",
                            "type": "number",
                            "isOptional": true
                        }
                    ]
                },
                "hide": {
                    "returnType": "void",
                    "args": []
                },
                "rearrangeTabs": {
                    "returnType": "void",
                    "args": []
                },
                "resetButtons": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "exceptThisButton",
                            "type": "sc.ItemTabbedBox.TabButton",
                            "isOptional": true
                        },
                        {
                            "name": "unfocusAll",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "onTabButtonCreation": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "index",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "sc.TabbedPane.Settings",
                            "isOptional": false
                        }
                    ]
                },
                "getCurrentTabButton": {
                    "returnType": "null | sc.ItemTabbedBox.TabButton",
                    "args": []
                },
                "getCurrentTabKey": {
                    "returnType": "string",
                    "args": []
                },
                "getButtonIndex": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "tab",
                            "type": "sc.ItemTabbedBox.TabButton",
                            "isOptional": false
                        }
                    ]
                },
                "onTabSelected": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "button",
                            "type": "sc.ItemTabbedBox.TabButton",
                            "isOptional": false
                        }
                    ]
                },
                "onTabPressed": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "button",
                            "type": "sc.ItemTabbedBox.TabButton",
                            "isOptional": false
                        },
                        {
                            "name": "wasSame",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "onTabMouseFocusLost": {
                    "returnType": "void",
                    "args": []
                },
                "onTabChanged": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "newIndex",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "prevIndex",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "onClearPrevContent": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "prevContent",
                            "type": "unknown",
                            "isOptional": false
                        }
                    ]
                },
                "onContentCreation": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "sc.TabbedPane.Settings",
                            "isOptional": false
                        }
                    ]
                },
                "onSetCacheContent": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "content",
                            "type": "sc.TabbedPane.Content",
                            "isOptional": false
                        },
                        {
                            "name": "index",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "sc.TabbedPane.Settings",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "TabbedPane",
                    "args": [
                        {
                            "name": "cacheContent",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc": {
            "fields": {
                "TabbedPane": {
                    "type": "TabbedPaneConstructor"
                },
                "ListTabbedPane": {
                    "type": "ListTabbedPaneConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.ListTabbedPane": {
            "fields": {
                "currentList": {
                    "type": "sc.ButtonListBox",
                    "isOptional": false
                },
                "currentGroup": {
                    "type": "sc.ButtonGroup",
                    "isOptional": false
                },
                "bg": {
                    "type": "sc.MenuScanLines",
                    "isOptional": false
                }
            },
            "functions": {
                "onButtonTraversal": {
                    "returnType": "void",
                    "args": []
                },
                "switchTab": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "onInitSortType": {
                    "returnType": "number",
                    "args": []
                },
                "onListEntryPressed": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "button",
                            "type": "sc.ListBoxButton",
                            "isOptional": false
                        }
                    ]
                },
                "onLeftRightPress": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "button",
                            "type": "sc.ItemTabbedBox.TabButton",
                            "isOptional": false
                        },
                        {
                            "name": "index",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "dir",
                            "type": "-1 | 1",
                            "isOptional": false
                        }
                    ]
                },
                "onCreateListEntries": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "list",
                            "type": "sc.ButtonListBox",
                            "isOptional": false
                        },
                        {
                            "name": "buttonGroup",
                            "type": "sc.ButtonGroup",
                            "isOptional": false
                        },
                        {
                            "name": "type",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "sort",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "addObservers": {
                    "returnType": "void",
                    "args": []
                },
                "removeObservers": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "ListTabbedPane",
                    "args": [
                        {
                            "name": "cacheContent",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": [
                "sc.TabbedPane"
            ]
        }
    },
    "game.feature.menu.gui.trade.trade-misc": {
        "sc.TradeButtonBox": {
            "fields": {
                "location": {
                    "type": "sc.TextGui",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "TradeButtonBox",
                    "args": [
                        {
                            "name": "trader",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "buttonGroup",
                            "type": "sc.ButtonGroup",
                            "isOptional": false
                        },
                        {
                            "name": "buttonStartIndex",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc": {
            "fields": {
                "TradeButtonBox": {
                    "type": "TradeButtonBoxConstructor"
                },
                "TradeDetailsView": {
                    "type": "TradeDetailsViewConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.TradeDetailsView": {
            "fields": {
                "location": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "getGui": {
                    "type": "sc.TradeItemBox",
                    "isOptional": false
                },
                "requireGui": {
                    "type": "sc.TradeItemBox",
                    "isOptional": false
                },
                "_trader": {
                    "type": "string",
                    "isOptional": false
                }
            },
            "functions": {
                "setTraderData": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "trader",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "offer",
                            "type": "any",
                            "isOptional": false
                        },
                        {
                            "name": "buttonPos",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "TradeDetailsView",
                    "args": []
                }
            },
            "parents": [
                "ig.BoxGui"
            ]
        }
    },
    "game.feature.menu.gui.trade.trader-list": {
        "sc.TradersListBox": {
            "fields": {},
            "functions": {
                "init": {
                    "returnType": "TradersListBox",
                    "args": []
                }
            },
            "parents": [
                "sc.ListTabbedPane"
            ]
        },
        "sc": {
            "fields": {
                "TradersListBox": {
                    "type": "TradersListBoxConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.menu.gui.trade.trader-menu": {},
    "game.feature.menu.gui.trophy.trophy-list": {
        "sc.TrophyList": {
            "fields": {},
            "functions": {},
            "parents": [
                "sc.ListTabbedPane"
            ]
        },
        "sc": {
            "fields": {
                "TrophyList": {
                    "type": "TrophyListConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.menu.gui.trophy.trophy-menu": {},
    "game.feature.menu.gui.trophy.trophy-misc": {
        "sc.TrophyListEntry": {
            "fields": {
                "description": {
                    "type": "sc.TextGui",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "TrophyListEntry",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "groupID",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "sectionID",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "showProgress",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.FocusGui"
            ]
        },
        "sc": {
            "fields": {
                "TrophyListEntry": {
                    "type": "TrophyListEntryConstructor"
                },
                "TrophyIconGraphic": {
                    "type": "TrophyIconGraphicConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.TrophyIconGraphic": {
            "fields": {
                "ribbon": {
                    "type": "ig.ImageGui",
                    "isOptional": false
                },
                "icon": {
                    "type": "ig.ImageGui",
                    "isOptional": false
                },
                "points": {
                    "type": "sc.NumberGui",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "TrophyIconGraphic",
                    "args": [
                        {
                            "name": "icon",
                            "type": "keyof typeof sc.TROPHY_ICONS",
                            "isOptional": false
                        },
                        {
                            "name": "stars",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "points",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "trophyUnlocked",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        }
    },
    "game.feature.menu.lore-model": {
        "sc.LoreModel": {
            "fields": {
                "observers": {
                    "type": "unknown[]",
                    "isOptional": false
                },
                "lories": {
                    "type": "ig.Database.Data['lore']",
                    "isOptional": false
                },
                "unlockedLories": {
                    "type": "Record<keyof ig.Database.Data['lore'], Record<string, boolean>>",
                    "isOptional": false
                }
            },
            "functions": {
                "unlockLoreAll": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "LoreModel",
                    "args": []
                }
            },
            "parents": [
                "ig.GameAddon"
            ]
        },
        "sc": {
            "fields": {
                "LoreModel": {
                    "type": "LoreModelConstructor"
                },
                "lore": {
                    "type": "LoreModel"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.menu.plug-in": {},
    "game.feature.model.base-model": {
        "sc.Model": {
            "fields": {
                "observers": {
                    "type": "Array<sc.Model.Observer<this>>",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.Model.Observer": {
            "fields": {},
            "functions": {
                "modelChanged": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "model",
                            "type": "M",
                            "isOptional": false
                        },
                        {
                            "name": "message",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "data",
                            "type": "unknown",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": []
        }
    },
    "game.feature.model.game-model": {
        "sc.CombatRank": {
            "fields": {
                "label": {
                    "type": "CombatRankLabel",
                    "isOptional": false
                },
                "dropRate": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc": {
            "fields": {
                "COMBAT_RANK": {
                    "type": "CombatRank[]"
                },
                "GAME_MOBILITY_BLOCK": {
                    "type": "GAME_MOBILITY_BLOCK"
                },
                "GameModel": {
                    "type": "GameModelConstructor"
                },
                "model": {
                    "type": "sc.GameModel"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.GameMobilityBlockEntry": {
            "fields": {
                "teleportBlock": {
                    "type": "boolean",
                    "isOptional": true
                },
                "saveBlock": {
                    "type": "boolean",
                    "isOptional": true
                },
                "checkpointBlock": {
                    "type": "boolean",
                    "isOptional": true
                },
                "mapLeaveBlock": {
                    "type": "boolean",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.GAME_MOBILITY_BLOCK": {
            "fields": {
                "NONE": {
                    "type": "GameMobilityBlockEntry",
                    "isOptional": false
                },
                "TELEPORT": {
                    "type": "GameMobilityBlockEntry",
                    "isOptional": false
                },
                "SAVE": {
                    "type": "GameMobilityBlockEntry",
                    "isOptional": false
                },
                "CHECKPOINT": {
                    "type": "GameMobilityBlockEntry",
                    "isOptional": false
                },
                "NO_MAP_LEAVE": {
                    "type": "GameMobilityBlockEntry",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.GameModel": {
            "fields": {
                "currentState": {
                    "type": "sc.GAME_MODEL_STATE",
                    "isOptional": false
                },
                "currentSubState": {
                    "type": "sc.GAME_MODEL_SUBSTATE",
                    "isOptional": false
                },
                "prevSubState": {
                    "type": "sc.GAME_MODEL_SUBSTATE",
                    "isOptional": false
                },
                "leaConfig": {
                    "type": "sc.PlayerConfig",
                    "isOptional": false
                },
                "player": {
                    "type": "sc.PlayerModel",
                    "isOptional": false
                },
                "message": {
                    "type": "sc.MessageModel",
                    "isOptional": false
                },
                "mobilityBlock": {
                    "type": "keyof GAME_MOBILITY_BLOCK",
                    "isOptional": false
                }
            },
            "functions": {
                "addChoiceGui": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "choiceGui",
                            "type": "ig.GuiElementBase",
                            "isOptional": false
                        }
                    ]
                },
                "removeChoiceGui": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "choiceGui",
                            "type": "ig.GuiElementBase",
                            "isOptional": false
                        }
                    ]
                },
                "getCombatRankDropRate": {
                    "returnType": "number",
                    "args": []
                },
                "isAssistMode": {
                    "returnType": "boolean",
                    "args": []
                },
                "setMobilityBlock": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "mobilityBlock",
                            "type": "keyof sc.GAME_MOBILITY_BLOCK",
                            "isOptional": false
                        }
                    ]
                },
                "enterTitle": {
                    "returnType": "void",
                    "args": []
                },
                "enterCutscene": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "combatCutscene",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "enterGame": {
                    "returnType": "void",
                    "args": []
                },
                "enterRunning": {
                    "returnType": "void",
                    "args": []
                },
                "enterNewGame": {
                    "returnType": "void",
                    "args": []
                },
                "enterReset": {
                    "returnType": "void",
                    "args": []
                },
                "enterQuickMenu": {
                    "returnType": "boolean",
                    "args": []
                },
                "enterPrevSubState": {
                    "returnType": "void",
                    "args": []
                },
                "enterMenu": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "force",
                            "type": "Nullable<boolean>",
                            "isOptional": true
                        }
                    ]
                },
                "enterPause": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "force",
                            "type": "Nullable<boolean>",
                            "isOptional": true
                        }
                    ]
                },
                "isTitle": {
                    "returnType": "boolean",
                    "args": []
                },
                "isGame": {
                    "returnType": "boolean",
                    "args": []
                },
                "isCutscene": {
                    "returnType": "boolean",
                    "args": []
                },
                "isRunning": {
                    "returnType": "boolean",
                    "args": []
                },
                "isTeleport": {
                    "returnType": "boolean",
                    "args": []
                },
                "isLoading": {
                    "returnType": "boolean",
                    "args": []
                },
                "isNewGame": {
                    "returnType": "boolean",
                    "args": []
                },
                "isReset": {
                    "returnType": "boolean",
                    "args": []
                },
                "isLoadGame": {
                    "returnType": "boolean",
                    "args": []
                },
                "isMenu": {
                    "returnType": "boolean",
                    "args": []
                },
                "isPaused": {
                    "returnType": "boolean",
                    "args": []
                },
                "isHUDBlocked": {
                    "returnType": "boolean",
                    "args": []
                },
                "isLevelUp": {
                    "returnType": "boolean",
                    "args": []
                },
                "isQuestSolved": {
                    "returnType": "boolean",
                    "args": []
                },
                "isQuickMenu": {
                    "returnType": "boolean",
                    "args": []
                },
                "isForceCombat": {
                    "returnType": "boolean",
                    "args": []
                },
                "isCombatMode": {
                    "returnType": "boolean",
                    "args": []
                },
                "isCombatActive": {
                    "returnType": "boolean",
                    "args": []
                },
                "isCombatCooldown": {
                    "returnType": "boolean",
                    "args": []
                },
                "isPlayerControlBlocked": {
                    "returnType": "boolean",
                    "args": []
                },
                "init": {
                    "returnType": "GameModel",
                    "args": []
                }
            },
            "parents": [
                "ig.GameAddon",
                "sc.Model"
            ]
        }
    },
    "game.feature.model.plug-in": {},
    "game.feature.msg.entities.event-trigger": {
        "sc.Cutscene": {
            "fields": {},
            "functions": {
                "startCutscene": {
                    "returnType": "ig.EventCall",
                    "args": [
                        {
                            "name": "event",
                            "type": "ig.Event",
                            "isOptional": false
                        },
                        {
                            "name": "input",
                            "type": "unknown",
                            "isOptional": false
                        },
                        {
                            "name": "callEntity",
                            "type": "ig.Entity",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": []
        },
        "sc": {
            "fields": {
                "Cutscene": {
                    "type": "Cutscene"
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ENTITY.EventTrigger.Settings": {
            "fields": {
                "eventType": {
                    "type": "keyof typeof ig.EVENT_TYPE",
                    "isOptional": true
                },
                "startCondition": {
                    "type": "string",
                    "isOptional": true
                },
                "endCondition": {
                    "type": "string",
                    "isOptional": true
                },
                "triggerType": {
                    "type": "keyof typeof ig.EVENT_TRIGGER_TYPE",
                    "isOptional": true
                },
                "loadCondition": {
                    "type": "string",
                    "isOptional": true
                },
                "event": {
                    "type": "any[]",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": [
                "ig.Entity.Settings"
            ]
        },
        "ig.ENTITY.EventTrigger": {
            "fields": {
                "eventType": {
                    "type": "ig.EVENT_TYPE",
                    "isOptional": false
                },
                "startCondition": {
                    "type": "ig.VarCondition",
                    "isOptional": false
                },
                "endCondition": {
                    "type": "ig.VarCondition",
                    "isOptional": false
                },
                "event": {
                    "type": "ig.Event",
                    "isOptional": false
                },
                "eventCall": {
                    "type": "Nullable<ig.EventCall>",
                    "isOptional": false
                },
                "triggerVar": {
                    "type": "string",
                    "isOptional": false
                },
                "_wm": {
                    "type": "ig.Config",
                    "isOptional": false
                }
            },
            "functions": {
                "varsChanged": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "EventTrigger",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "ig.ENTITY.EventTrigger.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Entity"
            ]
        },
        "ig.ENTITY": {
            "fields": {
                "EventTrigger": {
                    "type": "EventTriggerConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.msg.gui.message-board": {},
    "game.feature.msg.gui.message-box": {
        "sc.MsgBoxGui": {
            "fields": {
                "text": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "box": {
                    "type": "sc.ArrowBoxGui",
                    "isOptional": false
                },
                "personEntry": {
                    "type": "ig.MessageOverlayGui.Entry",
                    "isOptional": false
                }
            },
            "functions": {
                "setPointerDown": {
                    "returnType": "void",
                    "args": []
                },
                "isFinished": {
                    "returnType": "boolean",
                    "args": []
                },
                "skip": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "MsgBoxGui",
                    "args": [
                        {
                            "name": "maxWidth",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "pointerType",
                            "type": "sc.ArrowBoxGui.POINTER",
                            "isOptional": false
                        },
                        {
                            "name": "text",
                            "type": "ig.LangLabel",
                            "isOptional": false
                        },
                        {
                            "name": "speed",
                            "type": "ig.TextBlock.SPEED",
                            "isOptional": false
                        },
                        {
                            "name": "personEntry",
                            "type": "ig.MessageOverlayGui.Entry",
                            "isOptional": false
                        },
                        {
                            "name": "beepSound",
                            "type": "Nullable<ig.Sound>",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc": {
            "fields": {
                "MsgBoxGui": {
                    "type": "MsgBoxGuiConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.msg.gui.message-overlay": {
        "ig.MessageOverlayGui$Entry": {
            "fields": {
                "name": {
                    "type": "string",
                    "isOptional": false
                },
                "isEntry": {
                    "type": "boolean",
                    "isOptional": false
                },
                "lookRight": {
                    "type": "boolean",
                    "isOptional": false
                },
                "order": {
                    "type": "number",
                    "isOptional": false
                },
                "beepSound": {
                    "type": "ig.Sound",
                    "isOptional": false
                },
                "displayName": {
                    "type": "ig.MessageOverlayGui.DisplayName",
                    "isOptional": false
                }
            },
            "functions": {
                "addMessage": {
                    "returnType": "sc.MsgBoxGui",
                    "args": [
                        {
                            "name": "maxWidth",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "text",
                            "type": "ig.LangLabel",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "MessageOverlayGui$Entry",
                    "args": [
                        {
                            "name": "area",
                            "type": "ig.MessageAreaGui",
                            "isOptional": false
                        },
                        {
                            "name": "name",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "lookRight",
                            "type": "boolean",
                            "isOptional": false
                        },
                        {
                            "name": "order",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "displayName",
                            "type": "ig.MessageOverlayGui.DisplayName",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "ig.MessageOverlayGui$DisplayName": {
            "fields": {
                "text": {
                    "type": "sc.TextGui",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "MessageOverlayGui$DisplayName",
                    "args": [
                        {
                            "name": "test",
                            "type": "sc.TextLike",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "ig.MessageOverlayGui": {
            "fields": {
                "messageArea": {
                    "type": "ig.MessageAreaGui",
                    "isOptional": false
                },
                "Entry": {
                    "type": "MessageOverlayGui$EntryConstructor",
                    "isOptional": false
                },
                "DisplayName": {
                    "type": "MessageOverlayGui$DisplayNameConstructor",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "MessageOverlayGui",
                    "args": []
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "ig": {
            "fields": {
                "MessageOverlayGui": {
                    "type": "MessageOverlayGuiConstructor"
                },
                "MessageAreaGui": {
                    "type": "MessageAreaGuiConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.MessageAreaGui": {
            "fields": {
                "clickToContinue": {
                    "type": "boolean",
                    "isOptional": false
                },
                "messages": {
                    "type": "sc.MsgBoxGui[]",
                    "isOptional": false
                }
            },
            "functions": {
                "onTextFinished": {
                    "returnType": "void",
                    "args": []
                },
                "clearMessages": {
                    "returnType": "void",
                    "args": []
                },
                "skip": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "MessageAreaGui",
                    "args": []
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        }
    },
    "game.feature.msg.gui.msg-skip-hud": {
        "sc.MsgSkipGui": {
            "fields": {
                "text": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "box": {
                    "type": "sc.SmallBlackBoxGui",
                    "isOptional": false
                },
                "personEntry": {
                    "type": "unknown",
                    "isOptional": false
                },
                "timer": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "hide": {
                    "returnType": "void",
                    "args": []
                },
                "show": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "MsgSkipGui",
                    "args": []
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc": {
            "fields": {
                "MsgSkipGui": {
                    "type": "MsgSkipGuiConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.msg.gui.side-message-hud": {
        "sc.SideMessageHudGui": {
            "fields": {
                "sideLabel": {
                    "type": "sc.SideMessageLabelGui",
                    "isOptional": false
                },
                "pauseMaxY": {
                    "type": "number",
                    "isOptional": false
                },
                "pauseBoxes": {
                    "type": "sc.SideMessageBoxGui[]",
                    "isOptional": false
                },
                "visibleBoxes": {
                    "type": "sc.SideMessageBoxGui[]",
                    "isOptional": false
                },
                "timer": {
                    "type": "number",
                    "isOptional": false
                },
                "pauseMode": {
                    "type": "boolean",
                    "isOptional": false
                },
                "messageIndex": {
                    "type": "number",
                    "isOptional": false
                },
                "quickPop": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "doMessageStep": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "quickPop",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "popMessage": {
                    "returnType": "void",
                    "args": []
                },
                "showNextSideMessage": {
                    "returnType": "void",
                    "args": []
                },
                "onMessageFinish": {
                    "returnType": "void",
                    "args": []
                },
                "onSkipInteract": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "type",
                            "type": "sc.SKIP_INTERACT_MSG",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "SideMessageHudGui",
                    "args": []
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc": {
            "fields": {
                "SideMessageHudGui": {
                    "type": "SideMessageHudGuiConstructor"
                },
                "SideMessageBoxGui": {
                    "type": "SideMessageBoxGuiConstructor"
                },
                "SideMessageFaceGui": {
                    "type": "SideMessageFaceGuiConstructor"
                },
                "SideMessageLabelGui": {
                    "type": "SideMessageLabelGuiConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.SideMessageBoxGui": {
            "fields": {
                "text": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "face": {
                    "type": "sc.SideMessageFaceGui",
                    "isOptional": false
                },
                "beepSound": {
                    "type": "ig.Sound",
                    "isOptional": false
                }
            },
            "functions": {
                "setContent": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "character",
                            "type": "sc.CharacterExpression",
                            "isOptional": false
                        },
                        {
                            "name": "text",
                            "type": "sc.TextLike",
                            "isOptional": false
                        },
                        {
                            "name": "skip",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "SideMessageBoxGui",
                    "args": []
                }
            },
            "parents": [
                "sc.SlickBoxRawGui"
            ]
        },
        "sc.SideMessageFaceGui": {
            "fields": {
                "charExpression": {
                    "type": "sc.CharacterExpression",
                    "isOptional": false
                },
                "timer": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "setFace": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "expression",
                            "type": "sc.CharacterExpression",
                            "isOptional": false
                        },
                        {
                            "name": "height",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "SideMessageFaceGui",
                    "args": []
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc.SideMessageLabelGui": {
            "fields": {
                "iconText": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "currentIconDevice": {
                    "type": "ig.INPUT_DEVICES",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "SideMessageLabelGui",
                    "args": []
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        }
    },
    "game.feature.msg.plug-in": {},
    "game.feature.new-game.plug-in": {},
    "game.feature.npc.entities.npc-entity": {
        "ig.ENTITY.NPC.Settings": {
            "fields": {},
            "functions": {},
            "parents": [
                "ig.Entity.Settings"
            ]
        },
        "ig.ENTITY.NPC.InteractIcons": {
            "fields": {
                "normal": {
                    "type": "sc.MapInteractIcon",
                    "isOptional": false
                },
                "shop": {
                    "type": "sc.MapInteractIcon",
                    "isOptional": false
                },
                "quest": {
                    "type": "sc.MapInteractIcon",
                    "isOptional": false
                },
                "arena": {
                    "type": "sc.MapInteractIcon",
                    "isOptional": false
                },
                "newMsg": {
                    "type": "sc.MapInteractIcon",
                    "isOptional": false
                },
                "trade": {
                    "type": "sc.MapInteractIcon",
                    "isOptional": false
                },
                "xeno": {
                    "type": "sc.MapInteractIcon",
                    "isOptional": false
                },
                "xenoEvent": {
                    "type": "sc.MapInteractIcon",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ENTITY.NPC": {
            "fields": {
                "characterName": {
                    "type": "sc.Character",
                    "isOptional": false
                },
                "character": {
                    "type": "sc.Character",
                    "isOptional": false
                },
                "npcStates": {
                    "type": "sc.NpcState[]",
                    "isOptional": false
                },
                "npcStatesData": {
                    "type": "sc.NpcState.Settings[]",
                    "isOptional": false
                },
                "activeStateIdx": {
                    "type": "number",
                    "isOptional": false
                },
                "configs": {
                    "type": "Record<string, ig.ActorConfig>",
                    "isOptional": false
                },
                "hidden": {
                    "type": "boolean",
                    "isOptional": false
                },
                "interactEntry": {
                    "type": "sc.MapInteractEntry",
                    "isOptional": false
                },
                "eventBlocked": {
                    "type": "boolean",
                    "isOptional": false
                },
                "deferredReset": {
                    "type": "boolean",
                    "isOptional": false
                },
                "npcEffects": {
                    "type": "ig.EffectSheet",
                    "isOptional": false
                },
                "interactIcons": {
                    "type": "ig.ENTITY.NPC.InteractIcons",
                    "isOptional": false
                },
                "lookAtAction": {
                    "type": "ig.Action",
                    "isOptional": false
                },
                "eventCal": {
                    "type": "ig.EventCall",
                    "isOptional": false
                },
                "doPostEventAction": {
                    "type": "boolean",
                    "isOptional": false
                },
                "xenoDialog": {
                    "type": "ig.ENTITY.XenoDialog",
                    "isOptional": false
                },
                "xenoDialogGui": {
                    "type": "sc.XenoDialogIcon",
                    "isOptional": false
                },
                "permaEffect": {
                    "type": "ig.ENTITY.Effect",
                    "isOptional": false
                },
                "displayName": {
                    "type": "unknown",
                    "isOptional": true
                },
                "displayTrigger": {
                    "type": "unknown",
                    "isOptional": true
                },
                "displayNameRandom": {
                    "type": "string",
                    "isOptional": true
                },
                "respawn": {
                    "type": "{ pos: Vec3 }",
                    "isOptional": false
                },
                "hideHandle": {
                    "type": "unknown",
                    "isOptional": true
                },
                "hideManager": {
                    "type": "ig.EntityHideManager",
                    "isOptional": false
                }
            },
            "functions": {
                "updateNpcState": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "init",
                            "type": "boolean",
                            "isOptional": false
                        },
                        {
                            "name": "force",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "setMapInteractIcon": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "npcState",
                            "type": "sc.NpcState",
                            "isOptional": false
                        }
                    ]
                },
                "onInteraction": {
                    "returnType": "boolean | undefined",
                    "args": []
                },
                "init": {
                    "returnType": "NPC",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "ig.ENTITY.NPC.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "sc.ActorEntity"
            ]
        },
        "ig.ENTITY.NPC.respawn": {
            "fields": {
                "pos": {
                    "type": "Vec3",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ENTITY": {
            "fields": {
                "NPC": {
                    "type": "NPCConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.NpcState": {
            "fields": {
                "npcEventType": {
                    "type": "sc.NPC_EVENT_TYPE",
                    "isOptional": false
                },
                "npcEventObj": {
                    "type": "ig.Event",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "NpcState",
                    "args": [
                        {
                            "name": "settings",
                            "type": "sc.NpcState.Settings",
                            "isOptional": false
                        },
                        {
                            "name": "entity",
                            "type": "ig.ENTITY.NPC",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "sc": {
            "fields": {
                "NpcState": {
                    "type": "NpcStateConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.npc.entities.npc-runner-entity": {
        "sc.NPCRunnerEntity.Settings": {
            "fields": {
                "character": {
                    "type": "sc.Character",
                    "isOptional": false
                },
                "animSheet": {
                    "type": "ig.AnimationSheet",
                    "isOptional": false
                },
                "speed": {
                    "type": "number",
                    "isOptional": false
                },
                "enter": {
                    "type": "sc.NpcRunnerSpawner.RunnerDestinationEntry",
                    "isOptional": false
                },
                "exit": {
                    "type": "sc.NpcRunnerSpawner.RunnerDestinationEntry",
                    "isOptional": false
                },
                "waypoints": {
                    "type": "ig.Entity[]",
                    "isOptional": false
                },
                "partyIdx": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": [
                "ig.Entity.Settings"
            ]
        },
        "sc.NPCRunnerEntity": {
            "fields": {
                "npcEffects": {
                    "type": "ig.EffectSheet",
                    "isOptional": false
                },
                "characterName": {
                    "type": "null",
                    "isOptional": false
                },
                "character": {
                    "type": "sc.Character",
                    "isOptional": false
                },
                "configs": {
                    "type": "sc.Character.Data['configs']",
                    "isOptional": false
                },
                "pushTimer": {
                    "type": "number",
                    "isOptional": false
                },
                "effects": {
                    "type": "{ water: ig.EffectSheet }",
                    "isOptional": false
                }
            },
            "functions": {
                "initAction": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "enter",
                            "type": "sc.NpcRunnerSpawner.RunnerDestinationEntry",
                            "isOptional": false
                        },
                        {
                            "name": "exit",
                            "type": "sc.NpcRunnerSpawner.RunnerDestinationEntry",
                            "isOptional": false
                        },
                        {
                            "name": "waypoints",
                            "type": "ig.Entity[]",
                            "isOptional": false
                        },
                        {
                            "name": "partyIdx",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "getDestinationEntryAndPos": {
                    "returnType": "sc.NpcRunnerSpawner.RunnerDestinationEntry",
                    "args": [
                        {
                            "name": "entry",
                            "type": "sc.NpcRunnerSpawner.RunnerDestinationEntry",
                            "isOptional": false
                        },
                        {
                            "name": "destType",
                            "type": "sc.NPC_RUNNER_DEST_TYPE",
                            "isOptional": false
                        },
                        {
                            "name": "partyIdx",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "dest",
                            "type": "Vec3",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "NPCRunnerEntity",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "sc.NPCRunnerEntity.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "sc.ActorEntity"
            ]
        },
        "sc.NPCRunnerEntity.effects": {
            "fields": {
                "water": {
                    "type": "ig.EffectSheet",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc": {
            "fields": {
                "NPCRunnerEntity": {
                    "type": "NPCRunnerEntityConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.npc.entities.npc-waypoint": {
        "sc.WPConnection.Connection": {
            "fields": {
                "global": {
                    "type": "boolean",
                    "isOptional": false
                },
                "name": {
                    "type": "string",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.WPConnection.SearchData": {
            "fields": {
                "idx": {
                    "type": "number",
                    "isOptional": false
                },
                "cameFrom": {
                    "type": "Nullable<ig.Entity>",
                    "isOptional": false
                },
                "gScore": {
                    "type": "number",
                    "isOptional": false
                },
                "fScore": {
                    "type": "number",
                    "isOptional": false
                },
                "closed": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.WPConnection": {
            "fields": {
                "owner": {
                    "type": "ig.Entity",
                    "isOptional": false
                },
                "connections": {
                    "type": "sc.WPConnection.Connection[]",
                    "isOptional": false
                },
                "initialized": {
                    "type": "boolean",
                    "isOptional": false
                },
                "connectedWPs": {
                    "type": "sc.WPConnection[]",
                    "isOptional": false
                },
                "middle": {
                    "type": "boolean",
                    "isOptional": false
                },
                "searchData": {
                    "type": "sc.WPConnection.SearchData",
                    "isOptional": false
                }
            },
            "functions": {
                "_initWaypoints": {
                    "returnType": "void",
                    "args": []
                },
                "addWayPoint": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "wp",
                            "type": "sc.WPConnection",
                            "isOptional": false
                        }
                    ]
                },
                "getDistance": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "wp",
                            "type": "sc.WPConnection",
                            "isOptional": false
                        }
                    ]
                },
                "getWayPointConnections": {
                    "returnType": "sc.WPConnection[]",
                    "args": []
                },
                "getSearchData": {
                    "returnType": "sc.WPConnection.SearchData",
                    "args": [
                        {
                            "name": "ignoreIdx",
                            "type": "number",
                            "isOptional": true
                        }
                    ]
                },
                "init": {
                    "returnType": "WPConnection",
                    "args": [
                        {
                            "name": "owner",
                            "type": "ig.Entity",
                            "isOptional": false
                        },
                        {
                            "name": "connections",
                            "type": "sc.WPConnection.Connection[]",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "sc": {
            "fields": {
                "WPConnection": {
                    "type": "WPConnectionConstructor"
                },
                "NpcWayPointSearcher": {
                    "type": "NpcWayPointSearcher"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.NpcWayPointSearcher": {
            "fields": {
                "searchIndex": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "resetIndex": {
                    "returnType": "void",
                    "args": []
                },
                "searchConnection": {
                    "returnType": "Nullable<ig.Entity[]>",
                    "args": [
                        {
                            "name": "entrance",
                            "type": "sc.WPConnection",
                            "isOptional": false
                        },
                        {
                            "name": "exit",
                            "type": "sc.WPConnection",
                            "isOptional": false
                        }
                    ]
                },
                "_reconstructPath": {
                    "returnType": "ig.Entity[]",
                    "args": [
                        {
                            "name": "entrance",
                            "type": "sc.WPConnection",
                            "isOptional": false
                        },
                        {
                            "name": "exit",
                            "type": "sc.WPConnection",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": []
        }
    },
    "game.feature.npc.gui.npc-display-gui": {},
    "game.feature.npc.npc-runners": {
        "sc.NpcRunnerGroup": {
            "fields": {
                "characters": {
                    "type": "{ name: string; prob: number }[]",
                    "isOptional": false
                },
                "name": {
                    "type": "string",
                    "isOptional": false
                },
                "prob": {
                    "type": "number",
                    "isOptional": false
                },
                "npcsPerMinute": {
                    "type": "number",
                    "isOptional": false
                },
                "maxParty": {
                    "type": "number",
                    "isOptional": false
                },
                "runProb": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.NPC_RUNNER_GROUP": {
            "fields": {
                "CROSSCENTRAL": {
                    "type": "sc.NpcRunnerGroup",
                    "isOptional": false
                },
                "RHOMBUS_SQUARE": {
                    "type": "sc.NpcRunnerGroup",
                    "isOptional": false
                },
                "CROWDED": {
                    "type": "sc.NpcRunnerGroup",
                    "isOptional": false
                },
                "LIVELY": {
                    "type": "sc.NpcRunnerGroup",
                    "isOptional": false
                },
                "REGULAR": {
                    "type": "sc.NpcRunnerGroup",
                    "isOptional": false
                },
                "FEW": {
                    "type": "sc.NpcRunnerGroup",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc": {
            "fields": {
                "NPC_RUNNER_GROUP": {
                    "type": "NPC_RUNNER_GROUP"
                },
                "NpcRunnerSpawner": {
                    "type": "NpcRunnerSpawnerConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.NpcRunnerSpawner.Character": {
            "fields": {
                "character": {
                    "type": "sc.Character",
                    "isOptional": false
                },
                "animSheet": {
                    "type": "Nullable<ig.AnimationSheet>",
                    "isOptional": false
                },
                "prob": {
                    "type": "number",
                    "isOptional": false
                },
                "maxSpeed": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.NpcRunnerSpawner.GroupData": {
            "fields": {
                "characters": {
                    "type": "sc.NpcRunnerSpawner.Character[]",
                    "isOptional": false
                },
                "fullProb": {
                    "type": "number",
                    "isOptional": false
                },
                "maxTimer": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.NpcRunnerSpawner.RunnerDestinationEntry": {
            "fields": {
                "entity": {
                    "type": "ig.Entity",
                    "isOptional": false
                },
                "dir": {
                    "type": "keyof typeof ig.ActorEntity.FACE4",
                    "isOptional": false
                },
                "type": {
                    "type": "sc.NPC_RUNNER_DEST_TYPE",
                    "isOptional": false
                },
                "posType": {
                    "type": "sc.NPC_RUNNER_DEST_POS_TYPE",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.NpcRunnerSpawner.RunnerDestination": {
            "fields": {
                "entries": {
                    "type": "sc.NpcRunnerSpawner.RunnerDestinationEntry[]",
                    "isOptional": false
                },
                "enterProb": {
                    "type": "number",
                    "isOptional": false
                },
                "exitProb": {
                    "type": "number",
                    "isOptional": false
                },
                "map": {
                    "type": "string",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.NpcRunnerSpawner.WPConnectEntity": {
            "fields": {},
            "functions": {
                "getWPConnect": {
                    "returnType": "Nullable<sc.WPConnection>",
                    "args": []
                }
            },
            "parents": [
                "ig.Entity"
            ]
        },
        "sc.NpcRunnerSpawner": {
            "fields": {
                "mapGroup": {
                    "type": "Nullable<sc.NpcRunnerGroup>",
                    "isOptional": false
                },
                "currentGroup": {
                    "type": "Nullable<sc.NpcRunnerGroup>",
                    "isOptional": false
                },
                "groupData": {
                    "type": "Nullable<sc.NpcRunnerSpawner.GroupData>",
                    "isOptional": false
                },
                "lastChars": {
                    "type": "sc.NpcRunnerSpawner.Character[]",
                    "isOptional": false
                },
                "active": {
                    "type": "boolean",
                    "isOptional": false
                },
                "destinations": {
                    "type": "{\n        enter: [];\n        enterFullProb: number;\n        exit: [];\n        exitFullProb: number;\n      }",
                    "isOptional": false
                },
                "timer": {
                    "type": "number",
                    "isOptional": false
                },
                "spawnTeamCount": {
                    "type": "number",
                    "isOptional": false
                },
                "currentPartySize": {
                    "type": "number",
                    "isOptional": false
                },
                "spawnEntrance": {
                    "type": "Nullable<sc.NpcRunnerSpawner.RunnerDestinationEntry>",
                    "isOptional": false
                },
                "waypoints": {
                    "type": "ig.Entity[]",
                    "isOptional": false
                },
                "spawnExit": {
                    "type": "Nullable<sc.NpcRunnerSpawner.RunnerDestinationEntry>",
                    "isOptional": false
                },
                "spawnSpeed": {
                    "type": "number",
                    "isOptional": false
                },
                "preUpdateOrder": {
                    "type": "number",
                    "isOptional": false
                },
                "levelLoadStartOrder": {
                    "type": "number",
                    "isOptional": false
                },
                "levelLoadedOrder": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "cancelSpawning": {
                    "returnType": "void",
                    "args": []
                },
                "setGroup": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "group",
                            "type": "sc.NpcRunnerGroup",
                            "isOptional": false
                        }
                    ]
                },
                "onLoadableComplete": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "success",
                            "type": "boolean",
                            "isOptional": false
                        },
                        {
                            "name": "character",
                            "type": "sc.Character",
                            "isOptional": false
                        }
                    ]
                },
                "hasGroup": {
                    "returnType": "boolean",
                    "args": []
                },
                "resetToMapGroup": {
                    "returnType": "void",
                    "args": []
                },
                "clearGroup": {
                    "returnType": "void",
                    "args": []
                },
                "initWayPoints": {
                    "returnType": "void",
                    "args": []
                },
                "searchDestinations": {
                    "returnType": "void",
                    "args": []
                },
                "spawnNpcGroup": {
                    "returnType": "void",
                    "args": []
                },
                "spawnNpcRunner": {
                    "returnType": "void",
                    "args": []
                },
                "getRandomDestination": {
                    "returnType": "sc.NpcRunnerSpawner.RunnerDestinationEntry",
                    "args": [
                        {
                            "name": "toExit",
                            "type": "boolean",
                            "isOptional": false
                        },
                        {
                            "name": "ignore",
                            "type": "Nullable<sc.NpcRunnerSpawner.RunnerDestination>",
                            "isOptional": true
                        }
                    ]
                },
                "getWayPoints": {
                    "returnType": "Nullable<ig.Entity[]>",
                    "args": [
                        {
                            "name": "entrance",
                            "type": "sc.NpcRunnerSpawner.WPConnectEntity",
                            "isOptional": false
                        },
                        {
                            "name": "exit",
                            "type": "sc.NpcRunnerSpawner.WPConnectEntity",
                            "isOptional": false
                        }
                    ]
                },
                "getRandomCharacter": {
                    "returnType": "sc.NpcRunnerSpawner.Character",
                    "args": []
                },
                "onPreUpdate": {
                    "returnType": "void",
                    "args": []
                },
                "onLevelLoadStart": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "data",
                            "type": "sc.MapModel.Map",
                            "isOptional": false
                        }
                    ]
                },
                "onLevelLoaded": {
                    "returnType": "void",
                    "args": []
                },
                "onReset": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "NpcRunnerSpawner",
                    "args": []
                }
            },
            "parents": [
                "ig.GameAddon"
            ]
        },
        "sc.NpcRunnerSpawner.destinations": {
            "fields": {
                "enter": {
                    "type": "[]",
                    "isOptional": false
                },
                "enterFullProb": {
                    "type": "number",
                    "isOptional": false
                },
                "exit": {
                    "type": "[]",
                    "isOptional": false
                },
                "exitFullProb": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.npc.plug-in": {},
    "game.feature.party.party-member-model": {
        "sc.PartyMemberModel.Healing": {
            "fields": {
                "sandwich": {
                    "type": "number[]",
                    "isOptional": false
                },
                "cooldown": {
                    "type": "number",
                    "isOptional": false
                },
                "needRestock": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.PartyMemberModel.Data": {
            "fields": {
                "level": {
                    "type": "number",
                    "isOptional": false
                },
                "equipLevel": {
                    "type": "number",
                    "isOptional": false
                },
                "exp": {
                    "type": "number",
                    "isOptional": false
                },
                "spLevel": {
                    "type": "number",
                    "isOptional": false
                },
                "allElements": {
                    "type": "boolean",
                    "isOptional": false
                },
                "temporary": {
                    "type": "boolean",
                    "isOptional": false
                },
                "noDie": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.PartyMemberModel": {
            "fields": {
                "config": {
                    "type": "sc.PlayerConfig",
                    "isOptional": false
                },
                "animSheet": {
                    "type": "ig.AnimationSheet",
                    "isOptional": false
                },
                "params": {
                    "type": "sc.CombatParams",
                    "isOptional": false
                },
                "elementConfigs": {
                    "type": "Record<sc.ELEMENT, sc.PlayerSubConfig>",
                    "isOptional": false
                },
                "healing": {
                    "type": "PartyMemberModel.Healing",
                    "isOptional": false
                },
                "currentElementMode": {
                    "type": "sc.ELEMENT",
                    "isOptional": false
                }
            },
            "functions": {
                "getHeadIdx": {
                    "returnType": "number",
                    "args": []
                },
                "updateStats": {
                    "returnType": "void",
                    "args": []
                },
                "revive": {
                    "returnType": "void",
                    "args": []
                },
                "setTemporary": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "a_",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "setNoDie": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "a_",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "update": {
                    "returnType": "void",
                    "args": []
                },
                "reset": {
                    "returnType": "void",
                    "args": []
                },
                "setSpLevel": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "level",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "PartyMemberModel",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class",
                "sc.Model"
            ]
        },
        "sc": {
            "fields": {
                "PartyMemberModel": {
                    "type": "PartyMemberModelConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.party.plug-in": {},
    "game.feature.player.entities.crosshair": {
        "ig.ENTITY.Crosshair.Settings": {
            "fields": {
                "thrower": {
                    "type": "ig.ENTITY.Player",
                    "isOptional": false
                },
                "controller": {
                    "type": "sc.PlayerCrossHairController",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": [
                "ig.Entity.Settings"
            ]
        },
        "ig.ENTITY.Crosshair": {
            "fields": {
                "offset": {
                    "type": "Vec3",
                    "isOptional": false
                },
                "tileSheet": {
                    "type": "ig.TileSheet",
                    "isOptional": false
                },
                "thrower": {
                    "type": "ig.ENTITY.Player",
                    "isOptional": false
                },
                "controller": {
                    "type": "sc.PlayerCrossHairController",
                    "isOptional": false
                },
                "rangeStart": {
                    "type": "number",
                    "isOptional": false
                },
                "aimTime": {
                    "type": "number",
                    "isOptional": false
                },
                "maxAngleMove": {
                    "type": "number",
                    "isOptional": false
                },
                "chargeActive": {
                    "type": "boolean",
                    "isOptional": false
                },
                "rangeCurrent": {
                    "type": "number",
                    "isOptional": false
                },
                "currentCharge": {
                    "type": "number",
                    "isOptional": false
                },
                "speedFactor": {
                    "type": "number",
                    "isOptional": false
                },
                "baseSpeedFactor": {
                    "type": "number",
                    "isOptional": false
                },
                "doBlink": {
                    "type": "boolean",
                    "isOptional": false
                },
                "gamepadMode": {
                    "type": "boolean",
                    "isOptional": false
                },
                "active": {
                    "type": "boolean",
                    "isOptional": false
                },
                "special": {
                    "type": "boolean",
                    "isOptional": false
                },
                "circleGlow": {
                    "type": "number",
                    "isOptional": false
                },
                "_lastDir": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "_aimDir": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "_dots": {
                    "type": "ig.ENTITY.CrosshairDot[]",
                    "isOptional": false
                },
                "_currentDot": {
                    "type": "number",
                    "isOptional": false
                },
                "sounds": {
                    "type": "{ charged: ig.Sound }",
                    "isOptional": false
                },
                "soundTimer": {
                    "type": "number",
                    "isOptional": false
                },
                "dirHelperDrawInfo": {
                    "type": "Vec2 & { tile: number; flipX: number; flipY: number }[]",
                    "isOptional": false
                },
                "tile": {
                    "type": "number",
                    "isOptional": false
                },
                "flipX": {
                    "type": "number",
                    "isOptional": false
                },
                "flipY": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "getDir": {
                    "returnType": "Vec2",
                    "args": [
                        {
                            "name": "res",
                            "type": "Vec2",
                            "isOptional": false
                        }
                    ]
                },
                "getThrowDir": {
                    "returnType": "Vec2",
                    "args": [
                        {
                            "name": "res",
                            "type": "Vec2",
                            "isOptional": false
                        }
                    ]
                },
                "isThrowCharged": {
                    "returnType": "boolean",
                    "args": []
                },
                "setThrown": {
                    "returnType": "number",
                    "args": []
                },
                "setBaseSpeedFactor": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "baseSpeedFactor",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "setSpeedFactor": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "speedFactor",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "setCircleGlow": {
                    "returnType": "void",
                    "args": []
                },
                "reducePrecision": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "factor",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "setSpecial": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "special",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "setActive": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "active",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "deferredUpdate": {
                    "returnType": "void",
                    "args": []
                },
                "_updateCrossHair": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "pos",
                            "type": "Vec3",
                            "isOptional": false
                        },
                        {
                            "name": "dir",
                            "type": "Vec2",
                            "isOptional": false
                        },
                        {
                            "name": "size",
                            "type": "Vec3",
                            "isOptional": false
                        },
                        {
                            "name": "alpha",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "tile",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "bouncePoints",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "maxPoint",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "maxBounce",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "s_",
                            "type": "ig.Entity",
                            "isOptional": true
                        }
                    ]
                },
                "_getThrowerPos": {
                    "returnType": "Vec2",
                    "args": [
                        {
                            "name": "res",
                            "type": "Vec2",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "Crosshair",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "ig.ENTITY.Crosshair.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Entity"
            ]
        },
        "ig.ENTITY.Crosshair.sounds": {
            "fields": {
                "charged": {
                    "type": "ig.Sound",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ENTITY": {
            "fields": {
                "Crosshair": {
                    "type": "CrosshairConstructor"
                },
                "CrosshairDot": {
                    "type": "CrosshairDotConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ENTITY.CrosshairDot.Settings": {
            "fields": {},
            "functions": {},
            "parents": [
                "ig.Entity.Settings"
            ]
        },
        "ig.ENTITY.CrosshairDot": {
            "fields": {},
            "functions": {
                "init": {
                    "returnType": "CrosshairDot",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "ig.ENTITY.CrosshairDot.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.AnimatedEntity"
            ]
        },
        "sc.PlayerCrossHairController": {
            "fields": {
                "gamepadMode": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "isAiming": {
                    "returnType": "boolean",
                    "args": []
                },
                "getAimingDistance": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "currentDir",
                            "type": "Vec2",
                            "isOptional": false
                        },
                        {
                            "name": "offsetDir",
                            "type": "Vec2",
                            "isOptional": false
                        }
                    ]
                },
                "onActiveChange": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "crosshair",
                            "type": "ig.ENTITY.Crosshair",
                            "isOptional": false
                        }
                    ]
                },
                "updatePos": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "crosshair",
                            "type": "ig.ENTITY.Crosshair",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "PlayerCrossHairController",
                    "args": []
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "sc": {
            "fields": {
                "PlayerCrossHairController": {
                    "type": "PlayerCrossHairControllerConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.player.entities.player-pet": {
        "sc.PlayerPetEntity.Settings": {
            "fields": {
                "petSkin": {
                    "type": "PetSkin",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.PlayerPetEntity": {
            "fields": {
                "npcEffects": {
                    "type": "ig.EffectSheet",
                    "isOptional": false
                },
                "petSkin": {
                    "type": "sc.PlayerPetEntity.PetSkin",
                    "isOptional": false
                },
                "configs": {
                    "type": "unknown",
                    "isOptional": false
                },
                "pushTimer": {
                    "type": "number",
                    "isOptional": false
                },
                "posOffset": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "state": {
                    "type": "number",
                    "isOptional": false
                },
                "respawnPos": {
                    "type": "Vec3",
                    "isOptional": false
                },
                "idleTimer": {
                    "type": "number",
                    "isOptional": false
                },
                "idleSpecials": {
                    "type": "number",
                    "isOptional": false
                },
                "tempHidden": {
                    "type": "boolean",
                    "isOptional": false
                },
                "effects": {
                    "type": "{ water: ig.EffectSheet }",
                    "isOptional": false
                }
            },
            "functions": {
                "resetIdleTimer": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "additional",
                            "type": "number",
                            "isOptional": true
                        }
                    ]
                },
                "shouldTempHide": {
                    "returnType": "boolean",
                    "args": []
                },
                "resetStartPos": {
                    "returnType": "void",
                    "args": []
                },
                "resetPos": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "transition",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "assignRespawnPos",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "onNavigationFailed": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "retryAttempt",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "remove": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "PlayerPetEntity",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "sc.PlayerPetEntity.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "sc.ActorEntity"
            ]
        },
        "sc.PlayerPetEntity.effects": {
            "fields": {
                "water": {
                    "type": "ig.EffectSheet",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc": {
            "fields": {
                "PlayerPetEntity": {
                    "type": "PlayerPetEntityConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.player.item-consumption": {
        "sc.ItemConsumption": {
            "fields": {
                "sounds": {
                    "type": "Record<'eat', ig.Sound>",
                    "isOptional": false
                }
            },
            "functions": {
                "runItemUseAction": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "player",
                            "type": "ig.ENTITY.Player",
                            "isOptional": false
                        },
                        {
                            "name": "model",
                            "type": "sc.PlayerModel",
                            "isOptional": false
                        },
                        {
                            "name": "itemId",
                            "type": "sc.ItemID",
                            "isOptional": false
                        }
                    ]
                },
                "activateItemEffect": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "player",
                            "type": "ig.ENTITY.Player",
                            "isOptional": false
                        },
                        {
                            "name": "model",
                            "type": "sc.PlayerModel",
                            "isOptional": false
                        },
                        {
                            "name": "itemId",
                            "type": "sc.ItemID",
                            "isOptional": false
                        }
                    ]
                },
                "runHealChange": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "settings",
                            "type": "sc.StatChangeSettings",
                            "isOptional": false
                        }
                    ]
                },
                "runStatChange": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "stats",
                            "type": "sc.StatChange.StatName[]",
                            "isOptional": false
                        },
                        {
                            "name": "duration",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "itemId",
                            "type": "sc.ItemID",
                            "isOptional": false
                        }
                    ]
                },
                "getAction": {
                    "returnType": "ig.Action",
                    "args": [
                        {
                            "name": "itemId",
                            "type": "sc.ItemID",
                            "isOptional": false
                        }
                    ]
                },
                "createAction": {
                    "returnType": "ig.Action",
                    "args": [
                        {
                            "name": "events",
                            "type": "ig.EventStepBase.Settings[]",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "ItemConsumption",
                    "args": []
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "sc": {
            "fields": {
                "ItemConsumption": {
                    "type": "ItemConsumptionConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.player.modifiers": {
        "sc.Modifier": {
            "fields": {
                "icon": {
                    "type": "number",
                    "isOptional": false
                },
                "order": {
                    "type": "number",
                    "isOptional": false
                },
                "noPercent": {
                    "type": "boolean",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.MODIFIERS": {
            "fields": {
                "AIM_SPEED": {
                    "type": "Modifier",
                    "isOptional": false
                },
                "AIM_STABILITY": {
                    "type": "Modifier",
                    "isOptional": false
                },
                "AIMING_MOVEMENT": {
                    "type": "Modifier",
                    "isOptional": false
                },
                "KNOCKBACK": {
                    "type": "Modifier",
                    "isOptional": false
                },
                "RANGED_DMG": {
                    "type": "Modifier",
                    "isOptional": false
                },
                "MELEE_DMG": {
                    "type": "Modifier",
                    "isOptional": false
                },
                "CRITICAL_DMG": {
                    "type": "Modifier",
                    "isOptional": false
                },
                "BREAK_DMG": {
                    "type": "Modifier",
                    "isOptional": false
                },
                "SPIKE_DMG": {
                    "type": "Modifier",
                    "isOptional": false
                },
                "ASSAULT": {
                    "type": "Modifier",
                    "isOptional": false
                },
                "CROSS_COUNTER": {
                    "type": "Modifier",
                    "isOptional": false
                },
                "BERSERK": {
                    "type": "Modifier",
                    "isOptional": false
                },
                "MOMENTUM": {
                    "type": "Modifier",
                    "isOptional": false
                },
                "DASH_INVINC": {
                    "type": "Modifier",
                    "isOptional": false
                },
                "DASH_STEP": {
                    "type": "Modifier",
                    "isOptional": false
                },
                "GUARD_STRENGTH": {
                    "type": "Modifier",
                    "isOptional": false
                },
                "GUARD_SP": {
                    "type": "Modifier",
                    "isOptional": false
                },
                "GUARD_AREA": {
                    "type": "Modifier",
                    "isOptional": false
                },
                "PERFECT_GUARD_WINDOW": {
                    "type": "Modifier",
                    "isOptional": false
                },
                "PERFECT_GUARD_RESET": {
                    "type": "Modifier",
                    "isOptional": false
                },
                "STUN_THRESHOLD": {
                    "type": "Modifier",
                    "isOptional": false
                },
                "OVERHEAT_REDUCTION": {
                    "type": "Modifier",
                    "isOptional": false
                },
                "HP_REGEN": {
                    "type": "Modifier",
                    "isOptional": false
                },
                "SP_REGEN": {
                    "type": "Modifier",
                    "isOptional": false
                },
                "ITEM_GUARD": {
                    "type": "Modifier",
                    "isOptional": false
                },
                "ONCE_MORE": {
                    "type": "Modifier",
                    "isOptional": false
                },
                "XP_PLUS": {
                    "type": "Modifier",
                    "isOptional": false
                },
                "DROP_CHANCE": {
                    "type": "Modifier",
                    "isOptional": false
                },
                "MONEY_PLUS": {
                    "type": "Modifier",
                    "isOptional": false
                },
                "XP_ZERO": {
                    "type": "Modifier",
                    "isOptional": false
                },
                "RANK_PLANTS": {
                    "type": "Modifier",
                    "isOptional": false
                },
                "ITEM_BOOST": {
                    "type": "Modifier",
                    "isOptional": false
                },
                "APPETITE": {
                    "type": "Modifier",
                    "isOptional": false
                },
                "COND_HEALING": {
                    "type": "Modifier",
                    "isOptional": false
                },
                "COND_EFFECT_HEAT": {
                    "type": "Modifier",
                    "isOptional": false
                },
                "COND_EFFECT_COLD": {
                    "type": "Modifier",
                    "isOptional": false
                },
                "COND_EFFECT_SHOCK": {
                    "type": "Modifier",
                    "isOptional": false
                },
                "COND_EFFECT_WAVE": {
                    "type": "Modifier",
                    "isOptional": false
                },
                "COND_EFFECT_ALL": {
                    "type": "Modifier",
                    "isOptional": false
                },
                "COND_GUARD_HEAT": {
                    "type": "Modifier",
                    "isOptional": false
                },
                "COND_GUARD_COLD": {
                    "type": "Modifier",
                    "isOptional": false
                },
                "COND_GUARD_SHOCK": {
                    "type": "Modifier",
                    "isOptional": false
                },
                "COND_GUARD_WAVE": {
                    "type": "Modifier",
                    "isOptional": false
                },
                "SPIDER_SLOW_DOWN_GUARD": {
                    "type": "Modifier",
                    "isOptional": false
                },
                "BEGONE_ICE": {
                    "type": "Modifier",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc": {
            "fields": {
                "MODIFIERS": {
                    "type": "MODIFIERS"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.player.player-level-notifier": {
        "sc.PlayerLevelNotifier": {
            "fields": {
                "levelUpSound": {
                    "type": "ig.Sound",
                    "isOptional": false
                }
            },
            "functions": {
                "runLevelUpScene": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "player",
                            "type": "ig.ENTITY.Player",
                            "isOptional": false
                        },
                        {
                            "name": "model",
                            "type": "sc.PlayerModel",
                            "isOptional": false
                        },
                        {
                            "name": "isEventParallel",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "onLevelUpEventStart": {
                    "returnType": "void",
                    "args": []
                },
                "onLevelUpEventEnd": {
                    "returnType": "void",
                    "args": []
                },
                "getLevelUpEvent": {
                    "returnType": "ig.Event",
                    "args": [
                        {
                            "name": "player",
                            "type": "ig.ENTITY.Player",
                            "isOptional": false
                        },
                        {
                            "name": "model",
                            "type": "sc.PlayerModel",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "PlayerLevelNotifier",
                    "args": []
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "sc": {
            "fields": {
                "PlayerLevelNotifier": {
                    "type": "PlayerLevelNotifierConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.player.player-level": {
        "sc.LevelCurve": {
            "fields": {
                "ignorePartyCount": {
                    "type": "boolean",
                    "isOptional": true
                }
            },
            "functions": {
                "getFactor": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "playerLevel",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "otherLevel",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": []
        },
        "sc.LEVEL_CURVES": {
            "fields": {
                "REGULAR": {
                    "type": "LevelCurve",
                    "isOptional": false
                },
                "STATIC_REGULAR": {
                    "type": "LevelCurve",
                    "isOptional": false
                },
                "QUEST": {
                    "type": "LevelCurve",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc": {
            "fields": {
                "LEVEL_CURVES": {
                    "type": "LEVEL_CURVES"
                },
                "PlayerLevelTools": {
                    "type": "PlayerLevelTools"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.PlayerLevelTools": {
            "fields": {},
            "functions": {
                "computeBaseParams": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "params",
                            "type": "sc.CombatParams.BaseParams",
                            "isOptional": false
                        },
                        {
                            "name": "stats",
                            "type": "sc.PlayerConfig.Stats",
                            "isOptional": false
                        },
                        {
                            "name": "level",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "computerExp": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "exp",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "playerLevel",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "enemyLevel",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "bonus",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "zeroEXP",
                            "type": "boolean",
                            "isOptional": false
                        },
                        {
                            "name": "levelCurve",
                            "type": "sc.LevelCurve",
                            "isOptional": false
                        }
                    ]
                },
                "updateEquipStats": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "equip",
                            "type": "sc.PlayerModel.Equip",
                            "isOptional": false
                        },
                        {
                            "name": "equipParams",
                            "type": "sc.CombatParams.BaseParams",
                            "isOptional": false
                        },
                        {
                            "name": "equipModifiers",
                            "type": "Record<keyof sc.MODIFIERS, number>",
                            "isOptional": false
                        }
                    ]
                },
                "autoequip": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "model",
                            "type": "sc.PlayerModel",
                            "isOptional": false
                        },
                        {
                            "name": "equipSequence",
                            "type": "sc.PlayerConfig.AutoEquip",
                            "isOptional": false
                        },
                        {
                            "name": "prevEquipLevel",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "playerLevel",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "addItem",
                            "type": "boolean",
                            "isOptional": false
                        },
                        {
                            "name": "ignoreConditions",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "equip": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "dest",
                            "type": "sc.PlayerModel.Equip",
                            "isOptional": false
                        },
                        {
                            "name": "bodypart",
                            "type": "keyof typeof sc.MENU_EQUIP_BODYPART",
                            "isOptional": false
                        },
                        {
                            "name": "itemID",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": []
        }
    },
    "game.feature.player.player-skin": {
        "sc.PlayerSkinBase": {
            "fields": {
                "skinType": {
                    "type": "string",
                    "isOptional": false
                },
                "name": {
                    "type": "string",
                    "isOptional": false
                }
            },
            "functions": {
                "onLoadableComplete": {
                    "returnType": "void",
                    "args": []
                },
                "constructSkin": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "settings",
                            "type": "unknown",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "PlayerSkinBase",
                    "args": [
                        {
                            "name": "type",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "skinName",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "unknown",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "sc": {
            "fields": {
                "PlayerSkinBase": {
                    "type": "PlayerSkinBaseConstructor"
                },
                "PlayerSkinLibrary": {
                    "type": "PlayerSkinLibraryConstructor"
                },
                "playerSkins": {
                    "type": "PlayerSkinLibrary"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.PlayerSkinLibrary": {
            "fields": {
                "currentSkins": {
                    "type": "Record<string, sc.PlayerSkinBase>",
                    "isOptional": false
                }
            },
            "functions": {
                "_createSkin": {
                    "returnType": "PlayerSkinBase",
                    "args": [
                        {
                            "name": "skinName",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "PlayerSkinLibrary",
                    "args": []
                }
            },
            "parents": [
                "ig.GameAddon",
                "sc.Model",
                "sc.Model.Observer",
                "ig.ExtensionListener"
            ]
        }
    },
    "game.feature.player.plug-in": {},
    "game.feature.puzzle.entities.ball-changer": {
        "sc.BALL_CHANGER_TYPE.CHANGE_DIR": {
            "fields": {
                "_wm": {
                    "type": "ig.Config",
                    "isOptional": false
                },
                "dir": {
                    "type": "keyof typeof ig.ActorEntity.FACE8",
                    "isOptional": false
                },
                "sound": {
                    "type": "ig.Sound",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "CHANGE_DIR",
                    "args": [
                        {
                            "name": "settings",
                            "type": "{ dir: keyof typeof ig.ActorEntity.FACE8 }",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "sc.BallChangerType"
            ]
        },
        "sc.BALL_CHANGER_TYPE.CHANGE_SPEED": {
            "fields": {
                "_wm": {
                    "type": "ig.Config",
                    "isOptional": false
                },
                "factor": {
                    "type": "number",
                    "isOptional": true
                },
                "waitForBallKill": {
                    "type": "boolean",
                    "isOptional": false
                },
                "sound": {
                    "type": "Record<'speedUp' | 'slowDown', ig.Sound>",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "CHANGE_SPEED",
                    "args": [
                        {
                            "name": "settings",
                            "type": "{ factor?: number }",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "sc.BallChangerType"
            ]
        },
        "sc.BALL_CHANGER_TYPE.RESET_SPEED": {
            "fields": {
                "_wm": {
                    "type": "ig.Config",
                    "isOptional": false
                },
                "factor": {
                    "type": "unknown",
                    "isOptional": false
                },
                "sound": {
                    "type": "Record<'reset' | 'speedUp' | 'slowDown', ig.Sound>",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "RESET_SPEED",
                    "args": []
                }
            },
            "parents": [
                "sc.BallChangerType"
            ]
        },
        "sc.BALL_CHANGER_TYPE.CHANGE_ELEMENT": {
            "fields": {
                "_wm": {
                    "type": "ig.Config",
                    "isOptional": false
                },
                "element": {
                    "type": "Exclude<keyof typeof sc.ELEMENT, 'NEUTRAL'>",
                    "isOptional": false
                },
                "effects": {
                    "type": "ig.EffectSheet",
                    "isOptional": false
                },
                "fxKey": {
                    "type": "'heatConvert' | 'coldConvert' | 'shockConvert' | 'waveConvert'",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "CHANGE_ELEMENT",
                    "args": [
                        {
                            "name": "settings",
                            "type": "{ element: Exclude<keyof typeof sc.ELEMENT, 'NEUTRAL'> }",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "sc.BallChangerType"
            ]
        },
        "sc": {
            "fields": {
                "BALL_CHANGER_TYPE": {
                    "type": "{\n      CHANGE_DIR: sc.BALL_CHANGER_TYPE.CHANGE_DIRConstructor;\n      CHANGE_SPEED: sc.BALL_CHANGER_TYPE.CHANGE_SPEEDConstructor;\n      RESET_SPEED: sc.BALL_CHANGER_TYPE.RESET_SPEEDConstructor;\n      CHANGE_ELEMENT: sc.BALL_CHANGER_TYPE.CHANGE_ELEMENTConstructor;\n    }"
                },
                "CHANGE_DIR": {
                    "type": "sc.BALL_CHANGER_TYPE.CHANGE_DIRConstructor",
                    "isOptional": false
                },
                "CHANGE_SPEED": {
                    "type": "sc.BALL_CHANGER_TYPE.CHANGE_SPEEDConstructor",
                    "isOptional": false
                },
                "RESET_SPEED": {
                    "type": "sc.BALL_CHANGER_TYPE.RESET_SPEEDConstructor",
                    "isOptional": false
                },
                "CHANGE_ELEMENT": {
                    "type": "sc.BALL_CHANGER_TYPE.CHANGE_ELEMENTConstructor",
                    "isOptional": false
                },
                "BallChangerType": {
                    "type": "BallChangerTypeConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.BallChangerType": {
            "fields": {
                "icon": {
                    "type": "number",
                    "isOptional": false
                },
                "sphereColor": {
                    "type": "number",
                    "isOptional": false
                },
                "flipX": {
                    "type": "boolean",
                    "isOptional": false
                },
                "flipY": {
                    "type": "boolean",
                    "isOptional": false
                },
                "centerBall": {
                    "type": "boolean",
                    "isOptional": false
                },
                "waitForBallKill": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "onBallTouch": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "ball",
                            "type": "ig.ENTITY.Ball",
                            "isOptional": false
                        },
                        {
                            "name": "ballChanger",
                            "type": "ig.ENTITY.BallChanger",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "BallChangerType",
                    "args": [
                        {
                            "name": "settings",
                            "type": "BallChangerSettingsUnion",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "unknown": {
            "fields": {},
            "functions": {
                "init": {
                    "returnType": "unknown",
                    "args": [
                        {
                            "name": "args",
                            "type": "infer S",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": []
        },
        "ig.ENTITY.BallChanger": {
            "fields": {
                "ballTime": {
                    "type": "number",
                    "isOptional": false
                },
                "resetBounce": {
                    "type": "boolean",
                    "isOptional": false
                },
                "condition": {
                    "type": "ig.VarCondition",
                    "isOptional": false
                },
                "changerType": {
                    "type": "sc.BallChangerType",
                    "isOptional": false
                },
                "isOn": {
                    "type": "boolean",
                    "isOptional": false
                },
                "disableTimer": {
                    "type": "number",
                    "isOptional": false
                },
                "disableBall": {
                    "type": "Nullable<ig.ENTITY.Ball>",
                    "isOptional": false
                },
                "_wm": {
                    "type": "ig.Config",
                    "isOptional": false
                },
                "fx": {
                    "type": "{ sheet: ig.EffectSheet }",
                    "isOptional": false
                }
            },
            "functions": {
                "varsChanged": {
                    "returnType": "void",
                    "args": []
                },
                "ballHit": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "entity",
                            "type": "ig.Entity",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "BallChanger",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "ig.ENTITY.BallChanger.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.AnimatedEntity"
            ]
        },
        "ig.ENTITY.BallChanger.changerType": {
            "fields": {
                "type": {
                    "type": "'CHANGE_ELEMENT'",
                    "isOptional": false
                },
                "settings": {
                    "type": "{\n                    element: Exclude<keyof typeof sc.ELEMENT, 'NEUTRAL'>;\n                  }",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ENTITY.BallChanger.changerType.settings": {
            "fields": {
                "dir": {
                    "type": "keyof typeof ig.ActorEntity.FACE8",
                    "isOptional": false
                },
                "factor": {
                    "type": "number",
                    "isOptional": true
                },
                "element": {
                    "type": "Exclude<keyof typeof sc.ELEMENT, 'NEUTRAL'>",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ENTITY.BallChanger.fx": {
            "fields": {
                "sheet": {
                    "type": "ig.EffectSheet",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ENTITY": {
            "fields": {
                "BallChanger": {
                    "type": "BallChangerConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.puzzle.entities.block": {},
    "game.feature.puzzle.entities.blockers": {
        "ig.ENTITY.Blocker.Settings": {
            "fields": {
                "blockerType": {
                    "type": "sc.BLOCKER_TYPE",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ENTITY.Blocker": {
            "fields": {
                "active": {
                    "type": "boolean",
                    "isOptional": false
                },
                "maxHeight": {
                    "type": "number",
                    "isOptional": false
                },
                "minHeight": {
                    "type": "number",
                    "isOptional": false
                },
                "variable": {
                    "type": "string",
                    "isOptional": false
                },
                "condition": {
                    "type": "ig.VarCondition",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "Blocker",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "ig.ENTITY.Blocker.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.AnimatedEntity"
            ]
        },
        "ig.ENTITY": {
            "fields": {
                "Blocker": {
                    "type": "BlockerConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.BLOCKER_TYPE_ENTRY": {
            "fields": {
                "size": {
                    "type": "Vec3",
                    "isOptional": false
                },
                "collShape": {
                    "type": "ig.COLLSHAPE",
                    "isOptional": false
                },
                "minHeight": {
                    "type": "number",
                    "isOptional": false
                },
                "anims": {
                    "type": "unknown",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.BLOCKER_TYPE": {
            "fields": {
                "diagonalNW": {
                    "type": "BLOCKER_TYPE_ENTRY",
                    "isOptional": false
                },
                "diagonalNE": {
                    "type": "BLOCKER_TYPE_ENTRY",
                    "isOptional": false
                },
                "diagonalSE": {
                    "type": "BLOCKER_TYPE_ENTRY",
                    "isOptional": false
                },
                "diagonalSW": {
                    "type": "BLOCKER_TYPE_ENTRY",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.puzzle.entities.bomb": {},
    "game.feature.puzzle.entities.boss-platform": {},
    "game.feature.puzzle.entities.bounce-switch": {
        "sc.BounceSwitchGroups.Group": {
            "fields": {
                "endSwitch": {
                    "type": "null",
                    "isOptional": false
                },
                "variable": {
                    "type": "string",
                    "isOptional": false
                },
                "blocks": {
                    "type": "unknown[]",
                    "isOptional": false
                },
                "blockHitCount": {
                    "type": "number",
                    "isOptional": false
                },
                "finalHit": {
                    "type": "boolean",
                    "isOptional": false
                },
                "currentBall": {
                    "type": "Nullable<ig.ENTITY.Ball>",
                    "isOptional": false
                },
                "cameraHandle": {
                    "type": "null",
                    "isOptional": false
                },
                "overrideHandle": {
                    "type": "null",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.BounceSwitchGroups": {
            "fields": {
                "groups": {
                    "type": "Record<string, sc.BounceSwitchGroups.Group>",
                    "isOptional": false
                }
            },
            "functions": {
                "evaluateGroup": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "isGroupBallConflict": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "groupName",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "entity",
                            "type": "ig.Entity",
                            "isOptional": false
                        }
                    ]
                },
                "onDeferredUpdate": {
                    "returnType": "void",
                    "args": []
                },
                "getGroup": {
                    "returnType": "sc.BounceSwitchGroups.Group",
                    "args": [
                        {
                            "name": "groupName",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "BounceSwitchGroups",
                    "args": []
                }
            },
            "parents": [
                "ig.GameAddon"
            ]
        },
        "sc": {
            "fields": {
                "BounceSwitchGroups": {
                    "type": "BounceSwitchGroupsConstructor"
                },
                "bounceSwitchGroups": {
                    "type": "BounceSwitchGroups"
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ENTITY.BounceSwitch": {
            "fields": {
                "effects": {
                    "type": "ig.EffectSheet",
                    "isOptional": false
                },
                "group": {
                    "type": "string",
                    "isOptional": false
                },
                "isOn": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "ballHit": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "entity",
                            "type": "ig.Entity | ig.ENTITY.Ball",
                            "isOptional": false
                        }
                    ]
                },
                "onGroupResolve": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "BounceSwitch",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "ig.ENTITY.BounceSwitch.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.AnimatedEntity"
            ]
        },
        "ig.ENTITY": {
            "fields": {
                "BounceSwitch": {
                    "type": "BounceSwitchConstructor"
                },
                "BounceBlock": {
                    "type": "BounceBlockConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ENTITY.BounceBlock": {
            "fields": {
                "effects": {
                    "type": "ig.EffectSheet",
                    "isOptional": false
                },
                "group": {
                    "type": "string",
                    "isOptional": false
                },
                "blockState": {
                    "type": "0 | 1 | 2",
                    "isOptional": false
                },
                "timer": {
                    "type": "ig.WeightTimer",
                    "isOptional": false
                },
                "ballTime": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "onGroupResolve": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "hide",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "init": {
                    "returnType": "BounceBlock",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "ig.ENTITY.BounceBlock.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.AnimatedEntity"
            ]
        }
    },
    "game.feature.puzzle.entities.compressor": {
        "ig.ENTITY.Compressor.Settings": {
            "fields": {
                "followCamera": {
                    "type": "boolean",
                    "isOptional": true
                },
                "basllSpeed": {
                    "type": "number",
                    "isOptional": true
                },
                "fastMode": {
                    "type": "boolean",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": [
                "ig.Entity.Settings"
            ]
        },
        "ig.ENTITY.Compressor": {
            "fields": {
                "currentElement": {
                    "type": "sc.ELEMENT",
                    "isOptional": false
                },
                "compressorBall": {
                    "type": "sc.CompressedBaseEntity",
                    "isOptional": false
                },
                "ballSpeed": {
                    "type": "number",
                    "isOptional": false
                },
                "fastMode": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "createCompressorBall": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "Compressor",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "ig.ENTITY.Compressor.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.AnimatedEntity"
            ]
        },
        "ig.ENTITY": {
            "fields": {
                "Compressor": {
                    "type": "CompressorConstructor"
                },
                "AntiCompressor": {
                    "type": "AntiCompressorConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ENTITY.AntiCompressor.Settings": {
            "fields": {},
            "functions": {},
            "parents": [
                "ig.Entity.Settings"
            ]
        },
        "ig.ENTITY.AntiCompressor": {
            "fields": {
                "_wm": {
                    "type": "ig.Config",
                    "isOptional": false
                },
                "effects": {
                    "type": "unknown",
                    "isOptional": false
                }
            },
            "functions": {
                "onHideRequest": {
                    "returnType": "void",
                    "args": []
                },
                "ballHit": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "entity",
                            "type": "ig.Entity",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "AntiCompressor",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "ig.ENTITY.AntiCompressor.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.AnimatedEntity",
                "ig.EffectSheet.EventCallback"
            ]
        },
        "sc.CompressedBaseEntity.Settings": {
            "fields": {},
            "functions": {},
            "parents": [
                "ig.Entity.Settings"
            ]
        },
        "sc.CompressedBaseEntity": {
            "fields": {
                "nudgeTimer": {
                    "type": "number",
                    "isOptional": false
                },
                "killTimer": {
                    "type": "number",
                    "isOptional": false
                },
                "globalCount": {
                    "type": "number",
                    "isOptional": false
                },
                "speedFactor": {
                    "type": "number",
                    "isOptional": false
                },
                "combatant": {
                    "type": "ig.ENTITY.Combatant",
                    "isOptional": false
                },
                "attackInfo": {
                    "type": "sc.AttackInfo",
                    "isOptional": false
                },
                "fastMode": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "getElement": {
                    "returnType": "sc.ELEMENT",
                    "args": []
                },
                "init": {
                    "returnType": "CompressedBaseEntity",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "CompressedBaseEntity.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.AnimatedEntity"
            ]
        },
        "sc": {
            "fields": {
                "CompressedBaseEntity": {
                    "type": "CompressedBaseEntityConstructor"
                },
                "CompressedWaveEntity": {
                    "type": "CompressedWaveEntityConstructor"
                },
                "CompressedShockEntity": {
                    "type": "CompressedShockEntityConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.CompressedWaveEntity.Settings": {
            "fields": {},
            "functions": {},
            "parents": [
                "CompressedBaseEntity.Settings"
            ]
        },
        "sc.CompressedWaveEntity": {
            "fields": {},
            "functions": {
                "init": {
                    "returnType": "CompressedWaveEntity",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "CompressedWaveEntity.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "CompressedBaseEntity"
            ]
        },
        "sc.CompressedShockEntity.Settings": {
            "fields": {},
            "functions": {},
            "parents": [
                "CompressedBaseEntity.Settings"
            ]
        },
        "sc.CompressedShockEntity": {
            "fields": {},
            "functions": {
                "init": {
                    "returnType": "CompressedShockEntity",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "CompressedWaveEntity.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "CompressedBaseEntity"
            ]
        }
    },
    "game.feature.puzzle.entities.destructible": {
        "sc.DESTRUCTIBLE_TYPE_BASE": {
            "fields": {
                "hitCount": {
                    "type": "number",
                    "isOptional": false
                },
                "size": {
                    "type": "Vec3",
                    "isOptional": false
                },
                "preBoom": {
                    "type": "{ sheet: string, name: string }",
                    "isOptional": true
                },
                "sheet": {
                    "type": "string",
                    "isOptional": false
                },
                "name": {
                    "type": "string",
                    "isOptional": false
                },
                "boom": {
                    "type": "{ sheet: string, name: string }",
                    "isOptional": true
                },
                "debris": {
                    "type": "{ sheet: string, name: string }",
                    "isOptional": true
                },
                "debrisAngle": {
                    "type": "number",
                    "isOptional": true
                },
                "hitSide": {
                    "type": "[number, number, number, number]",
                    "isOptional": true
                },
                "collType": {
                    "type": "ig.COLLTYPE",
                    "isOptional": true
                },
                "onlyPerma": {
                    "type": "boolean",
                    "isOptional": true
                },
                "noBlinking": {
                    "type": "boolean",
                    "isOptional": true
                },
                "terrain": {
                    "type": "ig.TERRAIN",
                    "isOptional": true
                },
                "keyConsume": {
                    "type": "string",
                    "isOptional": true
                },
                "range": {
                    "type": "{ key: string, delay: number, padding: number, startDelay: number }",
                    "isOptional": true
                },
                "key": {
                    "type": "string",
                    "isOptional": false
                },
                "delay": {
                    "type": "number",
                    "isOptional": false
                },
                "padding": {
                    "type": "number",
                    "isOptional": false
                },
                "startDelay": {
                    "type": "number",
                    "isOptional": false
                },
                "hitSound": {
                    "type": "ig.Sound",
                    "isOptional": true
                },
                "anims": {
                    "type": "unknown",
                    "isOptional": false
                }
            },
            "functions": {
                "hitCondition": {
                    "returnType": "boolean",
                    "args": []
                }
            },
            "parents": []
        },
        "sc": {
            "fields": {
                "DESTRUCTIBLE_TYPE": {
                    "type": "{\n            boxMedium: sc.DESTRUCTIBLE_TYPE_BASE\n            boxMedNorth: sc.DESTRUCTIBLE_TYPE_BASE\n            boxMedEast: sc.DESTRUCTIBLE_TYPE_BASE\n            boxMedSouth: sc.DESTRUCTIBLE_TYPE_BASE\n            boxMedWest: sc.DESTRUCTIBLE_TYPE_BASE\n            boxLarge: sc.DESTRUCTIBLE_TYPE_BASE\n            iceBlock: sc.DESTRUCTIBLE_TYPE_BASE\n            bombBlock: sc.DESTRUCTIBLE_TYPE_BASE\n            bombWallEast: sc.DESTRUCTIBLE_TYPE_BASE\n            bombWallWest: sc.DESTRUCTIBLE_TYPE_BASE\n            bombWallNorth: sc.DESTRUCTIBLE_TYPE_BASE\n            keyWallNorth: sc.DESTRUCTIBLE_TYPE_BASE\n            keyPillar: sc.DESTRUCTIBLE_TYPE_BASE\n            keyPillarAR: sc.DESTRUCTIBLE_TYPE_BASE\n            masterKeyWallColdDungeon: sc.DESTRUCTIBLE_TYPE_BASE\n            masterKeyWallHeatDungeon: sc.DESTRUCTIBLE_TYPE_BASE\n            masterKeyWallTreeDungeon: sc.DESTRUCTIBLE_TYPE_BASE\n            masterKeyWallFinalDungeon: sc.DESTRUCTIBLE_TYPE_BASE\n            autumnWall: sc.DESTRUCTIBLE_TYPE_BASE\n            autumnWall2: sc.DESTRUCTIBLE_TYPE_BASE\n            autumnWall3: sc.DESTRUCTIBLE_TYPE_BASE\n        }"
                },
                "boxMedium": {
                    "type": "sc.DESTRUCTIBLE_TYPE_BASE",
                    "isOptional": false
                },
                "boxMedNorth": {
                    "type": "sc.DESTRUCTIBLE_TYPE_BASE",
                    "isOptional": false
                },
                "boxMedEast": {
                    "type": "sc.DESTRUCTIBLE_TYPE_BASE",
                    "isOptional": false
                },
                "boxMedSouth": {
                    "type": "sc.DESTRUCTIBLE_TYPE_BASE",
                    "isOptional": false
                },
                "boxMedWest": {
                    "type": "sc.DESTRUCTIBLE_TYPE_BASE",
                    "isOptional": false
                },
                "boxLarge": {
                    "type": "sc.DESTRUCTIBLE_TYPE_BASE",
                    "isOptional": false
                },
                "iceBlock": {
                    "type": "sc.DESTRUCTIBLE_TYPE_BASE",
                    "isOptional": false
                },
                "bombBlock": {
                    "type": "sc.DESTRUCTIBLE_TYPE_BASE",
                    "isOptional": false
                },
                "bombWallEast": {
                    "type": "sc.DESTRUCTIBLE_TYPE_BASE",
                    "isOptional": false
                },
                "bombWallWest": {
                    "type": "sc.DESTRUCTIBLE_TYPE_BASE",
                    "isOptional": false
                },
                "bombWallNorth": {
                    "type": "sc.DESTRUCTIBLE_TYPE_BASE",
                    "isOptional": false
                },
                "keyWallNorth": {
                    "type": "sc.DESTRUCTIBLE_TYPE_BASE",
                    "isOptional": false
                },
                "keyPillar": {
                    "type": "sc.DESTRUCTIBLE_TYPE_BASE",
                    "isOptional": false
                },
                "keyPillarAR": {
                    "type": "sc.DESTRUCTIBLE_TYPE_BASE",
                    "isOptional": false
                },
                "masterKeyWallColdDungeon": {
                    "type": "sc.DESTRUCTIBLE_TYPE_BASE",
                    "isOptional": false
                },
                "masterKeyWallHeatDungeon": {
                    "type": "sc.DESTRUCTIBLE_TYPE_BASE",
                    "isOptional": false
                },
                "masterKeyWallTreeDungeon": {
                    "type": "sc.DESTRUCTIBLE_TYPE_BASE",
                    "isOptional": false
                },
                "masterKeyWallFinalDungeon": {
                    "type": "sc.DESTRUCTIBLE_TYPE_BASE",
                    "isOptional": false
                },
                "autumnWall": {
                    "type": "sc.DESTRUCTIBLE_TYPE_BASE",
                    "isOptional": false
                },
                "autumnWall2": {
                    "type": "sc.DESTRUCTIBLE_TYPE_BASE",
                    "isOptional": false
                },
                "autumnWall3": {
                    "type": "sc.DESTRUCTIBLE_TYPE_BASE",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ENTITY.Destructible.Settings": {
            "fields": {
                "permaDestruct": {
                    "type": "boolean",
                    "isOptional": true
                },
                "onDestructIncrease": {
                    "type": "string",
                    "isOptional": true
                },
                "onPreDestructIncrease": {
                    "type": "string",
                    "isOptional": true
                },
                "desType": {
                    "type": "keyof typeof sc.DESTRUCTIBLE_TYPE",
                    "isOptional": false
                },
                "enemyInfo": {
                    "type": "sc.EnemyInfo",
                    "isOptional": true
                },
                "blockNavMap": {
                    "type": "boolean",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": [
                "ig.Entity.Settings"
            ]
        },
        "ig.ENTITY.Destructible": {
            "fields": {
                "enemyInfo": {
                    "type": "sc.EnemyInfo",
                    "isOptional": true
                },
                "permaDestruct": {
                    "type": "boolean",
                    "isOptional": false
                },
                "onDestructIncrease": {
                    "type": "string | null",
                    "isOptional": false
                },
                "onPreDestructIncrease": {
                    "type": "string | null",
                    "isOptional": false
                },
                "hitSide": {
                    "type": "[number, number, number, number]",
                    "isOptional": false
                },
                "hitCount": {
                    "type": "number",
                    "isOptional": false
                },
                "conditionFunction": {
                    "type": "unknown",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "Destructible",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "ig.ENTITY.Destructible.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.AnimatedEntity"
            ]
        },
        "ig.ENTITY": {
            "fields": {
                "Destructible": {
                    "type": "DestructibleConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.puzzle.entities.element-shield": {},
    "game.feature.puzzle.entities.enemy-counter": {
        "ig.ENTITY.EnemyCounter.Settings": {
            "fields": {
                "enemyGroup": {
                    "type": "string",
                    "isOptional": false
                },
                "enemyCount": {
                    "type": "number",
                    "isOptional": false
                },
                "preVariable": {
                    "type": "string",
                    "isOptional": true
                },
                "postVariable": {
                    "type": "string",
                    "isOptional": true
                },
                "countVariable": {
                    "type": "string",
                    "isOptional": true
                },
                "shuffleCondition": {
                    "type": "string",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": [
                "ig.Entity.Settings"
            ]
        },
        "ig.ENTITY.EnemyCounter": {
            "fields": {
                "enemyGroup": {
                    "type": "string",
                    "isOptional": false
                },
                "enemyCount": {
                    "type": "number",
                    "isOptional": false
                },
                "preCount": {
                    "type": "number",
                    "isOptional": false
                },
                "postCount": {
                    "type": "number",
                    "isOptional": false
                },
                "preVariable": {
                    "type": "string",
                    "isOptional": false
                },
                "postVariable": {
                    "type": "string",
                    "isOptional": false
                },
                "done": {
                    "type": "boolean",
                    "isOptional": false
                },
                "shuffleCondition": {
                    "type": "ig.VarCondition",
                    "isOptional": false
                },
                "timer": {
                    "type": "number",
                    "isOptional": false
                },
                "MAX_FLASH_TIME": {
                    "type": "number",
                    "isOptional": false
                },
                "sounds": {
                    "type": "{ count: ig.Sound; done: ig.Sound }",
                    "isOptional": false
                },
                "effects": {
                    "type": "{ sheet: ig.EffectSheet; hideHandle: ig.ENTITY.Effect }",
                    "isOptional": false
                }
            },
            "functions": {
                "decreaseCount": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "EnemyCounter",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "ig.ENTITY.EnemyCounter.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.AnimatedEntity"
            ]
        },
        "ig.ENTITY.EnemyCounter.sounds": {
            "fields": {
                "count": {
                    "type": "ig.Sound",
                    "isOptional": false
                },
                "done": {
                    "type": "ig.Sound",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ENTITY.EnemyCounter.effects": {
            "fields": {
                "sheet": {
                    "type": "ig.EffectSheet",
                    "isOptional": false
                },
                "hideHandle": {
                    "type": "ig.ENTITY.Effect",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ENTITY": {
            "fields": {
                "EnemyCounter": {
                    "type": "EnemyCounterConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.puzzle.entities.extract-platform": {},
    "game.feature.puzzle.entities.floor-switch": {
        "ig.ENTITY.FloorSwitch.Settings": {
            "fields": {
                "variable": {
                    "type": "string",
                    "isOptional": false
                },
                "switchType": {
                    "type": "keyof typeof sc.FLOOR_SWITCH_TYPE",
                    "isOptional": true
                },
                "lockCondition": {
                    "type": "string | null",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": [
                "ig.Entity.Settings"
            ]
        }
    },
    "game.feature.puzzle.entities.glowing-line": {
        "ig.ENTITY.GlowingLine.Settings": {
            "fields": {
                "size": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "condition": {
                    "type": "string",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": [
                "ig.Entity.Settings"
            ]
        }
    },
    "game.feature.puzzle.entities.group-switch": {},
    "game.feature.puzzle.entities.ice-disk": {
        "sc.IceDiskEntity.Settings": {
            "fields": {},
            "functions": {},
            "parents": [
                "ig.AnimatedEntity.Settings"
            ]
        },
        "sc.IceDiskEntity": {
            "fields": {
                "timer": {
                    "type": "number",
                    "isOptional": false
                },
                "combatant": {
                    "type": "ig.ENTITY.Combatant",
                    "isOptional": false
                },
                "state": {
                    "type": "number",
                    "isOptional": false
                },
                "panel": {
                    "type": "Nullable<ig.ENTITY.WaterBubblePanel>",
                    "isOptional": true
                }
            },
            "functions": {
                "slide": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "dir",
                            "type": "Vec2",
                            "isOptional": false
                        },
                        {
                            "name": "combatant",
                            "type": "ig.ENTITY.Combatant",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "IceDiskEntity",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "IceDiskEntity.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.AnimatedEntity"
            ]
        },
        "sc": {
            "fields": {
                "IceDiskEntity": {
                    "type": "IceDiskEntityConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.puzzle.entities.item-destruct": {
        "sc.ItemDestructType": {
            "fields": {
                "size": {
                    "type": "Vec3",
                    "isOptional": false
                },
                "effectOffset": {
                    "type": "Vec3",
                    "isOptional": false
                },
                "boom": {
                    "type": "{ sheet: string; name: string }",
                    "isOptional": false
                },
                "debris": {
                    "type": "{ sheet: string; name: string }",
                    "isOptional": false
                },
                "anims": {
                    "type": "ig.AnimationSheet.Settings",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.ItemDestructType.boom": {
            "fields": {
                "sheet": {
                    "type": "string",
                    "isOptional": false
                },
                "name": {
                    "type": "string",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.ItemDestructType.debris": {
            "fields": {
                "sheet": {
                    "type": "string",
                    "isOptional": false
                },
                "name": {
                    "type": "string",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.ITEM_DESTRUCT_TYPE": {
            "fields": {
                "StoneOfValor": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "StoneOfSpace": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "StoneOfTruth": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "StoneOfSpirit": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "StoneOfAges": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "StoneOfNothing": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "AutumnPlantA": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "'Autumn-Ground-1'": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "'Autumn-Ground-2'": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "'Autumn-Water-1'": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "'Autumn-Water-2'": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "'Autumn-Special'": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "'Autumn-Water-Special'": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "'Autumn-Fall-Ground-1'": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "'Autumn-Fall-Ground-2'": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "'Autumn-Fall-Water-1'": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "'Autumn-Fall-Water-2'": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "'Autumn-Fall-Special'": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "'Autumn-Fall-Water-Special'": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "'Bergen-PlantA-1'": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "'Bergen-PlantA-2'": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "'Bergen-PlantA-Rare'": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "'Bergen-PlantB-1'": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "'Bergen-PlantB-2'": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "'Bergen-PlantB-Rare'": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "'Bergen-PlantA-1-Snow'": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "'Bergen-PlantA-2-Snow'": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "'Bergen-PlantA-Snow-Rare'": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "'Bergen-PlantB-1-Snow'": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "'Bergen-PlantB-2-Snow'": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "'Bergen-PlantB-Snow-Rare'": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "'Bergen-Snow-Crystal'": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "'Bergen-Vase-1'": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "'Cold-Dng-Egg-1'": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "'Cold-Dng-Egg-2'": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "'Cold-Dng-Egg-3'": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "'Cold-Dng-Egg-4'": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "'Cold-Dng-Egg-Special-A'": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "'Cold-Dng-Egg-Special-B'": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "'Heat-Cactus-1'": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "'Heat-Cactus-2'": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "'Heat-Cactus-Special'": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "'Heat-Dry-Cactus-1'": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "'Heat-Dry-Cactus-2'": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "'Heat-Palmapple-1'": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "'Heat-Palmapple-2'": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "'Heat-Palmapple-Special'": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "'Heat-Dry-Bush-1'": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "'Heat-Dry-Bush-2'": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "'Heat-Dry-Bush-Special'": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "'Heat-Bones-1'": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "'Heat-Bones-2'": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "'Heat-Bones-Special'": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "'Heat-Hill-1'": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "'Heat-Hill-2'": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "'Heat-Hill-Special'": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "'Bakii-Vase'": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "'Jungle-Flower-1'": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "'Jungle-Flower-2'": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "'Jungle-Flower-Special'": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "'Jungle-Bees-1'": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "'Jungle-Bees-2'": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "'Jungle-Bees-3'": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "'Jungle-Waterplant-1'": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "'Jungle-Waterplant-2'": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "'Jungle-Waterplant-Special'": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "'Jungle-Waterplant-Closed-1'": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "'Jungle-Waterplant-Closed-2'": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "'Jungle-Shroom-1'": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "'Jungle-Shroom-2'": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "'Jungle-Shroom-Special'": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "'Jungle-Flower-Dotted-1'": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "'Jungle-Flower-Dotted-2'": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "'Jungle-Flower-Dotted-Special'": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "'Sapphire-Bush-1'": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "'Sapphire-Bush-2'": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "'Sapphire-Bush-Special'": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "'Sapphire-Bamboo-1'": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "'Sapphire-Bamboo-2'": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "'Sapphire-Bamboo-Special'": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "'Sapphire-Cobalt-1'": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "'Sapphire-Cobalt-2'": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "'Sapphire-Cobalt-Special'": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "TrashBag1": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "TrashBag2": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "TrashBag3": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "TrashBag4": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "'Final-Cone-1'": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "'Final-Cone-2'": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "'Final-Cone-3'": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "'Final-Cone-4'": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "'Final-Shard'": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "'Beach-Coral-1'": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "'Beach-Coral-2'": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "'Beach-Grey-1'": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "'Beach-Grey-2'": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "'Beach-Green-1'": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "'Beach-Green-2'": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc": {
            "fields": {
                "ITEM_DESTRUCT_TYPE": {
                    "type": "ITEM_DESTRUCT_TYPE"
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ENTITY.ItemDestruct.Settings": {
            "fields": {
                "desType": {
                    "type": "keyof typeof sc.ITEM_DESTRUCT_TYPE",
                    "isOptional": false
                },
                "items": {
                    "type": "sc.EnemyType.ItemDrop[]",
                    "isOptional": true
                },
                "_globalSettingKey": {
                    "type": "keyof typeof sc.ITEM_DESTRUCT_TYPE",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": [
                "ig.Entity.Settings"
            ]
        },
        "ig.ENTITY.ItemDestruct": {
            "fields": {
                "_wm": {
                    "type": "ig.Config",
                    "isOptional": false
                },
                "blinkTimer": {
                    "type": "number",
                    "isOptional": false
                },
                "dropped": {
                    "type": "boolean",
                    "isOptional": false
                },
                "itemDrops": {
                    "type": "{ id: sc.ItemID; prob: number }[]",
                    "isOptional": false
                },
                "id": {
                    "type": "sc.ItemID",
                    "isOptional": false
                },
                "prob": {
                    "type": "number",
                    "isOptional": false
                },
                "typeData": {
                    "type": "sc.ItemDestructType",
                    "isOptional": false
                },
                "permaDeath": {
                    "type": "boolean",
                    "isOptional": false
                },
                "globalKey": {
                    "type": "{\n          key: keyof typeof sc.ITEM_DESTRUCT_TYPE;\n          anim: keyof typeof sc.ITEM_DESTRUCT_TYPE;\n        }",
                    "isOptional": false
                },
                "enemyInfo": {
                    "type": "sc.EnemyInfo",
                    "isOptional": false
                },
                "enemyChance": {
                    "type": "number",
                    "isOptional": false
                },
                "boomEffect": {
                    "type": "ig.EffectHandle",
                    "isOptional": false
                },
                "debrisEffect": {
                    "type": "ig.EffectHandle",
                    "isOptional": false
                },
                "trigger": {
                    "type": "string",
                    "isOptional": false
                },
                "indestructible": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "_getVarPrefix": {
                    "returnType": "string",
                    "args": []
                },
                "destroy": {
                    "returnType": "void",
                    "args": []
                },
                "setDropped": {
                    "returnType": "void",
                    "args": []
                },
                "dropItem": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "ItemDestruct",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "ig.ENTITY.ItemDestruct.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.AnimatedEntity"
            ]
        },
        "ig.ENTITY.ItemDestruct.globalKey": {
            "fields": {
                "key": {
                    "type": "keyof typeof sc.ITEM_DESTRUCT_TYPE",
                    "isOptional": false
                },
                "anim": {
                    "type": "keyof typeof sc.ITEM_DESTRUCT_TYPE",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ENTITY": {
            "fields": {
                "ItemDestruct": {
                    "type": "ItemDestructConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.puzzle.entities.key-panel": {
        "ig.ENTITY.KeyPanel.Settings": {
            "fields": {
                "keyType": {
                    "type": "'REGULAR' | 'MASTER'",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": [
                "ig.Entity.Settings"
            ]
        }
    },
    "game.feature.puzzle.entities.lorry": {},
    "game.feature.puzzle.entities.magnet": {
        "ig.ENTITY.Magnet.Settings": {
            "fields": {
                "dir": {
                    "type": "keyof typeof ig.ActorEntity.FACE4",
                    "isOptional": false
                },
                "altDirs": {
                    "type": "string[]",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": [
                "ig.Entity.Settings"
            ]
        },
        "ig.ENTITY.Magnet": {
            "fields": {
                "dir": {
                    "type": "ig.ActorEntity.FACE4",
                    "isOptional": false
                },
                "targetDir": {
                    "type": "number",
                    "isOptional": false
                },
                "defaultDir": {
                    "type": "number",
                    "isOptional": false
                },
                "face": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "altDirs": {
                    "type": "{ condition: ig.VarCondition; dir: ig.ActorEntity.FACE4 }[]",
                    "isOptional": false
                },
                "condition": {
                    "type": "ig.VarCondition",
                    "isOptional": false
                },
                "pull": {
                    "type": "{\n          timer: number;\n          entities: ig.Entity[];\n          pulling: ig.Entity[];\n          moved: ig.Entity[];\n          done: boolean;\n        }",
                    "isOptional": false
                },
                "effects": {
                    "type": "{ sheet: ig.EffectSheet; handle: ig.ENTITY.Effect }",
                    "isOptional": false
                },
                "_wm": {
                    "type": "ig.Config",
                    "isOptional": false
                }
            },
            "functions": {
                "onHideRequest": {
                    "returnType": "void",
                    "args": []
                },
                "startPull": {
                    "returnType": "void",
                    "args": []
                },
                "fetchPullEntities": {
                    "returnType": "void",
                    "args": []
                },
                "isPullActive": {
                    "returnType": "boolean",
                    "args": []
                },
                "pullEntities": {
                    "returnType": "void",
                    "args": []
                },
                "varsChanged": {
                    "returnType": "void",
                    "args": []
                },
                "updateDir": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "forceSet",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "ballHit": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "entity",
                            "type": "ig.Entity",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "Magnet",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "ig.ENTITY.Magnet.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.AnimatedEntity",
                "ig.EffectSheet.EventCallback"
            ]
        },
        "ig.ENTITY.Magnet.pull": {
            "fields": {
                "timer": {
                    "type": "number",
                    "isOptional": false
                },
                "entities": {
                    "type": "ig.Entity[]",
                    "isOptional": false
                },
                "pulling": {
                    "type": "ig.Entity[]",
                    "isOptional": false
                },
                "moved": {
                    "type": "ig.Entity[]",
                    "isOptional": false
                },
                "done": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ENTITY.Magnet.effects": {
            "fields": {
                "sheet": {
                    "type": "ig.EffectSheet",
                    "isOptional": false
                },
                "handle": {
                    "type": "ig.ENTITY.Effect",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ENTITY": {
            "fields": {
                "Magnet": {
                    "type": "MagnetConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.puzzle.entities.push-pull-dest": {},
    "game.feature.puzzle.entities.quick-sand": {},
    "game.feature.puzzle.entities.regen-destruct": {
        "sc.RegenDestructType": {
            "fields": {
                "size": {
                    "type": "Vec3",
                    "isOptional": false
                },
                "noBlinking": {
                    "type": "boolean",
                    "isOptional": false
                },
                "collType": {
                    "type": "ig.COLLTYPE",
                    "isOptional": false
                },
                "boom": {
                    "type": "{ sheet: string; name: string }",
                    "isOptional": false
                },
                "regen": {
                    "type": "{ sheet: string; name: string }",
                    "isOptional": true
                },
                "sheet": {
                    "type": "string",
                    "isOptional": false
                },
                "name": {
                    "type": "string",
                    "isOptional": false
                },
                "hide": {
                    "type": "{ sheet: string; name: string }",
                    "isOptional": true
                },
                "shadow": {
                    "type": "number",
                    "isOptional": true
                },
                "zGravityFactor": {
                    "type": "number",
                    "isOptional": true
                },
                "hitSide": {
                    "type": "[number, number, number, number]",
                    "isOptional": true
                },
                "hitSound": {
                    "type": "ig.Sound",
                    "isOptional": true
                },
                "terrain": {
                    "type": "ig.TERRAIN",
                    "isOptional": true
                },
                "anims": {
                    "type": "ig.AnimationSheet.Settings",
                    "isOptional": false
                }
            },
            "functions": {
                "hitCondition": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "entity",
                            "type": "ig.Entity",
                            "isOptional": false
                        },
                        {
                            "name": "regenDestruct",
                            "type": "ig.ENTITY.RegenDestruct",
                            "isOptional": false
                        }
                    ]
                },
                "onCollision": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "entity",
                            "type": "ig.Entity",
                            "isOptional": false
                        },
                        {
                            "name": "dir",
                            "type": "Vec2",
                            "isOptional": false
                        },
                        {
                            "name": "regenDestruct",
                            "type": "ig.ENTITY.RegenDestruct",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": []
        },
        "sc.RegenDestructType.boom": {
            "fields": {
                "sheet": {
                    "type": "string",
                    "isOptional": false
                },
                "name": {
                    "type": "string",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.REGEN_DESTRUCT_TYPE": {
            "fields": {
                "iceBlock": {
                    "type": "sc.RegenDestructType",
                    "isOptional": false
                },
                "flame": {
                    "type": "sc.RegenDestructType",
                    "isOptional": false
                },
                "shock": {
                    "type": "sc.RegenDestructType",
                    "isOptional": false
                },
                "ferroHeat": {
                    "type": "sc.RegenDestructType",
                    "isOptional": false
                },
                "ferroCold": {
                    "type": "sc.RegenDestructType",
                    "isOptional": false
                },
                "ferroShock": {
                    "type": "sc.RegenDestructType",
                    "isOptional": false
                },
                "ferroWave": {
                    "type": "sc.RegenDestructType",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc": {
            "fields": {
                "REGEN_DESTRUCT_TYPE": {
                    "type": "REGEN_DESTRUCT_TYPE"
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ENTITY.RegenDestruct.Settings": {
            "fields": {
                "desType": {
                    "type": "keyof typeof sc.REGEN_DESTRUCT_TYPE",
                    "isOptional": false
                },
                "activeCondition": {
                    "type": "string",
                    "isOptional": false
                },
                "onDestroyIncrease": {
                    "type": "string",
                    "isOptional": false
                },
                "blockNavMap": {
                    "type": "boolean",
                    "isOptional": true
                },
                "regenTime": {
                    "type": "number",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": [
                "ig.Entity.Settings"
            ]
        },
        "ig.ENTITY.RegenDestruct": {
            "fields": {
                "hitSide": {
                    "type": "[number, number, number, number]",
                    "isOptional": false
                },
                "conditionFunction": {
                    "type": "sc.RegenDestructType['hitCondition']",
                    "isOptional": false
                },
                "effects": {
                    "type": "{\n          base: ig.EffectSheet;\n          boom: Nullable<ig.EffectSheet>;\n          debris: Nullable<ig.EffectSheet>;\n          regen: Nullable<ig.EffectSheet>;\n          hide: Nullable<ig.EffectSheet>;\n          baseHandle: Nullable<ig.ENTITY.Effect>;\n          boomHandle: Nullable<ig.ENTITY.Effect>;\n          debrisHandle: Nullable<ig.ENTITY.Effect>;\n          regenHandle: Nullable<ig.ENTITY.Effect>;\n          hideHandle: Nullable<ig.ENTITY.Effect>;\n        }",
                    "isOptional": false
                },
                "blockNavMap": {
                    "type": "boolean",
                    "isOptional": false
                },
                "navBlocker": {
                    "type": "ig.NavBlocker",
                    "isOptional": false
                },
                "blinkTimer": {
                    "type": "number",
                    "isOptional": false
                },
                "regenMaxTime": {
                    "type": "number",
                    "isOptional": false
                },
                "regenTimer": {
                    "type": "number",
                    "isOptional": false
                },
                "collType": {
                    "type": "ig.COLLTYPE",
                    "isOptional": false
                },
                "collideCallback": {
                    "type": "sc.RegenDestructType['onCollision']",
                    "isOptional": false
                },
                "zHeight": {
                    "type": "number",
                    "isOptional": false
                },
                "onDestroyIncrease": {
                    "type": "string",
                    "isOptional": true
                },
                "_wm": {
                    "type": "ig.Config",
                    "isOptional": false
                },
                "dir": {
                    "type": "Vec2",
                    "isOptional": false
                }
            },
            "functions": {
                "onHideRequest": {
                    "returnType": "void",
                    "args": []
                },
                "startRegen": {
                    "returnType": "void",
                    "args": []
                },
                "isActive": {
                    "returnType": "boolean",
                    "args": []
                },
                "regenerate": {
                    "returnType": "boolean",
                    "args": []
                },
                "regenComplete": {
                    "returnType": "void",
                    "args": []
                },
                "destroy": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "spawnEffects",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "startRegen",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "varsChanged": {
                    "returnType": "void",
                    "args": []
                },
                "throwDebris": {
                    "returnType": "void",
                    "args": []
                },
                "isBallDestroyer": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "collPos",
                            "type": "Vec3",
                            "isOptional": false
                        },
                        {
                            "name": "collRes",
                            "type": "{ dir: Vec2 }",
                            "isOptional": false
                        },
                        {
                            "name": "c_",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "init": {
                    "returnType": "RegenDestruct",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "ig.ENTITY.RegenDestruct.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.AnimatedEntity",
                "ig.EffectSheet.EventCallback"
            ]
        },
        "ig.ENTITY.RegenDestruct.effects": {
            "fields": {
                "base": {
                    "type": "ig.EffectSheet",
                    "isOptional": false
                },
                "boom": {
                    "type": "Nullable<ig.EffectSheet>",
                    "isOptional": false
                },
                "debris": {
                    "type": "Nullable<ig.EffectSheet>",
                    "isOptional": false
                },
                "regen": {
                    "type": "Nullable<ig.EffectSheet>",
                    "isOptional": false
                },
                "hide": {
                    "type": "Nullable<ig.EffectSheet>",
                    "isOptional": false
                },
                "baseHandle": {
                    "type": "Nullable<ig.ENTITY.Effect>",
                    "isOptional": false
                },
                "boomHandle": {
                    "type": "Nullable<ig.ENTITY.Effect>",
                    "isOptional": false
                },
                "debrisHandle": {
                    "type": "Nullable<ig.ENTITY.Effect>",
                    "isOptional": false
                },
                "regenHandle": {
                    "type": "Nullable<ig.ENTITY.Effect>",
                    "isOptional": false
                },
                "hideHandle": {
                    "type": "Nullable<ig.ENTITY.Effect>",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ENTITY": {
            "fields": {
                "RegenDestruct": {
                    "type": "RegenDestructConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.puzzle.entities.rotate-blocker": {},
    "game.feature.puzzle.entities.sliding-block": {},
    "game.feature.puzzle.entities.spiderweb": {},
    "game.feature.puzzle.entities.steam-pipes": {},
    "game.feature.puzzle.entities.tesla-coil": {
        "ig.ENTITY.TeslaCoil.Settings": {
            "fields": {
                "coilType": {
                    "type": "keyof typeof sc.TESLA_COIL_TYPE",
                    "isOptional": true
                },
                "varOnCharge": {
                    "type": "string",
                    "isOptional": true
                },
                "varOnDischarge": {
                    "type": "string",
                    "isOptional": true
                },
                "align": {
                    "type": "string",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": [
                "ig.Entity.Settings"
            ]
        },
        "ig.ENTITY.TeslaCoil": {
            "fields": {
                "chargeTimer": {
                    "type": "number",
                    "isOptional": false
                },
                "chargeHitExceptions": {
                    "type": "Nullable<ig.ENTITY.TeslaCoil | ig.ENTITY.OneTimeSwitch>",
                    "isOptional": false
                },
                "source": {
                    "type": "boolean",
                    "isOptional": false
                },
                "fast": {
                    "type": "boolean",
                    "isOptional": false
                },
                "effects": {
                    "type": "{ sheet: ig.EffectSheet; handle: Nullable<ig.ENTITY.Effect> }",
                    "isOptional": false
                },
                "effectAlign": {
                    "type": "string",
                    "isOptional": true
                },
                "_wm": {
                    "type": "ig.Config",
                    "isOptional": false
                },
                "dischargeAction": {
                    "type": "Nullable<ig.ENTITY.TeslaCoil.DischargeAction>",
                    "isOptional": false
                }
            },
            "functions": {
                "onHideRequest": {
                    "returnType": "void",
                    "args": []
                },
                "extendCharge": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "chargeHitExceptions",
                            "type": "this['chargeHitExceptions']",
                            "isOptional": false
                        }
                    ]
                },
                "discharge": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "entities",
                            "type": "(ig.ENTITY.TeslaCoil | ig.ENTITY.OneTimeSwitch)[]",
                            "isOptional": false
                        }
                    ]
                },
                "ballHit": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "entity",
                            "type": "ig.Entity",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "TeslaCoil",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "ig.ENTITY.TeslaCoil.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.AnimatedEntity",
                "sc.Combat.ActionAttached",
                "ig.EffectSheet.EventCallback"
            ]
        },
        "ig.ENTITY.TeslaCoil.effects": {
            "fields": {
                "sheet": {
                    "type": "ig.EffectSheet",
                    "isOptional": false
                },
                "handle": {
                    "type": "Nullable<ig.ENTITY.Effect>",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ENTITY": {
            "fields": {
                "TeslaCoil": {
                    "type": "TeslaCoilConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.puzzle.entities.thermo-pole": {
        "sc.ElementPoleGroups.Group": {
            "fields": {
                "currentBall": {
                    "type": "ig.ENTITY.Ball | null",
                    "isOptional": false
                },
                "hitCount": {
                    "type": "number",
                    "isOptional": false
                },
                "poles": {
                    "type": "ig.ENTITY.ElementPole[]",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.ElementPoleGroups": {
            "fields": {},
            "functions": {
                "getGroup": {
                    "returnType": "ElementPoleGroups.Group",
                    "args": [
                        {
                            "name": "group",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "onPoleHit": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "pole",
                            "type": "ig.ENTITY.ElementPole",
                            "isOptional": false
                        },
                        {
                            "name": "ball",
                            "type": "ig.ENTITY.Ball",
                            "isOptional": false
                        },
                        {
                            "name": "alreadyHit",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "onCancelCheck": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "pole",
                            "type": "ig.ENTITY.ElementPole",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": []
        },
        "sc": {
            "fields": {
                "ElementPoleGroups": {
                    "type": "ElementPoleGroups"
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ENTITY.ElementPole.Charge": {
            "fields": {
                "element": {
                    "type": "sc.ELEMENT",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ENTITY.ElementPole.Settings": {
            "fields": {
                "group": {
                    "type": "string",
                    "isOptional": false
                },
                "spawnCondition": {
                    "type": "string",
                    "isOptional": true
                },
                "poleType": {
                    "type": "keyof typeof sc.TERMO_POLE_TYPE",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": [
                "ig.Entity.Settings"
            ]
        },
        "ig.ENTITY.ElementPole": {
            "fields": {
                "group": {
                    "type": "string",
                    "isOptional": false
                },
                "charge": {
                    "type": "ElementPole.Charge",
                    "isOptional": false
                }
            },
            "functions": {
                "ballHit": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "ball",
                            "type": "ig.ENTITY.Ball",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "ElementPole",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "ig.ENTITY.ElementPole.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.AnimatedEntity"
            ]
        },
        "ig.ENTITY": {
            "fields": {
                "ElementPole": {
                    "type": "ElementPoleConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.puzzle.entities.water-block": {},
    "game.feature.puzzle.entities.water-bubble": {
        "ig.ENTITY.WaterBubblePanel.Settings": {
            "fields": {
                "coalCoolTime": {
                    "type": "number",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": [
                "ig.Entity.Settings"
            ]
        },
        "ig.ENTITY.WaterBubblePanel": {
            "fields": {},
            "functions": {
                "init": {
                    "returnType": "WaterBubblePanel",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "ig.ENTITY.WaterBubblePanel.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.AnimatedEntity"
            ]
        },
        "ig.ENTITY": {
            "fields": {
                "WaterBubblePanel": {
                    "type": "WaterBubblePanelConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.puzzle.entities.wave-teleport": {
        "ig.ENTITY.WaveTeleport.Teleportable": {
            "fields": {},
            "functions": {
                "doTeleport": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "portal",
                            "type": "ig.ENTITY.WaveTeleport",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": []
        },
        "ig.ENTITY.WaveTeleport.Settings": {
            "fields": {},
            "functions": {},
            "parents": [
                "ig.Entity.Settings"
            ]
        },
        "ig.ENTITY.WaveTeleport": {
            "fields": {},
            "functions": {
                "init": {
                    "returnType": "WaveTeleport",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "ig.ENTITY.WaveTeleport.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.AnimatedEntity"
            ]
        },
        "ig.ENTITY": {
            "fields": {
                "WaveTeleport": {
                    "type": "WaveTeleportConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.puzzle.plug-in": {},
    "game.feature.quest.plug-in": {},
    "game.feature.quest.quest-types": {
        "sc.QuestSubTaskBase": {
            "fields": {
                "type": {
                    "type": "string",
                    "isOptional": false
                }
            },
            "functions": {
                "initState": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "b_",
                            "type": "unknown",
                            "isOptional": false
                        }
                    ]
                },
                "updateState": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "b_",
                            "type": "unknown",
                            "isOptional": false
                        },
                        {
                            "name": "a_",
                            "type": "unknown",
                            "isOptional": false
                        },
                        {
                            "name": "d_",
                            "type": "unknown",
                            "isOptional": false
                        },
                        {
                            "name": "c_",
                            "type": "unknown",
                            "isOptional": false
                        }
                    ]
                },
                "getCurrentValue": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "b_",
                            "type": "unknown",
                            "isOptional": false
                        },
                        {
                            "name": "a_",
                            "type": "unknown",
                            "isOptional": false
                        }
                    ]
                },
                "finalize": {
                    "returnType": "void",
                    "args": []
                },
                "isFulfilled": {
                    "returnType": "boolean",
                    "args": []
                },
                "reset": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "b_",
                            "type": "unknown",
                            "isOptional": false
                        },
                        {
                            "name": "a_",
                            "type": "unknown",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "QuestSubTaskBase",
                    "args": [
                        {
                            "name": "type",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "sc": {
            "fields": {
                "QuestSubTaskBase": {
                    "type": "QuestSubTaskBaseConstructor"
                },
                "QUEST_SUB_TASK": {
                    "type": "QuestSubTasks"
                },
                "QuestTask": {
                    "type": "QuestTaskConstructor"
                },
                "Quest": {
                    "type": "QuestConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.QUEST_SUB_TASK.COLLECT.Settings": {
            "fields": {
                "type": {
                    "type": "'COLLECT'",
                    "isOptional": false
                },
                "item": {
                    "type": "sc.ItemID",
                    "isOptional": false
                },
                "amount": {
                    "type": "number",
                    "isOptional": true
                },
                "keepItems": {
                    "type": "boolean",
                    "isOptional": true
                },
                "hideName": {
                    "type": "boolean",
                    "isOptional": true
                },
                "hideMax": {
                    "type": "boolean",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.QUEST_SUB_TASK.COLLECT": {
            "fields": {
                "_wm": {
                    "type": "ig.Config",
                    "isOptional": false
                },
                "item": {
                    "type": "sc.ItemID",
                    "isOptional": false
                },
                "amount": {
                    "type": "number",
                    "isOptional": false
                },
                "keepItems": {
                    "type": "boolean",
                    "isOptional": false
                },
                "hideName": {
                    "type": "boolean",
                    "isOptional": false
                },
                "hideMax": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "finalize": {
                    "returnType": "void",
                    "args": []
                },
                "reset": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "COLLECT",
                    "args": [
                        {
                            "name": "settings",
                            "type": "sc.QUEST_SUB_TASK.COLLECT.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "sc.QuestSubTaskBase"
            ]
        },
        "sc.QUEST_SUB_TASK.KILL.Settings": {
            "fields": {
                "type": {
                    "type": "'KILL'",
                    "isOptional": false
                },
                "enemy": {
                    "type": "string",
                    "isOptional": false
                },
                "amount": {
                    "type": "number",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.QUEST_SUB_TASK.KILL": {
            "fields": {
                "_wm": {
                    "type": "ig.Config",
                    "isOptional": false
                },
                "enemy": {
                    "type": "number",
                    "isOptional": false
                },
                "amount": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "reset": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "b_",
                            "type": "unknown",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "KILL",
                    "args": [
                        {
                            "name": "settings",
                            "type": "sc.QUEST_SUB_TASK.KILL.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "sc.QuestSubTaskBase"
            ]
        },
        "sc.QUEST_SUB_TASK.CONDITION.Settings": {
            "fields": {
                "type": {
                    "type": "'CONDITION'",
                    "isOptional": false
                },
                "label": {
                    "type": "string",
                    "isOptional": false
                },
                "text": {
                    "type": "ig.LangLabel.Data",
                    "isOptional": true
                },
                "shortText": {
                    "type": "ig.LangLabel.Data",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.QUEST_SUB_TASK.CONDITION": {
            "fields": {
                "_wm": {
                    "type": "ig.Config",
                    "isOptional": false
                },
                "text": {
                    "type": "ig.LangLabel | string",
                    "isOptional": false
                },
                "short": {
                    "type": "Nullable<ig.LangLabel>",
                    "isOptional": false
                },
                "label": {
                    "type": "Nullable<ig.LangLabel>",
                    "isOptional": false
                }
            },
            "functions": {
                "reset": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "b_",
                            "type": "unknown",
                            "isOptional": false
                        },
                        {
                            "name": "a_",
                            "type": "unknown",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "CONDITION",
                    "args": [
                        {
                            "name": "settings",
                            "type": "sc.QUEST_SUB_TASK.CONDITION.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "sc.QuestSubTaskBase"
            ]
        },
        "sc.QUEST_SUB_TASK.QUEST.Settings": {
            "fields": {
                "type": {
                    "type": "'QUEST'",
                    "isOptional": false
                },
                "quest": {
                    "type": "string",
                    "isOptional": false
                },
                "text": {
                    "type": "ig.LangLabel.Data",
                    "isOptional": true
                },
                "shortText": {
                    "type": "ig.LangLabel.Data",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.QUEST_SUB_TASK.QUEST": {
            "fields": {
                "_wm": {
                    "type": "ig.Config",
                    "isOptional": false
                },
                "quest": {
                    "type": "string",
                    "isOptional": false
                },
                "text": {
                    "type": "ig.LangLabel | string",
                    "isOptional": false
                },
                "short": {
                    "type": "Nullable<ig.LangLabel>",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "QUEST",
                    "args": [
                        {
                            "name": "settings",
                            "type": "sc.QUEST_SUB_TASK.QUEST.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "sc.QuestSubTaskBase"
            ]
        },
        "sc.QUEST_SUB_TASK.LANDMARK.Settings": {
            "fields": {
                "type": {
                    "type": "'LANDMARK'",
                    "isOptional": false
                },
                "area": {
                    "type": "string",
                    "isOptional": false
                },
                "amount": {
                    "type": "number",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.QUEST_SUB_TASK.LANDMARK": {
            "fields": {
                "_wm": {
                    "type": "ig.Config",
                    "isOptional": false
                },
                "area": {
                    "type": "number",
                    "isOptional": false
                },
                "amount": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "LANDMARK",
                    "args": [
                        {
                            "name": "settings",
                            "type": "sc.QUEST_SUB_TASK.LANDMARK.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "sc.QuestSubTaskBase"
            ]
        },
        "sc.QuestSubTasks": {
            "fields": {
                "COLLECT": {
                    "type": "sc.QUEST_SUB_TASK.COLLECTConstructor",
                    "isOptional": false
                },
                "KILL": {
                    "type": "sc.QUEST_SUB_TASK.KILLConstructor",
                    "isOptional": false
                },
                "CONDITION": {
                    "type": "sc.QUEST_SUB_TASK.CONDITIONConstructor",
                    "isOptional": false
                },
                "QUEST": {
                    "type": "sc.QUEST_SUB_TASK.QUESTConstructor",
                    "isOptional": false
                },
                "LANDMARK": {
                    "type": "sc.QUEST_SUB_TASK.LANDMARKConstructor",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.QuestTask.TaskSettings": {
            "fields": {
                "task": {
                    "type": "ig.LangLabel.Data",
                    "isOptional": false
                },
                "subTasks": {
                    "type": "ConstructorParameters<QuestSubTasks[keyof QuestSubTasks]>[0][]",
                    "isOptional": false
                },
                "skipNotify": {
                    "type": "boolean",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.QuestTask": {
            "fields": {
                "task": {
                    "type": "ig.LangLabel",
                    "isOptional": false
                },
                "subTasks": {
                    "type": "InstanceType<QuestSubTasks[keyof QuestSubTasks]>",
                    "isOptional": false
                },
                "containsCollect": {
                    "type": "boolean",
                    "isOptional": false
                },
                "subQuests": {
                    "type": "Nullable<string[]>",
                    "isOptional": false
                },
                "skipNotify": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "QuestTask",
                    "args": [
                        {
                            "name": "subTasks",
                            "type": "sc.QuestTask.TaskSettings",
                            "isOptional": false
                        },
                        {
                            "name": "quest",
                            "type": "sc.Quest",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "sc.Quest.Rewards": {
            "fields": {
                "exp": {
                    "type": "ExpReward",
                    "isOptional": false
                },
                "items": {
                    "type": "ItemReward[]",
                    "isOptional": false
                },
                "money": {
                    "type": "number",
                    "isOptional": false
                },
                "cp": {
                    "type": "{\n          amount: number;\n          element: keyof typeof sc.ELEMENT | 'ALL' | 'ALL_ELEMENTS';\n        }",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.Quest.Rewards.cp": {
            "fields": {
                "amount": {
                    "type": "number",
                    "isOptional": false
                },
                "element": {
                    "type": "keyof typeof sc.ELEMENT | 'ALL' | 'ALL_ELEMENTS'",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.Quest.ExpReward": {
            "fields": {
                "bonus": {
                    "type": "number",
                    "isOptional": false
                },
                "exp": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.Quest.ItemReward": {
            "fields": {
                "id": {
                    "type": "sc.ItemID",
                    "isOptional": false
                },
                "amount": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.Quest.HubSettings": {
            "fields": {
                "character": {
                    "type": "Nullable<string>",
                    "isOptional": false
                },
                "hideChar": {
                    "type": "boolean",
                    "isOptional": false
                },
                "location": {
                    "type": "ig.LangLabel",
                    "isOptional": false
                },
                "condition": {
                    "type": "string",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.Quest.Settings": {
            "fields": {
                "level": {
                    "type": "number",
                    "isOptional": true
                },
                "name": {
                    "type": "ig.LangLabel.Data",
                    "isOptional": false
                },
                "description": {
                    "type": "ig.LangLabel.Data",
                    "isOptional": false
                },
                "briefing": {
                    "type": "ig.LangLabel.Data",
                    "isOptional": false
                },
                "rewards": {
                    "type": "sc.Quest['rewards']",
                    "isOptional": true
                },
                "noTrack": {
                    "type": "boolean",
                    "isOptional": true
                },
                "extension": {
                    "type": "boolean",
                    "isOptional": true
                },
                "order": {
                    "type": "number",
                    "isOptional": true
                },
                "person": {
                    "type": "ig.LangLabel.Data",
                    "isOptional": true
                },
                "hideRewards": {
                    "type": "boolean",
                    "isOptional": true
                },
                "area": {
                    "type": "string",
                    "isOptional": true
                },
                "parent": {
                    "type": "sc.Quest['parentQuest']",
                    "isOptional": true
                },
                "elite": {
                    "type": "boolean",
                    "isOptional": true
                },
                "mandatory": {
                    "type": "boolean",
                    "isOptional": true
                },
                "hubSettings": {
                    "type": "Partial<sc.Quest.HubSettings>",
                    "isOptional": true
                },
                "tasks": {
                    "type": "sc.QuestTask.TaskSettings[]",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.Quest": {
            "fields": {
                "name": {
                    "type": "ig.LangLabel",
                    "isOptional": false
                },
                "level": {
                    "type": "number",
                    "isOptional": false
                },
                "order": {
                    "type": "number",
                    "isOptional": false
                },
                "description": {
                    "type": "ig.LangLabel.Data",
                    "isOptional": false
                },
                "endDescription": {
                    "type": "ig.LangLabel.Data",
                    "isOptional": false
                },
                "tasks": {
                    "type": "sc.QuestTask",
                    "isOptional": false
                },
                "rewards": {
                    "type": "sc.Quest.Rewards",
                    "isOptional": false
                },
                "id": {
                    "type": "string",
                    "isOptional": false
                },
                "person": {
                    "type": "ig.LangLabel",
                    "isOptional": false
                },
                "personAfter": {
                    "type": "ig.LangLabel",
                    "isOptional": true
                },
                "labelList": {
                    "type": "ig.LangLabel[]",
                    "isOptional": false
                },
                "hideRewards": {
                    "type": "boolean",
                    "isOptional": false
                },
                "area": {
                    "type": "Nullable<string>",
                    "isOptional": false
                },
                "noTrack": {
                    "type": "boolean",
                    "isOptional": false
                },
                "extension": {
                    "type": "boolean",
                    "isOptional": false
                },
                "parentQuest": {
                    "type": "Nullable<string>",
                    "isOptional": false
                },
                "elite": {
                    "type": "boolean",
                    "isOptional": false
                },
                "mandatory": {
                    "type": "boolean",
                    "isOptional": false
                },
                "hubSettings": {
                    "type": "sc.Quest.HubSettings",
                    "isOptional": false
                },
                "location": {
                    "type": "{ area: string; map: string }",
                    "isOptional": false
                },
                "timeStamp": {
                    "type": "number",
                    "isOptional": false
                },
                "character": {
                    "type": "Nullable<string>",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "Quest",
                    "args": [
                        {
                            "name": "settings",
                            "type": "sc.Quest.Settings",
                            "isOptional": false
                        },
                        {
                            "name": "id",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "sc.Quest.location": {
            "fields": {
                "area": {
                    "type": "string",
                    "isOptional": false
                },
                "map": {
                    "type": "string",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.quick-menu.entities.analyzable": {
        "ig.ENTITY.Analyzable.Settings": {
            "fields": {
                "analType": {
                    "type": "'DEFAULT' | 'QUEST' | 'SPECIAL'",
                    "isOptional": true
                },
                "visible": {
                    "type": "boolean",
                    "isOptional": true
                },
                "text": {
                    "type": "ig.LangLabel.Data",
                    "isOptional": false
                },
                "distance": {
                    "type": "number",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ENTITY.Analyzable": {
            "fields": {
                "color": {
                    "type": "sc.ANALYSIS_COLORS",
                    "isOptional": false
                },
                "text": {
                    "type": "ig.LangLabel.Data",
                    "isOptional": false
                },
                "visible": {
                    "type": "boolean",
                    "isOptional": false
                },
                "distance": {
                    "type": "number",
                    "isOptional": true
                }
            },
            "functions": {
                "isQuickMenuVisible": {
                    "returnType": "boolean",
                    "args": []
                },
                "getQuickMenuSettings": {
                    "returnType": "Omit<sc.QuickMenuTypesBaseSettings, 'entity'>",
                    "args": []
                },
                "init": {
                    "returnType": "Analyzable",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "ig.ENTITY.Analyzable.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Entity"
            ]
        },
        "ig.ENTITY": {
            "fields": {
                "Analyzable": {
                    "type": "AnalyzableConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.quick-menu.gui.quick-item-menu": {
        "sc.QuickItemArrow": {
            "fields": {
                "gfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "flipX": {
                    "type": "boolean",
                    "isOptional": false
                },
                "flipY": {
                    "type": "boolean",
                    "isOptional": false
                },
                "bottomAnchor": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "setPosition": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "flipX",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "flipY",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "bottomAnchor",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "init": {
                    "returnType": "QuickItemArrow",
                    "args": []
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc": {
            "fields": {
                "QuickItemArrow": {
                    "type": "QuickItemArrowConstructor"
                },
                "QuickItemMenu": {
                    "type": "QuickItemMenuConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.QuickItemMenu": {
            "fields": {
                "gfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "ninepatch": {
                    "type": "ig.NinePatch",
                    "isOptional": false
                },
                "base": {
                    "type": "ig.GuiHook",
                    "isOptional": false
                },
                "anchor": {
                    "type": "ig.GuiHook",
                    "isOptional": false
                },
                "list": {
                    "type": "sc.ButtonListBox",
                    "isOptional": false
                },
                "arrow": {
                    "type": "sc.QuickItemArrow",
                    "isOptional": false
                },
                "buttongroup": {
                    "type": "sc.ButtonGroup",
                    "isOptional": false
                },
                "_hidden": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "updateList": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "skipSounds",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "addFavoriteOverlay": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "button",
                            "type": "sc.ItemBoxButton",
                            "isOptional": false
                        }
                    ]
                },
                "onSelection": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "button",
                            "type": "sc.ItemBoxButton",
                            "isOptional": false
                        }
                    ]
                },
                "onPress": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "button",
                            "type": "sc.ItemBoxButton",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "QuickItemMenu",
                    "args": [
                        {
                            "name": "baseGui",
                            "type": "ig.GuiElementBase",
                            "isOptional": false
                        },
                        {
                            "name": "anchorGui",
                            "type": "ig.GuiElementBase",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.BoxGui",
                "sc.Model.Observer"
            ]
        }
    },
    "game.feature.quick-menu.gui.quick-menu": {
        "sc.QuickMenu": {
            "fields": {
                "ringmenu": {
                    "type": "sc.QuickRingMenu",
                    "isOptional": false
                },
                "items": {
                    "type": "sc.QuickItemMenu",
                    "isOptional": false
                },
                "analysis": {
                    "type": "sc.QuickMenuAnalysis",
                    "isOptional": false
                },
                "party": {
                    "type": "sc.QuickPartyStrategyMenu",
                    "isOptional": false
                },
                "location": {
                    "type": "sc.QuickLocationBox",
                    "isOptional": false
                },
                "info": {
                    "type": "sc.InfoBar",
                    "isOptional": false
                },
                "buffInfo": {
                    "type": "sc.BuffInfo",
                    "isOptional": false
                },
                "buffStats": {
                    "type": "sc.QuickMenuBuffsGui",
                    "isOptional": false
                },
                "backButton": {
                    "type": "null",
                    "isOptional": false
                }
            },
            "functions": {
                "_checkBackButtonInput": {
                    "returnType": "boolean",
                    "args": []
                },
                "_enterMenu": {
                    "returnType": "void",
                    "args": []
                },
                "_exitMenu": {
                    "returnType": "void",
                    "args": []
                },
                "_setInfoBarAndLocation": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "QuickMenu",
                    "args": []
                }
            },
            "parents": [
                "ig.GuiElementBase",
                "sc.Model.Observer"
            ]
        },
        "sc": {
            "fields": {
                "QuickMenu": {
                    "type": "QuickMenuConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.quick-menu.gui.quick-misc": {
        "sc.QuickMenuBuffsGui": {
            "fields": {
                "ninepatch": {
                    "type": "ig.NinePatch",
                    "isOptional": false
                }
            },
            "functions": {
                "show": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "repopulate",
                            "type": "true",
                            "isOptional": false
                        }
                    ]
                },
                "hide": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "skipTransition",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "init": {
                    "returnType": "QuickMenuBuffsGui",
                    "args": []
                }
            },
            "parents": [
                "ig.BoxGui"
            ]
        },
        "sc": {
            "fields": {
                "QuickMenuBuffsGui": {
                    "type": "QuickMenuBuffsGuiConstructor"
                },
                "QuickBuffEntry": {
                    "type": "QuickBuffEntryConstructor"
                },
                "QuickLocationBox": {
                    "type": "QuickLocationBoxConstructor"
                },
                "QuickFocusScreen": {
                    "type": "QuickFocusScreenConstructor"
                },
                "QuickArrowBox": {
                    "type": "QuickArrowBoxConstructor"
                },
                "QuickBorderArrowLevelBox": {
                    "type": "QuickBorderArrowLevelBoxConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.QuickBuffEntry": {
            "fields": {
                "icon": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "description": {
                    "type": "unknown",
                    "isOptional": false
                },
                "statName": {
                    "type": "sc.TextGui",
                    "isOptional": false
                }
            },
            "functions": {
                "getStatName": {
                    "returnType": "string",
                    "args": [
                        {
                            "name": "type",
                            "type": "sc.StatParamType",
                            "isOptional": false
                        },
                        {
                            "name": "changeType",
                            "type": "sc.STAT_CHANGE_TYPE",
                            "isOptional": false
                        },
                        {
                            "name": "isDescription",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "getStatValue": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "type",
                            "type": "sc.StatParamType",
                            "isOptional": false
                        },
                        {
                            "name": "value",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "changeType",
                            "type": "sc.STAT_CHANGE_TYPE",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "QuickBuffEntry",
                    "args": [
                        {
                            "name": "settings",
                            "type": "sc.StatChangeSettings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc.QuickLocationBox": {
            "fields": {
                "ninepatch": {
                    "type": "ig.NinePatch",
                    "isOptional": false
                },
                "location": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "hasTemp": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "show": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "doTransition",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "hide": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "skipTransition",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "forceHide": {
                    "returnType": "void",
                    "args": []
                },
                "onCutsceneStart": {
                    "returnType": "void",
                    "args": []
                },
                "updateLocationName": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "QuickLocationBox",
                    "args": []
                }
            },
            "parents": [
                "ig.BoxGui"
            ]
        },
        "sc.QuickFocusScreen": {
            "fields": {
                "subGuis": {
                    "type": "ig.GuiElementBase[]",
                    "isOptional": false
                }
            },
            "functions": {
                "addSubGui": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "gui",
                            "type": "ig.GuiElementBase",
                            "isOptional": false
                        }
                    ]
                },
                "resetSubGuis": {
                    "returnType": "void",
                    "args": []
                },
                "reset": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "QuickFocusScreen",
                    "args": []
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc.QUICK_INFO_BOXES.Enemy": {
            "fields": {
                "title": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "arrow": {
                    "type": "sc.QuickItemArrow",
                    "isOptional": false
                },
                "baseHp": {
                    "type": "sc.EnemyBaseParamLine",
                    "isOptional": false
                },
                "baseAttack": {
                    "type": "sc.EnemyBaseParamLine",
                    "isOptional": false
                },
                "baseDefense": {
                    "type": "sc.EnemyBaseParamLine",
                    "isOptional": false
                },
                "baseFocus": {
                    "type": "sc.EnemyBaseParamLine",
                    "isOptional": false
                },
                "resistance": {
                    "type": "sc.EnemyResistence",
                    "isOptional": false
                },
                "anchor": {
                    "type": "null",
                    "isOptional": false
                },
                "enemy": {
                    "type": "null",
                    "isOptional": false
                }
            },
            "functions": {
                "setData": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "enemyType",
                            "type": "keyof typeof sc.combat.enemyDataList",
                            "isOptional": false
                        },
                        {
                            "name": "enemy",
                            "type": "ig.ENTITY.Enemy",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "Enemy",
                    "args": []
                }
            },
            "parents": [
                "ig.BoxGui"
            ]
        },
        "sc.QUICK_INFO_BOXES": {
            "fields": {
                "Enemy": {
                    "type": "EnemyConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.QuickArrowBox": {
            "fields": {
                "name": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "arrowOff": {
                    "type": "Vec2",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "QuickArrowBox",
                    "args": [
                        {
                            "name": "text",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "notFixedHeight",
                            "type": "boolean",
                            "isOptional": false
                        },
                        {
                            "name": "maxWidth",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc.QuickBorderArrowLevelBox": {
            "fields": {
                "ninepatch": {
                    "type": "ig.NinePatch",
                    "isOptional": false
                },
                "levelNumber": {
                    "type": "sc.NumberGui",
                    "isOptional": false
                },
                "displayColor": {
                    "type": "number",
                    "isOptional": false
                },
                "sizeTransition": {
                    "type": "ig.GuiHook.SizeTransition",
                    "isOptional": false
                },
                "nameVisible": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "doSizeTransition": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "width",
                            "type": "Nullable<number>",
                            "isOptional": false
                        },
                        {
                            "name": "height",
                            "type": "Nullable<number>",
                            "isOptional": false
                        },
                        {
                            "name": "time",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "timeFunction",
                            "type": "KeySpline",
                            "isOptional": false
                        },
                        {
                            "name": "delay",
                            "type": "Nullable<number>",
                            "isOptional": false
                        }
                    ]
                },
                "getLevelColor": {
                    "returnType": "sc.GUI_NUMBER_COLOR",
                    "args": [
                        {
                            "name": "enemyLevel",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "QuickBorderArrowLevelBox",
                    "args": [
                        {
                            "name": "enemyName",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "entity",
                            "type": "ig.ENTITY.Enemy",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        }
    },
    "game.feature.quick-menu.gui.quick-party": {
        "sc.QuickPartyStrategyMenu": {
            "fields": {
                "gfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "ninepatch": {
                    "type": "ig.NinePatch",
                    "isOptional": false
                },
                "base": {
                    "type": "ig.GuiHook",
                    "isOptional": false
                },
                "anchor": {
                    "type": "ig.GuiHook",
                    "isOptional": false
                },
                "arrow": {
                    "type": "sc.QuickItemArrow",
                    "isOptional": false
                },
                "rows": {
                    "type": "sc.ButtonGui[][]",
                    "isOptional": false
                },
                "currentText": {
                    "type": "sc.TextGui[]",
                    "isOptional": false
                },
                "buttongroup": {
                    "type": "sc.RowButtonGroup",
                    "isOptional": false
                },
                "_hidden": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "addRow": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "langKey",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "row",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "createButton": {
                    "returnType": "sc.ButtonGui",
                    "args": [
                        {
                            "name": "langKey",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "id",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "row",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "type",
                            "type": "sc.ButtonGui.Type",
                            "isOptional": true
                        }
                    ]
                },
                "resetRow": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "strategy",
                            "type": "keyof sc.PartyModel.StrategyKeys",
                            "isOptional": false
                        },
                        {
                            "name": "row",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "resetButtons": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "except",
                            "type": "sc.ButtonGui",
                            "isOptional": false
                        },
                        {
                            "name": "buttons",
                            "type": "sc.ButtonGui",
                            "isOptional": false
                        }
                    ]
                },
                "getButtonIndex": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "strategy",
                            "type": "sc.QuickPartyStrategyMenu.GetButtonIndex1Argument",
                            "isOptional": false
                        },
                        {
                            "name": "row",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "onSelection": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "button",
                            "type": "sc.ButtonGui",
                            "isOptional": false
                        }
                    ]
                },
                "onPress": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "button",
                            "type": "sc.ButtonGui",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "QuickPartyStrategyMenu",
                    "args": [
                        {
                            "name": "base",
                            "type": "ig.GuiElementBase",
                            "isOptional": false
                        },
                        {
                            "name": "anchor",
                            "type": "ig.GuiElementBase",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.BoxGui",
                "sc.Model.Observer"
            ]
        },
        "sc": {
            "fields": {
                "QuickPartyStrategyMenu": {
                    "type": "QuickPartyStrategyMenuConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.quick-menu.gui.quick-screen-types": {
        "sc.QuickMenuTypesBase": {
            "fields": {
                "type": {
                    "type": "string",
                    "isOptional": false
                },
                "entity": {
                    "type": "ig.Entity",
                    "isOptional": false
                },
                "screen": {
                    "type": "sc.QuickFocusScreen",
                    "isOptional": false
                },
                "focusable": {
                    "type": "boolean",
                    "isOptional": false
                },
                "showType": {
                    "type": "sc.SHOW_TYPE",
                    "isOptional": false
                },
                "color": {
                    "type": "sc.ANALYSIS_COLORS",
                    "isOptional": false
                },
                "typeIcon": {
                    "type": "ig.ImageGui",
                    "isOptional": false
                }
            },
            "functions": {
                "isMouseOver": {
                    "returnType": "boolean",
                    "args": []
                },
                "setIconColor": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "color",
                            "type": "sc.ANALYSIS_COLORS",
                            "isOptional": false
                        }
                    ]
                },
                "show": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "stateTransition",
                            "type": "string",
                            "isOptional": true
                        }
                    ]
                },
                "hide": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "stateTransition",
                            "type": "string",
                            "isOptional": true
                        }
                    ]
                },
                "alignGuiPosition": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": true
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": true
                        }
                    ]
                },
                "onAnalysisEnter": {
                    "returnType": "void",
                    "args": []
                },
                "onAnalysisExit": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "sc.QuickMenuTypesBase",
                    "args": [
                        {
                            "name": "type",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "Omit<QuickMenuTypesBaseSettings, 'entity'>",
                            "isOptional": false
                        },
                        {
                            "name": "screen",
                            "type": "sc.QuickFocusScreen",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.FocusGui"
            ]
        },
        "sc.QuickMenuTypesBaseSettings": {
            "fields": {
                "type": {
                    "type": "keyof typeof sc.QUICK_MENU_TYPES",
                    "isOptional": false
                },
                "entity": {
                    "type": "ig.Entity",
                    "isOptional": false
                },
                "displayName": {
                    "type": "string",
                    "isOptional": true
                },
                "displayTrigger": {
                    "type": "unknown",
                    "isOptional": true
                },
                "randomName": {
                    "type": "string",
                    "isOptional": true
                },
                "disabled": {
                    "type": "boolean",
                    "isOptional": true
                },
                "color": {
                    "type": "sc.ANALYSIS_COLORS",
                    "isOptional": true
                },
                "showType": {
                    "type": "sc.SHOW_TYPE",
                    "isOptional": true
                },
                "text": {
                    "type": "ig.LangLabel.Data",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "sc": {
            "fields": {
                "QuickMenuTypesBase": {
                    "type": "sc.QuickMenuTypesBaseConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.QUICK_MENU_TYPES.Analyzable": {
            "fields": {
                "nameGui": {
                    "type": "sc.QuickArrowBox",
                    "isOptional": false
                },
                "displayNameAllTime": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "Analyzable",
                    "args": [
                        {
                            "name": "type",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "sc.QuickMenuTypesBaseSettings",
                            "isOptional": false
                        },
                        {
                            "name": "screen",
                            "type": "sc.QuickFocusScreen",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "sc.QuickMenuTypesBase"
            ]
        },
        "sc.QUICK_MENU_TYPES": {
            "fields": {
                "Analyzable": {
                    "type": "AnalyzableConstructor"
                },
                "NPC": {
                    "type": "NPCConstructor"
                },
                "Enemy": {
                    "type": "EnemyConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.QUICK_MENU_TYPES.NPC": {
            "fields": {
                "nameGui": {
                    "type": "sc.QuickArrowBox",
                    "isOptional": false
                },
                "displayNameAllTime": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "NPC",
                    "args": [
                        {
                            "name": "type",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "sc.QuickMenuTypesBaseSettings",
                            "isOptional": false
                        },
                        {
                            "name": "screen",
                            "type": "sc.QuickFocusScreen",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "sc.QuickMenuTypesBase"
            ]
        },
        "sc.QUICK_MENU_TYPES.Enemy": {
            "fields": {
                "level": {
                    "type": "sc.QuickBorderArrowLevelBox",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "Enemy",
                    "args": [
                        {
                            "name": "type",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "sc.QuickMenuTypesBaseSettings",
                            "isOptional": false
                        },
                        {
                            "name": "screen",
                            "type": "sc.QuickFocusScreen",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "sc.QuickMenuTypesBase"
            ]
        }
    },
    "game.feature.quick-menu.gui.quick-screen": {
        "sc.QuickMenuAnalysisCursor": {
            "fields": {},
            "functions": {
                "moveTo": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "setPos",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "c_",
                            "type": "unknown",
                            "isOptional": true
                        }
                    ]
                },
                "init": {
                    "returnType": "QuickMenuAnalysisCursor",
                    "args": []
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc": {
            "fields": {
                "QuickMenuAnalysisCursor": {
                    "type": "QuickMenuAnalysisCursorConstructor"
                },
                "QuickMenuAnalysis": {
                    "type": "QuickMenuAnalysisConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.QuickMenuAnalysis": {
            "fields": {
                "gfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "buttonGroup": {
                    "type": "sc.MouseButtonGroup",
                    "isOptional": false
                },
                "cursor": {
                    "type": "sc.QuickMenuAnalysisCursor",
                    "isOptional": false
                },
                "entities": {
                    "type": "sc.QuickMenuTypesBase[]",
                    "isOptional": false
                },
                "iconContainer": {
                    "type": "ig.GuiElementBase",
                    "isOptional": false
                },
                "focusContainer": {
                    "type": "sc.QuickFocusScreen",
                    "isOptional": false
                },
                "corners": {
                    "type": "ig.ImageGui[]",
                    "isOptional": false
                },
                "background": {
                    "type": "ig.GuiElementBase",
                    "isOptional": false
                },
                "_cursorPos": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "entered": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "show": {
                    "returnType": "void",
                    "args": []
                },
                "hide": {
                    "returnType": "void",
                    "args": []
                },
                "enter": {
                    "returnType": "void",
                    "args": []
                },
                "exit": {
                    "returnType": "void",
                    "args": []
                },
                "focusCenter": {
                    "returnType": "void",
                    "args": []
                },
                "initCursor": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "pos",
                            "type": "Vec2",
                            "isOptional": false
                        }
                    ]
                },
                "limitCursorPos": {
                    "returnType": "void",
                    "args": []
                },
                "createCorner": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "flipX",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "flipY",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "init": {
                    "returnType": "QuickMenuAnalysis",
                    "args": []
                }
            },
            "parents": [
                "ig.GuiElementBase",
                "sc.Model.Observer"
            ]
        }
    },
    "game.feature.quick-menu.plug-in": {},
    "game.feature.quick-menu.quick-menu-model": {
        "sc.QuickMenuModel": {
            "fields": {
                "buttonInteract": {
                    "type": "ig.ButtonInteractEntry",
                    "isOptional": false
                },
                "activeState": {
                    "type": "boolean",
                    "isOptional": false
                },
                "currentState": {
                    "type": "sc.QUICK_MENU_STATE",
                    "isOptional": false
                },
                "previousState": {
                    "type": "sc.QUICK_MENU_STATE",
                    "isOptional": false
                },
                "visible": {
                    "type": "boolean",
                    "isOptional": false
                },
                "cursorMoved": {
                    "type": "boolean",
                    "isOptional": false
                },
                "cursor": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "analFocus": {
                    "type": "sc.QuickMenuTypesBase",
                    "isOptional": false
                },
                "itemIndex": {
                    "type": "number",
                    "isOptional": false
                },
                "infoText": {
                    "type": "sc.TextLike",
                    "isOptional": false
                },
                "buffText": {
                    "type": "sc.TextLike",
                    "isOptional": false
                },
                "buffID": {
                    "type": "number",
                    "isOptional": true
                },
                "skipActiveState": {
                    "type": "boolean",
                    "isOptional": false
                },
                "names": {
                    "type": "ig.Database.Names",
                    "isOptional": false
                },
                "gamepadActive": {
                    "type": "boolean",
                    "isOptional": false
                },
                "lastDevice": {
                    "type": "number",
                    "isOptional": false
                },
                "itemsBlocked": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "enterQuickMenu": {
                    "returnType": "void",
                    "args": []
                },
                "exitQuickMenu": {
                    "returnType": "void",
                    "args": []
                },
                "enterItems": {
                    "returnType": "void",
                    "args": []
                },
                "enterParty": {
                    "returnType": "void",
                    "args": []
                },
                "enterCheck": {
                    "returnType": "void",
                    "args": []
                },
                "enterNone": {
                    "returnType": "void",
                    "args": []
                },
                "setInfoText": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "text",
                            "type": "sc.TextLike",
                            "isOptional": false
                        },
                        {
                            "name": "fade",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "setBuffText": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "text",
                            "type": "sc.TextLike",
                            "isOptional": false
                        },
                        {
                            "name": "fade",
                            "type": "boolean | undefined",
                            "isOptional": false
                        },
                        {
                            "name": "buffID",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "setItemBlock": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "value",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "toggleInputMode": {
                    "returnType": "void",
                    "args": []
                },
                "resetCursor": {
                    "returnType": "void",
                    "args": []
                },
                "focusEntity": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "entity",
                            "type": "sc.QuickMenuTypesBase",
                            "isOptional": false
                        },
                        {
                            "name": "_unused",
                            "type": "unknown",
                            "isOptional": false
                        }
                    ]
                },
                "unfocusEntity": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "entity",
                            "type": "sc.QuickMenuTypesBase",
                            "isOptional": false
                        }
                    ]
                },
                "isDeviceSynced": {
                    "returnType": "boolean",
                    "args": []
                },
                "_switchStates": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "state",
                            "type": "sc.QUICK_MENU_STATE",
                            "isOptional": false
                        }
                    ]
                },
                "isQuickNone": {
                    "returnType": "boolean",
                    "args": []
                },
                "isQuickItems": {
                    "returnType": "boolean",
                    "args": []
                },
                "isQuickParty": {
                    "returnType": "boolean",
                    "args": []
                },
                "isQuickCheck": {
                    "returnType": "boolean",
                    "args": []
                },
                "init": {
                    "returnType": "QuickMenuModel",
                    "args": []
                }
            },
            "parents": [
                "ig.GameAddon",
                "sc.Model"
            ]
        },
        "sc": {
            "fields": {
                "QuickMenuModel": {
                    "type": "QuickMenuModelConstructor"
                },
                "quickmodel": {
                    "type": "QuickMenuModel"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.save-preset.plug-in": {},
    "game.feature.save-preset.save-preset": {
        "sc.SavePresetData": {
            "fields": {
                "cacheType": {
                    "type": "string",
                    "isOptional": false
                },
                "title": {
                    "type": "any",
                    "isOptional": false
                },
                "sub": {
                    "type": "any",
                    "isOptional": false
                },
                "saveSlot": {
                    "type": "string",
                    "isOptional": false
                }
            },
            "functions": {
                "onCacheCleared": {
                    "returnType": "void",
                    "args": []
                },
                "getJsonPath": {
                    "returnType": "string",
                    "args": []
                },
                "onload": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "preset",
                            "type": "SavePresetData",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.JsonLoadable"
            ]
        },
        "sc.SavePreset": {
            "fields": {
                "slots": {
                    "type": "SavePresetData[]",
                    "isOptional": false
                }
            },
            "functions": {
                "load": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "SavePreset",
                    "args": []
                }
            },
            "parents": [
                "ig.GameAddon"
            ]
        },
        "sc": {
            "fields": {
                "SavePreset": {
                    "type": "SavePresetConstructor"
                },
                "savePreset": {
                    "type": "SavePreset"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.skills.plug-in": {},
    "game.feature.skills.skills": {
        "sc.BaseSkill": {
            "fields": {
                "id": {
                    "type": "number",
                    "isOptional": false
                },
                "level": {
                    "type": "number",
                    "isOptional": false
                },
                "element": {
                    "type": "sc.ELEMENT",
                    "isOptional": false
                },
                "type": {
                    "type": "sc.SKILL_STATES",
                    "isOptional": false
                },
                "skillKey": {
                    "type": "string",
                    "isOptional": false
                },
                "icon": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "applyOnConfig": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "elementConfig",
                            "type": "Record<sc.ELEMENT, sc.PlayerSubConfig>",
                            "isOptional": false
                        }
                    ]
                },
                "getName": {
                    "returnType": "string",
                    "args": []
                },
                "getDescription": {
                    "returnType": "string",
                    "args": []
                },
                "getCPCost": {
                    "returnType": "number",
                    "args": []
                },
                "_getElementConfig": {
                    "returnType": "sc.PlayerSubConfig",
                    "args": [
                        {
                            "name": "elementConfigs",
                            "type": "Record<sc.ELEMENT, sc.PlayerSubConfig>",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "sc": {
            "fields": {
                "BaseSkill": {
                    "type": "BaseSkillConstructor"
                },
                "StatSkill": {
                    "type": "StatSkillConstructor"
                },
                "ElementSkill": {
                    "type": "ElementSkillConstructor"
                },
                "SpecialSkill": {
                    "type": "SpecialSkillConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.StatSkill": {
            "fields": {
                "statType": {
                    "type": "sc.CombatParams.ParamName",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": [
                "sc.BaseSkill"
            ]
        },
        "sc.ElementSkill": {
            "fields": {
                "counter": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": [
                "sc.BaseSkill"
            ]
        },
        "sc.SpecialSkill": {
            "fields": {
                "skillType": {
                    "type": "SpecialSkill.SkillType",
                    "isOptional": false
                },
                "branchType": {
                    "type": "SpecialSkill.BranchType",
                    "isOptional": false
                }
            },
            "functions": {
                "getCombatArtLevel": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "type",
                            "type": "SpecialSkill.SkillType",
                            "isOptional": false
                        },
                        {
                            "name": "element",
                            "type": "sc.ELEMENT",
                            "isOptional": false
                        }
                    ]
                },
                "_getElementName": {
                    "returnType": "keyof typeof sc.ELEMENT",
                    "args": []
                }
            },
            "parents": [
                "sc.BaseSkill"
            ]
        }
    },
    "game.feature.skills.skilltree": {
        "sc": {
            "fields": {
                "SKILLS_DISTANCE_MULTIPLIER": {
                    "type": "number"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.SkillTree": {
            "fields": {
                "version": {
                    "type": "number",
                    "isOptional": false
                },
                "skills": {
                    "type": "sc.BaseSkill[]",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": [
                "ig.SingleLoadable"
            ]
        }
    },
    "game.feature.timers.gui.timers-hud": {},
    "game.feature.timers.plug-in": {},
    "game.feature.trade.gui.equip-toggle-stats": {
        "sc.TradeToggleStats.BaseParams": {
            "fields": {
                "hp": {
                    "type": "sc.SimpleStatusDisplay",
                    "isOptional": false
                },
                "atk": {
                    "type": "sc.SimpleStatusDisplay",
                    "isOptional": false
                },
                "def": {
                    "type": "sc.SimpleStatusDisplay",
                    "isOptional": false
                },
                "foc": {
                    "type": "sc.SimpleStatusDisplay",
                    "isOptional": false
                },
                "fire": {
                    "type": "sc.SimpleStatusDisplay",
                    "isOptional": false
                },
                "cold": {
                    "type": "sc.SimpleStatusDisplay",
                    "isOptional": false
                },
                "shock": {
                    "type": "sc.SimpleStatusDisplay",
                    "isOptional": false
                },
                "wave": {
                    "type": "sc.SimpleStatusDisplay",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.TradeToggleStats": {
            "fields": {
                "baseParams": {
                    "type": "sc.TradeToggleStats.BaseParams",
                    "isOptional": false
                },
                "compareItem": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "compareHelpText": {
                    "type": "sc.TextGui",
                    "isOptional": false
                }
            },
            "functions": {
                "_createContent": {
                    "returnType": "void",
                    "args": []
                }
            },
            "parents": [
                "ig.BoxGui"
            ]
        },
        "sc": {
            "fields": {
                "TradeToggleStats": {
                    "type": "TradeToggleStatsConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.trade.gui.trade-dialog": {
        "sc.TradeItem": {
            "fields": {},
            "functions": {
                "init": {
                    "returnType": "TradeItem",
                    "args": [
                        {
                            "name": "b_",
                            "type": "any",
                            "isOptional": false
                        },
                        {
                            "name": "a_",
                            "type": "any",
                            "isOptional": false
                        },
                        {
                            "name": "d_",
                            "type": "any",
                            "isOptional": false
                        },
                        {
                            "name": "c_",
                            "type": "any",
                            "isOptional": false
                        },
                        {
                            "name": "e_",
                            "type": "any",
                            "isOptional": false
                        },
                        {
                            "name": "f_",
                            "type": "any",
                            "isOptional": false
                        },
                        {
                            "name": "g_",
                            "type": "any",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "sc.ListBoxButton"
            ]
        },
        "sc": {
            "fields": {
                "TradeItem": {
                    "type": "TradeItemConstructor"
                },
                "TradeItemBox": {
                    "type": "TradeItemBoxConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.TradeItemBox": {
            "fields": {},
            "functions": {},
            "parents": [
                "ig.GuiElementBase"
            ]
        }
    },
    "game.feature.trade.gui.trade-icon": {
        "sc.TradeIconGui.Entry": {
            "fields": {
                "require": {
                    "type": "sc.TradeModel.TradeItem[]",
                    "isOptional": false
                },
                "gui": {
                    "type": "sc.TextGui & { tradeName: string } & sc.TextGui.LevelDrawData",
                    "isOptional": false
                },
                "tradeName": {
                    "type": "string",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.TradeIconGui": {
            "fields": {
                "numberGfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "tradeInfo": {
                    "type": "sc.TradeModel.Trader",
                    "isOptional": false
                },
                "tradeIcon": {
                    "type": "unknown",
                    "isOptional": false
                },
                "lineGui": {
                    "type": "ig.ColorGui",
                    "isOptional": false
                },
                "entries": {
                    "type": "sc.TradeIconGui.Entry[]",
                    "isOptional": false
                }
            },
            "functions": {
                "setIconState": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "state",
                            "type": "sc.INTERACT_ENTRY_STATE",
                            "isOptional": false
                        }
                    ]
                },
                "isActive": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "state",
                            "type": "sc.INTERACT_ENTRY_STATE",
                            "isOptional": false
                        }
                    ]
                },
                "_createContent": {
                    "returnType": "void",
                    "args": []
                },
                "_createStatic": {
                    "returnType": "void",
                    "args": []
                },
                "_updateTexts": {
                    "returnType": "void",
                    "args": []
                },
                "_hasMissingItem": {
                    "returnType": "boolean | undefined",
                    "args": [
                        {
                            "name": "require",
                            "type": "sc.TradeModel.TradeItem[]",
                            "isOptional": false
                        }
                    ]
                },
                "remove": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "TradeIconGui",
                    "args": [
                        {
                            "name": "trader",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.BoxGui"
            ]
        },
        "sc": {
            "fields": {
                "TradeIconGui": {
                    "type": "TradeIconGuiConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.trade.gui.trade-menu": {},
    "game.feature.trade.plug-in": {},
    "game.feature.trade.trade-model": {
        "sc.TradeModel.FoundTrader": {
            "fields": {
                "characterName": {
                    "type": "string",
                    "isOptional": false
                },
                "map": {
                    "type": "ig.LangLabel",
                    "isOptional": false
                },
                "area": {
                    "type": "ig.LangLabel",
                    "isOptional": false
                },
                "time": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.TradeModel.TradeItem": {
            "fields": {
                "id": {
                    "type": "sc.ItemID",
                    "isOptional": false
                },
                "amount": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.TradeModel.TradeOption": {
            "fields": {
                "get": {
                    "type": "TradeItem[]",
                    "isOptional": false
                },
                "require": {
                    "type": "TradeItem[]",
                    "isOptional": false
                },
                "scale": {
                    "type": "number",
                    "isOptional": true
                },
                "cost": {
                    "type": "number",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.TradeModel.Trader": {
            "fields": {
                "name": {
                    "type": "ig.LangLabel.Data",
                    "isOptional": false
                },
                "order": {
                    "type": "number",
                    "isOptional": false
                },
                "area": {
                    "type": "string",
                    "isOptional": false
                },
                "noTrack": {
                    "type": "boolean",
                    "isOptional": true
                },
                "options": {
                    "type": "TradeOption[]",
                    "isOptional": false
                },
                "upgradeTo": {
                    "type": "string",
                    "isOptional": true
                },
                "child": {
                    "type": "string",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.TradeModel": {
            "fields": {
                "traders": {
                    "type": "Record<string, sc.TradeModel.Trader>",
                    "isOptional": false
                }
            },
            "functions": {
                "onStoragePreLoad": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "save",
                            "type": "ig.SaveSlot.Data",
                            "isOptional": false
                        }
                    ]
                },
                "getTrader": {
                    "returnType": "sc.TradeModel.Trader",
                    "args": [
                        {
                            "name": "trader",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "getFoundTrader": {
                    "returnType": "sc.TradeModel.FoundTrader",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "TradeModel",
                    "args": []
                }
            },
            "parents": [
                "ig.GameAddon",
                "sc.Model"
            ]
        },
        "sc": {
            "fields": {
                "TradeModel": {
                    "type": "TradeModelConstructor"
                },
                "trade": {
                    "type": "sc.TradeModel"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.tutorial.input-forcer": {
        "sc.InputForcerGui": {
            "fields": {},
            "functions": {},
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc.InputForcer.Entry": {
            "fields": {
                "cancelAction": {
                    "type": "boolean",
                    "isOptional": false
                },
                "check": {
                    "type": "() => boolean",
                    "isOptional": false
                },
                "keep": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.InputForcer": {
            "fields": {
                "activeEntry": {
                    "type": "sc.InputForcer.Entry",
                    "isOptional": false
                },
                "texts": {
                    "type": "{\n        title: ig.LangLabel.Data | string;\n        textKeyboard: ig.LangLabel.Data | string;\n        textGamepad: ig.LangLabel.Data | string;\n      }",
                    "isOptional": false
                },
                "gui": {
                    "type": "sc.InputForcerGui",
                    "isOptional": false
                },
                "blocked": {
                    "type": "boolean",
                    "isOptional": false
                },
                "darknessHandle": {
                    "type": "boolean",
                    "isOptional": false
                },
                "lightHandle": {
                    "type": "boolean",
                    "isOptional": false
                },
                "inputSubmitted": {
                    "type": "boolean",
                    "isOptional": false
                },
                "sounds": {
                    "type": "{ start: ig.Sound }",
                    "isOptional": false
                }
            },
            "functions": {
                "setEntry": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "action",
                            "type": "keyof typeof sc.INPUT_FORCER_ENTRIES",
                            "isOptional": false
                        },
                        {
                            "name": "title",
                            "type": "ig.LangLabel.Data | string",
                            "isOptional": false
                        },
                        {
                            "name": "textKeyboard",
                            "type": "ig.LangLabel.Data | string",
                            "isOptional": false
                        },
                        {
                            "name": "textGamepad",
                            "type": "ig.LangLabel.Data | string",
                            "isOptional": false
                        }
                    ]
                },
                "isBlocking": {
                    "returnType": "boolean",
                    "args": []
                },
                "clearEntry": {
                    "returnType": "void",
                    "args": []
                },
                "isSubmitted": {
                    "returnType": "boolean",
                    "args": []
                },
                "onPreUpdate": {
                    "returnType": "void",
                    "args": []
                },
                "_startBlock": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "cancelAction",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "_endBlock": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "InputForcer",
                    "args": []
                }
            },
            "parents": [
                "ig.GameAddon"
            ]
        },
        "sc.InputForcer.texts": {
            "fields": {
                "title": {
                    "type": "ig.LangLabel.Data | string",
                    "isOptional": false
                },
                "textKeyboard": {
                    "type": "ig.LangLabel.Data | string",
                    "isOptional": false
                },
                "textGamepad": {
                    "type": "ig.LangLabel.Data | string",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.InputForcer.sounds": {
            "fields": {
                "start": {
                    "type": "ig.Sound",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc": {
            "fields": {
                "InputForcer": {
                    "type": "InputForcerConstructor"
                },
                "inputForcer": {
                    "type": "InputForcer"
                },
                "INPUT_FORCER_ENTRIES": {
                    "type": "INPUT_FORCER_ENTRIES"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.INPUT_FORCER_ENTRIES": {
            "fields": {
                "DODGE_RIGHT": {
                    "type": "sc.InputForcer.Entry",
                    "isOptional": false
                },
                "ATTACK_LEFT": {
                    "type": "sc.InputForcer.Entry",
                    "isOptional": false
                },
                "CHARGE_HOLD": {
                    "type": "sc.InputForcer.Entry",
                    "isOptional": false
                },
                "CHARGE_RELEASE": {
                    "type": "sc.InputForcer.Entry",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.tutorial.plug-in": {},
    "game.feature.version.gui.changelog-gui": {
        "sc.ChangeLogScrollContainer": {
            "fields": {
                "scrollPane": {
                    "type": "sc.ScrollPane",
                    "isOptional": false
                },
                "content": {
                    "type": "ig.GuiElementBase",
                    "isOptional": false
                }
            },
            "functions": {
                "setElement": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "gui",
                            "type": "ig.GuiElementBase",
                            "isOptional": false
                        }
                    ]
                },
                "scroll": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "amount",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "skipTransition",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "getScrollY": {
                    "returnType": "number",
                    "args": []
                },
                "clear": {
                    "returnType": "void",
                    "args": []
                },
                "_updateContentHeight": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "ChangeLogScrollContainer",
                    "args": []
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc": {
            "fields": {
                "ChangeLogScrollContainer": {
                    "type": "ChangeLogScrollContainerConstructor"
                },
                "PrevNextText": {
                    "type": "PrevNextTextConstructor"
                },
                "ChangelogGui": {
                    "type": "ChangelogGuiConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.PrevNextText": {
            "fields": {
                "icon": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "text": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "active": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "PrevNextText",
                    "args": [
                        {
                            "name": "text",
                            "type": "sc.TextGui",
                            "isOptional": false
                        },
                        {
                            "name": "iconText",
                            "type": "sc.TextLike",
                            "isOptional": false
                        },
                        {
                            "name": "swapIconAndTextPos",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc.ChangelogGui": {
            "fields": {
                "msgBox": {
                    "type": "sc.CenterBoxGui",
                    "isOptional": false
                },
                "content": {
                    "type": "ig.GuiElementBase",
                    "isOptional": false
                },
                "back": {
                    "type": "sc.ButtonGui",
                    "isOptional": false
                },
                "browseLeft": {
                    "type": "sc.PrevNextText",
                    "isOptional": false
                },
                "browserRight": {
                    "type": "sc.PrevNextText",
                    "isOptional": false
                },
                "scrollContainer": {
                    "type": "sc.ChangeLogScrollContainer",
                    "isOptional": false
                },
                "header": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "compiledButton": {
                    "type": "sc.ButtonGui",
                    "isOptional": false
                },
                "buttonInteract": {
                    "type": "ig.ButtonInteractEntry",
                    "isOptional": false
                },
                "buttonGroup": {
                    "type": "sc.ButtonGroup",
                    "isOptional": false
                },
                "compiledMode": {
                    "type": "boolean",
                    "isOptional": false
                },
                "compileList": {
                    "type": "unknown[]",
                    "isOptional": false
                },
                "compileEntry": {
                    "type": "unknown",
                    "isOptional": false
                },
                "logs": {
                    "type": "unknown[]",
                    "isOptional": false
                },
                "currentIndex": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "showLog": {
                    "returnType": "void",
                    "args": []
                },
                "hideLog": {
                    "returnType": "void",
                    "args": []
                },
                "clearLogs": {
                    "returnType": "void",
                    "args": []
                },
                "setHeaderText": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "version",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "onBackButtonCheck": {
                    "returnType": "boolean",
                    "args": []
                },
                "onCompileButtonCheck": {
                    "returnType": "boolean",
                    "args": []
                },
                "onToggleCompileMode": {
                    "returnType": "void",
                    "args": []
                },
                "onLeftPressed": {
                    "returnType": "void",
                    "args": []
                },
                "onRightPressed": {
                    "returnType": "void",
                    "args": []
                },
                "setCompiledList": {
                    "returnType": "void",
                    "args": []
                },
                "setLogEntry": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "entry",
                            "type": "unknown",
                            "isOptional": false
                        }
                    ]
                },
                "createHeaderEntry": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "dest",
                            "type": "ig.GuiElementBase",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "name",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "color",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "center",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "createTextEntry": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "dest",
                            "type": "ig.GuiElementBase",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "name",
                            "type": "string[]",
                            "isOptional": false
                        },
                        {
                            "name": "asBugFix",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "createLogEntries": {
                    "returnType": "void",
                    "args": []
                },
                "createContent": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "ChangelogGui",
                    "args": []
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        }
    },
    "game.feature.version.gui.dlc-gui": {},
    "game.feature.version.plug-in": {},
    "game.feature.version.version": {
        "sc.VerionChangeLog.ChangelogFile": {
            "fields": {
                "changelog": {
                    "type": "ChangelogFile.Entry[]",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.VerionChangeLog.ChangelogFile.Entry": {
            "fields": {
                "name": {
                    "type": "string",
                    "isOptional": false
                },
                "version": {
                    "type": "string",
                    "isOptional": false
                },
                "date": {
                    "type": "string",
                    "isOptional": false
                },
                "fixes": {
                    "type": "string[]",
                    "isOptional": true
                },
                "changes": {
                    "type": "string[]",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.VerionChangeLog.VersionObject": {
            "fields": {
                "major": {
                    "type": "number",
                    "isOptional": false
                },
                "minor": {
                    "type": "number",
                    "isOptional": false
                },
                "patch": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.VerionChangeLog": {
            "fields": {
                "major": {
                    "type": "number",
                    "isOptional": false
                },
                "minor": {
                    "type": "number",
                    "isOptional": false
                },
                "patch": {
                    "type": "number",
                    "isOptional": false
                },
                "hotfix": {
                    "type": "number",
                    "isOptional": false
                },
                "special": {
                    "type": "Nullable<string>",
                    "isOptional": false
                },
                "saveVersion": {
                    "type": "number",
                    "isOptional": false
                },
                "oldMajor": {
                    "type": "number",
                    "isOptional": false
                },
                "oldMinor": {
                    "type": "number",
                    "isOptional": false
                },
                "oldPatch": {
                    "type": "number",
                    "isOptional": false
                },
                "changelog": {
                    "type": "sc.VerionChangeLog.Changelog",
                    "isOptional": false
                }
            },
            "functions": {
                "saveCurrentVersion": {
                    "returnType": "void",
                    "args": []
                },
                "getLogsBetweenVersions": {
                    "returnType": "sc.VerionChangeLog.Changelog",
                    "args": [
                        {
                            "name": "dest",
                            "type": "sc.VerionChangeLog.Changelog",
                            "isOptional": false
                        }
                    ]
                },
                "toString": {
                    "returnType": "string",
                    "args": []
                },
                "toOnlyNumberString": {
                    "returnType": "string",
                    "args": []
                },
                "hasVersionChanged": {
                    "returnType": "boolean",
                    "args": []
                },
                "loadInternal": {
                    "returnType": "void",
                    "args": []
                },
                "onerror": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "error",
                            "type": "any",
                            "isOptional": false
                        }
                    ]
                },
                "onload": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "data",
                            "type": "sc.VerionChangeLog.ChangelogFile",
                            "isOptional": false
                        }
                    ]
                },
                "getLastSlotDataUpdated": {
                    "returnType": "string",
                    "args": []
                },
                "updateSaveSlotVersion": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "slot",
                            "type": "ig.SaveSlot",
                            "isOptional": false
                        }
                    ]
                },
                "_getVersionString": {
                    "returnType": "string",
                    "args": [
                        {
                            "name": "major",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "minor",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "patch",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "_toObject": {
                    "returnType": "sc.VerionChangeLog.VersionObject",
                    "args": []
                },
                "init": {
                    "returnType": "VerionChangeLog",
                    "args": []
                }
            },
            "parents": [
                "ig.SingleLoadable"
            ]
        },
        "sc": {
            "fields": {
                "VerionChangeLog": {
                    "type": "VerionChangeLogConstructor"
                },
                "version": {
                    "type": "VerionChangeLog"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.voice-acting.plug-in": {},
    "game.feature.voice-acting.va-config": {
        "sc.VA_CONFIG": {
            "fields": {
                "sounds": {
                    "type": "({\n                    src: string\n                    volume: number\n                })[]",
                    "isOptional": false
                },
                "src": {
                    "type": "string",
                    "isOptional": false
                },
                "volume": {
                    "type": "number",
                    "isOptional": false
                },
                "filter": {
                    "type": "{\n                    text: string,\n                    expressions?: string[]\n                }",
                    "isOptional": false
                },
                "\"main.lea\"": {
                    "type": "sc.VA_CONFIG.Entry",
                    "isOptional": false
                },
                "\"main.shizuka\"": {
                    "type": "sc.VA_CONFIG.Entry",
                    "isOptional": false
                },
                "\"main.sergey\"": {
                    "type": "sc.VA_CONFIG.Entry",
                    "isOptional": false
                },
                "\"main.schneider\"": {
                    "type": "sc.VA_CONFIG.Entry",
                    "isOptional": false
                },
                "\"main.emilie\"": {
                    "type": "sc.VA_CONFIG.Entry",
                    "isOptional": false
                },
                "\"main.carla\"": {
                    "type": "sc.VA_CONFIG.Entry",
                    "isOptional": false
                },
                "\"main.captain\"": {
                    "type": "sc.VA_CONFIG.Entry",
                    "isOptional": false
                },
                "\"main.genius\"": {
                    "type": "sc.VA_CONFIG.Entry",
                    "isOptional": false
                },
                "\"antagonists.designer\"": {
                    "type": "sc.VA_CONFIG.Entry",
                    "isOptional": false
                },
                "\"antagonists.gautham\"": {
                    "type": "sc.VA_CONFIG.Entry",
                    "isOptional": false
                },
                "\"antagonists.fancyguy\"": {
                    "type": "sc.VA_CONFIG.Entry",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.VA_CONFIG.filter": {
            "fields": {
                "text": {
                    "type": "string",
                    "isOptional": false
                },
                "expressions": {
                    "type": "string[]",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.voice-acting.voice-acting": {
        "sc.VoiceActing": {
            "fields": {
                "active": {
                    "type": "boolean",
                    "isOptional": false
                },
                "loaded": {
                    "type": "boolean",
                    "isOptional": false
                },
                "voices": {
                    "type": "Record<string, sc.VA_CONFIG.Entry[]>",
                    "isOptional": false
                }
            },
            "functions": {
                "toggle": {
                    "returnType": "void",
                    "args": []
                },
                "load": {
                    "returnType": "void",
                    "args": []
                },
                "loadConfigSounds": {
                    "returnType": "unknown",
                    "args": [
                        {
                            "name": "vaConfigEntry",
                            "type": "sc.VA_CONFIG.Entry",
                            "isOptional": false
                        }
                    ]
                },
                "play": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "expression",
                            "type": "sc.CharacterExpression",
                            "isOptional": false
                        },
                        {
                            "name": "label",
                            "type": "ig.LangLabel",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "VoiceActing",
                    "args": []
                }
            },
            "parents": [
                "ig.GameAddon"
            ]
        },
        "sc": {
            "fields": {
                "VoiceActing": {
                    "type": "VoiceActingConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.xeno-dialogs.entities.xeno-dialog": {
        "ig.ENTITY.XenoDialog.Settings": {
            "fields": {
                "once": {
                    "type": "boolean",
                    "isOptional": false
                },
                "ignoreZ": {
                    "type": "number",
                    "isOptional": false
                },
                "dialog": {
                    "type": "{\n            entitySource: { global?: boolean; name: string };\n            text: string;\n            event?: unknown; // event steps\n            entity: unknown;\n          }[]",
                    "isOptional": false
                },
                "entitySource": {
                    "type": "{ global?: boolean; name: string }",
                    "isOptional": false
                },
                "text": {
                    "type": "string",
                    "isOptional": false
                },
                "event": {
                    "type": "unknown",
                    "isOptional": true
                },
                "entity": {
                    "type": "unknown",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ENTITY.XenoDialog.Settings.entitySource": {
            "fields": {
                "global": {
                    "type": "boolean",
                    "isOptional": true
                },
                "name": {
                    "type": "string",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ENTITY.XenoDialog": {
            "fields": {
                "dialog": {
                    "type": "{\n          entitySource: { global?: boolean; name: string };\n          text: ig.LangLabel;\n          event: ig.Event;\n          entity: ig.ENTITY.NPC;\n          timePadding: number;\n        }[]",
                    "isOptional": false
                },
                "entitySource": {
                    "type": "{ global?: boolean; name: string }",
                    "isOptional": false
                },
                "text": {
                    "type": "ig.LangLabel",
                    "isOptional": false
                },
                "event": {
                    "type": "ig.Event",
                    "isOptional": false
                },
                "entity": {
                    "type": "ig.ENTITY.NPC",
                    "isOptional": false
                },
                "timePadding": {
                    "type": "number",
                    "isOptional": false
                },
                "members": {
                    "type": "ig.ENTITY.NPC[]",
                    "isOptional": false
                },
                "running": {
                    "type": "boolean",
                    "isOptional": false
                },
                "blockTimer": {
                    "type": "number",
                    "isOptional": false
                },
                "padTimer": {
                    "type": "number",
                    "isOptional": false
                },
                "currentTextIndex": {
                    "type": "number",
                    "isOptional": false
                },
                "currentEntity": {
                    "type": "ig.ENTITY.NPC",
                    "isOptional": true
                },
                "currentText": {
                    "type": "string",
                    "isOptional": false
                },
                "currentEvent": {
                    "type": "ig.Event",
                    "isOptional": false
                },
                "fx": {
                    "type": "{ sheet: ig.EffectSheet; handle: Nullable<ig.ENTITY.Effect> }",
                    "isOptional": false
                },
                "once": {
                    "type": "boolean",
                    "isOptional": false
                },
                "hasRunOnce": {
                    "type": "boolean",
                    "isOptional": false
                },
                "ignoreZ": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "onHideRequest": {
                    "returnType": "void",
                    "args": []
                },
                "startDialog": {
                    "returnType": "void",
                    "args": []
                },
                "cancelDialog": {
                    "returnType": "void",
                    "args": []
                },
                "getCurrentText": {
                    "returnType": "string",
                    "args": []
                },
                "getCallbackEvent": {
                    "returnType": "ig.Event",
                    "args": []
                },
                "onEventStart": {
                    "returnType": "void",
                    "args": []
                },
                "onEventEnd": {
                    "returnType": "void",
                    "args": []
                },
                "_clearFx": {
                    "returnType": "void",
                    "args": []
                },
                "_showFx": {
                    "returnType": "void",
                    "args": []
                },
                "_showNextMessage": {
                    "returnType": "boolean",
                    "args": []
                },
                "_clearCurrentIndex": {
                    "returnType": "void",
                    "args": []
                },
                "_isInRange": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "range",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "noIgnoreZ",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "_initMembers": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "XenoDialog",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "ig.ENTITY.XenoDialog.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Entity"
            ]
        },
        "ig.ENTITY.XenoDialog.entitySource": {
            "fields": {
                "global": {
                    "type": "boolean",
                    "isOptional": true
                },
                "name": {
                    "type": "string",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ENTITY.XenoDialog.fx": {
            "fields": {
                "sheet": {
                    "type": "ig.EffectSheet",
                    "isOptional": false
                },
                "handle": {
                    "type": "Nullable<ig.ENTITY.Effect>",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ENTITY": {
            "fields": {
                "XenoDialog": {
                    "type": "XenoDialogConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.xeno-dialogs.gui.xeno-icon": {
        "sc.XenoDialogIcon": {
            "fields": {
                "ninepatch": {
                    "type": "ig.NinePatch",
                    "isOptional": false
                },
                "textGui": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "skipGui": {
                    "type": "sc.MsgSkipGui",
                    "isOptional": false
                },
                "xenoDialog": {
                    "type": "ig.ENTITY.XenoDialog",
                    "isOptional": false
                },
                "skipEntry": {
                    "type": "sc.SkipInteractEntry",
                    "isOptional": false
                }
            },
            "functions": {
                "onTextFinish": {
                    "returnType": "void",
                    "args": []
                },
                "isTextFinished": {
                    "returnType": "boolean",
                    "args": []
                },
                "updateSkipIcon": {
                    "returnType": "void",
                    "args": []
                },
                "setText": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "text",
                            "type": "sc.TextLike",
                            "isOptional": false
                        },
                        {
                            "name": "dialog",
                            "type": "ig.ENTITY.XenoDialog",
                            "isOptional": false
                        }
                    ]
                },
                "show": {
                    "returnType": "void",
                    "args": []
                },
                "hide": {
                    "returnType": "void",
                    "args": []
                },
                "onSkipInteract": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "msg",
                            "type": "sc.SKIP_INTERACT_MSG",
                            "isOptional": false
                        }
                    ]
                },
                "setIconState": {
                    "returnType": "void",
                    "args": []
                },
                "isActive": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "state",
                            "type": "sc.INPUT_FORCER_ENTRIES",
                            "isOptional": false
                        }
                    ]
                },
                "remove": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "XenoDialogIcon",
                    "args": []
                }
            },
            "parents": [
                "ig.BoxGui"
            ]
        },
        "sc": {
            "fields": {
                "XenoDialogIcon": {
                    "type": "XenoDialogIconConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.xeno-dialogs.plug-in": {},
    "game.features": {},
    "game.loader": {
        "sc.StartLoader": {
            "fields": {
                "timer": {
                    "type": "ig.Timer",
                    "isOptional": false
                },
                "endTimer": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "draw": {
                    "returnType": "void",
                    "args": []
                },
                "onEnd": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "StartLoader",
                    "args": [
                        {
                            "name": "gameClass",
                            "type": "sc.CrossCodeConstructor",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Loader"
            ]
        },
        "sc": {
            "fields": {
                "StartLoader": {
                    "type": "StartLoaderConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.main": {
        "sc.EmptyLoader": {
            "fields": {},
            "functions": {},
            "parents": [
                "ig.Loader"
            ]
        },
        "sc": {
            "fields": {
                "EmptyLoader": {
                    "type": "EmptyLoaderConstructor"
                },
                "gui": {
                    "type": "sc.CrossCode.Gui"
                },
                "CrossCode": {
                    "type": "CrossCodeConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.CrossCode.Gui": {
            "fields": {
                "statusHud": {
                    "type": "sc.StatusHudGui",
                    "isOptional": false
                },
                "rightHudPanel": {
                    "type": "sc.RightHudGui",
                    "isOptional": false
                },
                "taskHud": {
                    "type": "sc.TaskHudBox",
                    "isOptional": false
                },
                "moneyHud": {
                    "type": "sc.MoneyHudBox",
                    "isOptional": false
                },
                "itemHud": {
                    "type": "sc.ItemHudBox",
                    "isOptional": false
                },
                "featHud": {
                    "type": "sc.FeatHud",
                    "isOptional": false
                },
                "questHud": {
                    "type": "sc.FavQuestHud",
                    "isOptional": false
                },
                "questTaskHud": {
                    "type": "sc.QuestUpdateHud",
                    "isOptional": false
                },
                "landmarkHud": {
                    "type": "sc.LandmarkHud",
                    "isOptional": false
                },
                "loreHud": {
                    "type": "sc.LoreUpdateHud",
                    "isOptional": false
                },
                "dropHud": {
                    "type": "sc.DropUpdateHud",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.CrossCode": {
            "fields": {
                "transitionTimer": {
                    "type": "number",
                    "isOptional": false
                },
                "effects": {
                    "type": "Record<\n        'dust' | 'teleport' | 'npc' | 'death' | 'speedlines' | 'drops',\n        ig.EffectSheet\n      >",
                    "isOptional": false
                }
            },
            "functions": {
                "onGameLoopStart": {
                    "returnType": "void",
                    "args": []
                },
                "getVersion": {
                    "returnType": "string",
                    "args": []
                },
                "addTeleportMessage": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "message",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "start": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "startMode",
                            "type": "sc.START_MODE",
                            "isOptional": true
                        },
                        {
                            "name": "transitionTime",
                            "type": "number",
                            "isOptional": true
                        }
                    ]
                },
                "gotoTitle": {
                    "returnType": "void",
                    "args": []
                },
                "transitionEnded": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "CrossCode",
                    "args": []
                }
            },
            "parents": [
                "ig.Game"
            ]
        },
        "ig": {
            "fields": {
                "game": {
                    "type": "sc.CrossCode"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "impact.base.background-map": {
        "ig.MAP.Background": {
            "fields": {
                "tiles": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "tilesetName": {
                    "type": "string",
                    "isOptional": false
                },
                "tileInfo": {
                    "type": "ig.TileInfo",
                    "isOptional": false
                },
                "hasAnimatedTiles": {
                    "type": "boolean",
                    "isOptional": false
                },
                "screenRender": {
                    "type": "boolean",
                    "isOptional": false
                },
                "lighter": {
                    "type": "boolean",
                    "isOptional": false
                },
                "_wm": {
                    "type": "ig.Config",
                    "isOptional": false
                }
            },
            "functions": {
                "clearCached": {
                    "returnType": "void",
                    "args": []
                },
                "checkAnimatedTiles": {
                    "returnType": "void",
                    "args": []
                },
                "setTileset": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "tileset",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "Background",
                    "args": [
                        {
                            "name": "data",
                            "type": "sc.MapModel.MapLayer",
                            "isOptional": false
                        },
                        {
                            "name": "zHeight",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.ChunkedMap"
            ]
        }
    },
    "impact.base.collision-map": {
        "ig.MAP.Collision": {
            "fields": {
                "_wm": {
                    "type": "ig.Config",
                    "isOptional": false
                },
                "levelKey": {
                    "type": "'collision'",
                    "isOptional": false
                },
                "staticNoCollision": {
                    "type": "ig.MAP.Collision",
                    "isOptional": false
                }
            },
            "functions": {
                "prepare": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "neighbourCollisionLayer",
                            "type": "ig.MAP.Collision",
                            "isOptional": true
                        },
                        {
                            "name": "yDiff",
                            "type": "number",
                            "isOptional": true
                        }
                    ]
                },
                "isTileGround": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "entityX",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "entityY",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "isTileAreaBlocked": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "entityX",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "entityY",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "width",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "height",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "isGridHole": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "isOverHole": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "entityX",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "entityY",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "width",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "height",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "dirToHole",
                            "type": "Vec2",
                            "isOptional": true
                        }
                    ]
                },
                "trace": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "res",
                            "type": "ig.Physics.TraceResult",
                            "isOptional": false
                        },
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "vx",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "vy",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "objectWidth",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "objectHeight",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "ignoreHoles",
                            "type": "boolean",
                            "isOptional": false
                        },
                        {
                            "name": "groundBlocks",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "Collision",
                    "args": [
                        {
                            "name": "data",
                            "type": "sc.MapModel.MapLayer",
                            "isOptional": false
                        },
                        {
                            "name": "zHeight",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Map"
            ]
        },
        "ig": {
            "fields": {
                "COLLISION": {
                    "type": "{\n      EPS: number;\n      SLIP_PIXELS: number;\n      HEIGHT_TOLERATE: number;\n    }"
                },
                "EPS": {
                    "type": "number",
                    "isOptional": false
                },
                "SLIP_PIXELS": {
                    "type": "number",
                    "isOptional": false
                },
                "HEIGHT_TOLERATE": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "impact.base.entity-pool": {},
    "impact.base.extension": {
        "ig.ExtensionListener": {
            "fields": {},
            "functions": {
                "onExtensionLoaded": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "data",
                            "type": "any",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": []
        },
        "ig.ExtensionManager": {
            "fields": {
                "enabled": {
                    "type": "Record<ExtensionName, boolean>",
                    "isOptional": false
                },
                "list": {
                    "type": "ig.ExtensionList",
                    "isOptional": false
                },
                "listeners": {
                    "type": "Record<ExtensionName, unknown>[]",
                    "isOptional": false
                }
            },
            "functions": {
                "addListener": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "clazz",
                            "type": "ig.ExtensionListener",
                            "isOptional": false
                        },
                        {
                            "name": "type",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "load": {
                    "returnType": "void",
                    "args": []
                },
                "getExtensionList": {
                    "returnType": "ExtensionName[]",
                    "args": []
                },
                "getExtension": {
                    "returnType": "Nullable<Extension>",
                    "args": [
                        {
                            "name": "name",
                            "type": "ExtensionName",
                            "isOptional": false
                        }
                    ]
                },
                "hasExtension": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "name",
                            "type": "ExtensionName",
                            "isOptional": false
                        }
                    ]
                },
                "setExtensionEnabled": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "name",
                            "type": "ExtensionName",
                            "isOptional": false
                        },
                        {
                            "name": "value",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "onExtensionLoaded": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "a_",
                            "type": "unknown",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "ExtensionManager",
                    "args": []
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "ig": {
            "fields": {
                "ExtensionManager": {
                    "type": "ExtensionManagerConstructor"
                },
                "extensions": {
                    "type": "ExtensionManager"
                },
                "ExtensionList": {
                    "type": "ExtensionListConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ExtensionList": {
            "fields": {
                "extensions": {
                    "type": "Record<ExtensionName, Extension>",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "ExtensionList",
                    "args": []
                }
            },
            "parents": [
                "ig.SingleLoadable"
            ]
        }
    },
    "impact.base.font": {
        "ig.TextCommand": {
            "fields": {
                "index": {
                    "type": "number",
                    "isOptional": false
                },
                "command": {
                    "type": "{ brake: number } | { color: number } | { speed: number }",
                    "isOptional": false
                },
                "brake": {
                    "type": "number",
                    "isOptional": false
                },
                "color": {
                    "type": "number",
                    "isOptional": false
                },
                "speed": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.Font": {
            "fields": {
                "widthMap": {
                    "type": "number[]",
                    "isOptional": false
                },
                "indicesX": {
                    "type": "number[]",
                    "isOptional": false
                },
                "indicesY": {
                    "type": "number[]",
                    "isOptional": false
                },
                "charHeight": {
                    "type": "number",
                    "isOptional": false
                },
                "ALIGN": {
                    "type": "typeof Font$ALIGN",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "Font",
                    "args": [
                        {
                            "name": "path",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "charHeight",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "firstChar",
                            "type": "number",
                            "isOptional": true
                        },
                        {
                            "name": "sizeIndex",
                            "type": "Nullable<number>",
                            "isOptional": true
                        },
                        {
                            "name": "color",
                            "type": "Nullable<string>",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": [
                "ig.Image"
            ]
        },
        "ig": {
            "fields": {
                "Font": {
                    "type": "FontConstructor"
                },
                "MultiFont": {
                    "type": "MultiFontConstructor"
                },
                "TextBlock": {
                    "type": "TextBlockConstructor"
                },
                "TextParser": {
                    "type": "TextParser"
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.MultiFont.IconChangeListener": {
            "fields": {},
            "functions": {
                "onIconChange": {
                    "returnType": "void",
                    "args": []
                }
            },
            "parents": []
        },
        "ig.MultiFont": {
            "fields": {
                "cacheType": {
                    "type": "'MultiFont'",
                    "isOptional": false
                },
                "fontStyles": {
                    "type": "[]",
                    "isOptional": false
                },
                "iconSets": {
                    "type": "ig.Font[]",
                    "isOptional": false
                },
                "mapping": {
                    "type": "MultiFont.Mapping",
                    "isOptional": false
                },
                "indexMapping": {
                    "type": "string[]",
                    "isOptional": false
                },
                "iconChangeListeners": {
                    "type": "ig.MultiFont.IconChangeListener[]",
                    "isOptional": false
                },
                "colorSets": {
                    "type": "{ img: ig.Image; color: string }[]",
                    "isOptional": false
                },
                "img": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "color": {
                    "type": "string",
                    "isOptional": false
                },
                "ICON_START": {
                    "type": "number",
                    "isOptional": false
                },
                "ICON_END": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "pushIconSet": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "iconSet",
                            "type": "ig.Font",
                            "isOptional": false
                        }
                    ]
                },
                "setIconSet": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "iconSet",
                            "type": "ig.Font",
                            "isOptional": false
                        },
                        {
                            "name": "index",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "addIconChangeListener": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "listener",
                            "type": "ig.MultiFont.IconChangeListener",
                            "isOptional": false
                        }
                    ]
                },
                "removeIconChangeListener": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "listener",
                            "type": "ig.MultiFont.IconChangeListener",
                            "isOptional": false
                        }
                    ]
                },
                "callChangeListeners": {
                    "returnType": "void",
                    "args": []
                },
                "setMapping": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "mapping",
                            "type": "MultiFont.Mapping",
                            "isOptional": false
                        }
                    ]
                },
                "pushColorSet": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "img",
                            "type": "ig.Image",
                            "isOptional": false
                        },
                        {
                            "name": "color",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "getTextDimensions": {
                    "returnType": "ig.TextBlock.Size",
                    "args": [
                        {
                            "name": "text",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "linePadding",
                            "type": "number",
                            "isOptional": true
                        }
                    ]
                },
                "_getActualIndex": {
                    "returnType": "[number, number]",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "getLineWidth": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "line",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "size",
                            "type": "ig.TextBlock.Size",
                            "isOptional": false
                        },
                        {
                            "name": "index",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "wrapText": {
                    "returnType": "string",
                    "args": [
                        {
                            "name": "text",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "maxWidth",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "linePadding",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "bestRatio",
                            "type": "Nullable<number>",
                            "isOptional": false
                        },
                        {
                            "name": "commands",
                            "type": "ig.TextCommand[]",
                            "isOptional": false
                        }
                    ]
                },
                "drawLines": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "text",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "align",
                            "type": "ig.Font.ALIGN",
                            "isOptional": false
                        },
                        {
                            "name": "commands",
                            "type": "ig.TextCommand[]",
                            "isOptional": false
                        },
                        {
                            "name": "padding",
                            "type": "number",
                            "isOptional": true
                        }
                    ]
                },
                "getCharWidth": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "code",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Font"
            ]
        },
        "ig.TextBlock.Settings": {
            "fields": {
                "speed": {
                    "type": "Nullable<ig.TextBlock.SPEED>",
                    "isOptional": true
                },
                "textAlign": {
                    "type": "Nullable<ig.Font.ALIGN>",
                    "isOptional": true
                },
                "maxWidth": {
                    "type": "Nullable<number>",
                    "isOptional": true
                },
                "bestRatio": {
                    "type": "Nullable<number>",
                    "isOptional": true
                },
                "linePadding": {
                    "type": "number",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.TextBlock.Size": {
            "fields": {
                "x": {
                    "type": "number",
                    "isOptional": false
                },
                "y": {
                    "type": "number",
                    "isOptional": false
                },
                "lines": {
                    "type": "number[]",
                    "isOptional": false
                },
                "lineIdx": {
                    "type": "number[]",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.TextBlock": {
            "fields": {
                "font": {
                    "type": "ig.MultiFont",
                    "isOptional": false
                },
                "maxWidth": {
                    "type": "Nullable<number>",
                    "isOptional": true
                },
                "parsedText": {
                    "type": "string",
                    "isOptional": false
                },
                "commands": {
                    "type": "ig.TextCommand[]",
                    "isOptional": false
                },
                "speed": {
                    "type": "ig.TextBlock.SPEED",
                    "isOptional": false
                },
                "align": {
                    "type": "ig.Font.ALIGN",
                    "isOptional": false
                },
                "size": {
                    "type": "ig.TextBlock.Size",
                    "isOptional": false
                },
                "currentLine": {
                    "type": "number",
                    "isOptional": false
                },
                "currentIndex": {
                    "type": "number",
                    "isOptional": false
                },
                "currentCmd": {
                    "type": "number",
                    "isOptional": false
                },
                "currentSpeed": {
                    "type": "number",
                    "isOptional": false
                },
                "timer": {
                    "type": "number",
                    "isOptional": false
                },
                "onFinish": {
                    "type": "Nullable<() => void>",
                    "isOptional": false
                },
                "prerendered": {
                    "type": "boolean",
                    "isOptional": false
                },
                "drawCallback": {
                    "type": "Nullable<ig.TextBlock.DrawCallback>",
                    "isOptional": false
                },
                "buffer": {
                    "type": "ig.ImageAtlasFragment",
                    "isOptional": false
                },
                "bestRatio": {
                    "type": "Nullable<number>",
                    "isOptional": true
                },
                "linePadding": {
                    "type": "number",
                    "isOptional": false
                },
                "SPEED": {
                    "type": "typeof TextBlock$SPEED",
                    "isOptional": false
                }
            },
            "functions": {
                "setText": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "text",
                            "type": "sc.TextLike",
                            "isOptional": false
                        }
                    ]
                },
                "setDrawCallback": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "drawCallback",
                            "type": "ig.TextBlock.DrawCallback",
                            "isOptional": false
                        }
                    ]
                },
                "prerender": {
                    "returnType": "void",
                    "args": []
                },
                "clearPrerendered": {
                    "returnType": "void",
                    "args": []
                },
                "reset": {
                    "returnType": "void",
                    "args": []
                },
                "setSpeed": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "speed",
                            "type": "ig.TextBlock.SPEED",
                            "isOptional": false
                        }
                    ]
                },
                "isFinished": {
                    "returnType": "boolean",
                    "args": []
                },
                "update": {
                    "returnType": "void",
                    "args": []
                },
                "draw": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "TextBlock",
                    "args": [
                        {
                            "name": "font",
                            "type": "ig.MultiFont",
                            "isOptional": false
                        },
                        {
                            "name": "text",
                            "type": "sc.TextLike",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "ig.TextBlock.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "ig.TextParser": {
            "fields": {},
            "functions": {
                "parse": {
                    "returnType": "string",
                    "args": [
                        {
                            "name": "text",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "commands",
                            "type": "ig.TextCommand[] | null",
                            "isOptional": false
                        },
                        {
                            "name": "font",
                            "type": "ig.MultiFont",
                            "isOptional": false
                        },
                        {
                            "name": "ignoreCommands",
                            "type": "Nullable<boolean>",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": []
        }
    },
    "impact.base.game-state": {
        "ig.GameState": {
            "fields": {
                "game": {
                    "type": "{\n        screen: Vec2;\n        size: Vec2;\n        paused: boolean;\n        entities: ig.Entity[];\n        mapEntities: ig.Entity[];\n        shownEntities: ig.Entity[];\n        freeEntityIds: number[];\n        namesEntitied: ig.Game['namedEntities'];\n        _deferredDetach: {};\n        conditionalEntities: ig.Game['conditionalEntities'];\n        maps: ig.Game['maps'];\n        levels: ig.Game['levels'];\n        maxLevel: number;\n        minLevelZ: number;\n        masterLevel: number;\n      }",
                    "isOptional": false
                },
                "system": {
                    "type": "{ zoomFocus: Vec2; zoom: number }",
                    "isOptional": false
                },
                "physics": {
                    "type": "{\n        collUpdateList: ig.CollEntry[];\n        collOutOfScreenList: ig.CollEntry[];\n        collEntryMap: ig.Physics['collEntryMap'];\n      }",
                    "isOptional": false
                },
                "physicsInitialized": {
                    "type": "boolean",
                    "isOptional": false
                },
                "renderer": {
                    "type": "{\n        spriteSlots: ig.Renderer2d['spriteSlots'];\n        guiSpriteSlots: ig.Renderer2d['guiSpriteSlots'];\n      }",
                    "isOptional": false
                }
            },
            "functions": {
                "clear": {
                    "returnType": "void",
                    "args": []
                },
                "initEmpty": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "gameSizeX",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "gameSizeY",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "initFromGame": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "game",
                            "type": "ig.Game",
                            "isOptional": false
                        }
                    ]
                },
                "forceUpdate": {
                    "returnType": "void",
                    "args": []
                },
                "forceDraw": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "negXOffset",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "negYOffset",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "onEnd": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "game",
                            "type": "ig.Game",
                            "isOptional": false
                        }
                    ]
                },
                "onStart": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "game",
                            "type": "ig.Game",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "GameState",
                    "args": []
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "ig.GameState.game": {
            "fields": {
                "screen": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "size": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "paused": {
                    "type": "boolean",
                    "isOptional": false
                },
                "entities": {
                    "type": "ig.Entity[]",
                    "isOptional": false
                },
                "mapEntities": {
                    "type": "ig.Entity[]",
                    "isOptional": false
                },
                "shownEntities": {
                    "type": "ig.Entity[]",
                    "isOptional": false
                },
                "freeEntityIds": {
                    "type": "number[]",
                    "isOptional": false
                },
                "namesEntitied": {
                    "type": "ig.Game['namedEntities']",
                    "isOptional": false
                },
                "_deferredDetach": {
                    "type": "{}",
                    "isOptional": false
                },
                "conditionalEntities": {
                    "type": "ig.Game['conditionalEntities']",
                    "isOptional": false
                },
                "maps": {
                    "type": "ig.Game['maps']",
                    "isOptional": false
                },
                "levels": {
                    "type": "ig.Game['levels']",
                    "isOptional": false
                },
                "maxLevel": {
                    "type": "number",
                    "isOptional": false
                },
                "minLevelZ": {
                    "type": "number",
                    "isOptional": false
                },
                "masterLevel": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.GameState.system": {
            "fields": {
                "zoomFocus": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "zoom": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.GameState.physics": {
            "fields": {
                "collUpdateList": {
                    "type": "ig.CollEntry[]",
                    "isOptional": false
                },
                "collOutOfScreenList": {
                    "type": "ig.CollEntry[]",
                    "isOptional": false
                },
                "collEntryMap": {
                    "type": "ig.Physics['collEntryMap']",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.GameState.renderer": {
            "fields": {
                "spriteSlots": {
                    "type": "ig.Renderer2d['spriteSlots']",
                    "isOptional": false
                },
                "guiSpriteSlots": {
                    "type": "ig.Renderer2d['guiSpriteSlots']",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig": {
            "fields": {
                "GameState": {
                    "type": "GameStateConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "impact.base.game": {
        "ig.Game.Addons": {
            "fields": {
                "all": {
                    "type": "ig.GameAddon[]",
                    "isOptional": false
                },
                "levelLoadStart": {
                    "type": "Addons.EventHandlersArr<'onLevelLoadStart'>",
                    "isOptional": false
                },
                "levelLoaded": {
                    "type": "Addons.EventHandlersArr<'onLevelLoaded'>",
                    "isOptional": false
                },
                "teleport": {
                    "type": "Addons.EventHandlersArr<'onTeleport'>",
                    "isOptional": false
                },
                "preUpdate": {
                    "type": "Addons.EventHandlersArr<'onPreUpdate'>",
                    "isOptional": false
                },
                "postUpdate": {
                    "type": "Addons.EventHandlersArr<'onPostUpdate'>",
                    "isOptional": false
                },
                "deferredUpdate": {
                    "type": "Addons.EventHandlersArr<'onDeferredUpdate'>",
                    "isOptional": false
                },
                "preDraw": {
                    "type": "Addons.EventHandlersArr<'onPreDraw'>",
                    "isOptional": false
                },
                "midDraw": {
                    "type": "Addons.EventHandlersArr<'onMidDraw'>",
                    "isOptional": false
                },
                "postDraw": {
                    "type": "Addons.EventHandlersArr<'onPostDraw'>",
                    "isOptional": false
                },
                "varsChanged": {
                    "type": "Addons.EventHandlersArr<'onVarsChanged'>",
                    "isOptional": false
                },
                "reset": {
                    "type": "Addons.EventHandlersArr<'onReset'>",
                    "isOptional": false
                },
                "windowFocusChanged": {
                    "type": "Addons.EventHandlersArr<'onWindowFocusChanged'>",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.Game": {
            "fields": {
                "clearColor": {
                    "type": "string",
                    "isOptional": false
                },
                "gravity": {
                    "type": "number",
                    "isOptional": false
                },
                "screen": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "soundPos": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "size": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "paused": {
                    "type": "boolean",
                    "isOptional": false
                },
                "mapRenderingBlocked": {
                    "type": "boolean",
                    "isOptional": false
                },
                "isReset": {
                    "type": "boolean",
                    "isOptional": false
                },
                "shadowImage": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "previousMap": {
                    "type": "string",
                    "isOptional": false
                },
                "mapName": {
                    "type": "string",
                    "isOptional": false
                },
                "currentLoadingResource": {
                    "type": "string | ig.Loader",
                    "isOptional": false
                },
                "entities": {
                    "type": "ig.Entity[]",
                    "isOptional": false
                },
                "mapEntities": {
                    "type": "Nullable<ig.Entity>[]",
                    "isOptional": false
                },
                "shownEntities": {
                    "type": "Nullable<ig.Entity>[]",
                    "isOptional": false
                },
                "freeEntityIds": {
                    "type": "number[]",
                    "isOptional": false
                },
                "namedEntities": {
                    "type": "Record<string, ig.Entity>",
                    "isOptional": false
                },
                "conditionalEntities": {
                    "type": "{\n        condition: ig.VarCondition;\n        type: Parameters<ig.Game['spawnEntity']>[0];\n        x: number;\n        y: number;\n        z: number;\n        settings: ig.Entity.Settings;\n        entity: ig.Entity;\n      }[]",
                    "isOptional": false
                },
                "condition": {
                    "type": "ig.VarCondition",
                    "isOptional": false
                },
                "type": {
                    "type": "Parameters<ig.Game['spawnEntity']>[0]",
                    "isOptional": false
                },
                "x": {
                    "type": "number",
                    "isOptional": false
                },
                "y": {
                    "type": "number",
                    "isOptional": false
                },
                "z": {
                    "type": "number",
                    "isOptional": false
                },
                "settings": {
                    "type": "ig.Entity.Settings",
                    "isOptional": false
                },
                "entity": {
                    "type": "ig.Entity",
                    "isOptional": false
                },
                "maps": {
                    "type": "ig.ChunkedMap[]",
                    "isOptional": true
                },
                "levels": {
                    "type": "Record<\n        string,\n        {\n          height?: number;\n          collision?: ig.MAP.Collision;\n          maps?: ig.ChunkedMap[];\n        }\n      >",
                    "isOptional": false
                },
                "height": {
                    "type": "number",
                    "isOptional": true
                },
                "collision": {
                    "type": "ig.MAP.Collision",
                    "isOptional": true
                },
                "maxLevel": {
                    "type": "number",
                    "isOptional": false
                },
                "minLevelZ": {
                    "type": "number",
                    "isOptional": false
                },
                "masterLevel": {
                    "type": "number",
                    "isOptional": false
                },
                "backgroundAnims": {
                    "type": "{}",
                    "isOptional": false
                },
                "backgroundAnimTimer": {
                    "type": "number",
                    "isOptional": false
                },
                "cellSize": {
                    "type": "number",
                    "isOptional": false
                },
                "events": {
                    "type": "ig.EventManager",
                    "isOptional": false
                },
                "renderer": {
                    "type": "ig.Renderer2d",
                    "isOptional": false
                },
                "physics": {
                    "type": "ig.Physics",
                    "isOptional": false
                },
                "_deferredDetach": {
                    "type": "ig.Entity[]",
                    "isOptional": false
                },
                "_levelToLoad": {
                    "type": "null",
                    "isOptional": false
                },
                "playerEntity": {
                    "type": "ig.ENTITY.Player",
                    "isOptional": false
                },
                "marker": {
                    "type": "Nullable<string>",
                    "isOptional": true
                },
                "postPlacementAction": {
                    "type": "{ onPostPlacementAction(player: ig.ENTITY.Player): void }",
                    "isOptional": true
                },
                "teleporting": {
                    "type": "{\n        active: boolean;\n        timer: number;\n        position: ig.TeleportPosition;\n        clearCache: boolean;\n        reloadCache: boolean;\n        levelData: Nullable<sc.MapModel.Map>;\n      }",
                    "isOptional": false
                },
                "addons": {
                    "type": "Game.Addons",
                    "isOptional": false
                },
                "states": {
                    "type": "ig.GameState[]",
                    "isOptional": false
                },
                "fullyStopped": {
                    "type": "boolean",
                    "isOptional": false
                },
                "firstUpdateLoop": {
                    "type": "boolean",
                    "isOptional": false
                },
                "_deferredVarChanged": {
                    "type": "boolean",
                    "isOptional": false
                },
                "mapLoader": {
                    "type": "ig.LoaderConstructor",
                    "isOptional": true
                },
                "dot": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "onPostPlacementAction": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "player",
                            "type": "ig.ENTITY.Player",
                            "isOptional": false
                        }
                    ]
                },
                "popState": {
                    "returnType": "void",
                    "args": []
                },
                "printGameAddonsString": {
                    "returnType": "void",
                    "args": []
                },
                "getLevelHeight": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "level",
                            "type": "number | string",
                            "isOptional": false
                        }
                    ]
                },
                "getHeightFromLevelOffset": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "level",
                            "type": "sc.MapModel.MapEntity['level']",
                            "isOptional": false
                        }
                    ]
                },
                "getEntityByName": {
                    "returnType": "E",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "getEntitiesInCircle": {
                    "returnType": "ig.Entity[]",
                    "args": [
                        {
                            "name": "center",
                            "type": "Vec3",
                            "isOptional": false
                        },
                        {
                            "name": "radius",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "yScale",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "zHeight",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "dir",
                            "type": "Vec2",
                            "isOptional": true
                        },
                        {
                            "name": "startAngle",
                            "type": "number",
                            "isOptional": true
                        },
                        {
                            "name": "endAngle",
                            "type": "number",
                            "isOptional": true
                        },
                        {
                            "name": "exception",
                            "type": "ig.Entity",
                            "isOptional": true
                        },
                        {
                            "name": "moreExceptions",
                            "type": "ig.Entity[]",
                            "isOptional": true
                        },
                        {
                            "name": "rectangular",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "getEntitiesByType": {
                    "returnType": "E[]",
                    "args": [
                        {
                            "name": "type",
                            "type": "new (x: number, y: number, z: number, settings: S) => E | string",
                            "isOptional": false
                        }
                    ]
                },
                "isPlayerTouch": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "entity",
                            "type": "ig.Entity",
                            "isOptional": false
                        },
                        {
                            "name": "player",
                            "type": "ig.Entity",
                            "isOptional": false
                        },
                        {
                            "name": "dir",
                            "type": "Nullable<Vec2 & { dot: number }>",
                            "isOptional": true
                        }
                    ]
                },
                "isControlBlocked": {
                    "returnType": "boolean",
                    "args": []
                },
                "getErrorData": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "gameInfo",
                            "type": "Record<string, unknown>",
                            "isOptional": false
                        }
                    ]
                },
                "setPaused": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "paused",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "spawnEntity": {
                    "returnType": "(typeof ig.ENTITY)[T]",
                    "args": [
                        {
                            "name": "entity",
                            "type": "T",
                            "isOptional": false
                        },
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "sc.MapModel.MapEntity<T>['settings']",
                            "isOptional": false
                        },
                        {
                            "name": "showAppearEffects",
                            "type": "Nullable<boolean>",
                            "isOptional": true
                        }
                    ]
                },
                "reset": {
                    "returnType": "void",
                    "args": []
                },
                "teleport": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "mapName",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "marker",
                            "type": "Nullable<ig.TeleportPosition>",
                            "isOptional": true
                        },
                        {
                            "name": "hint",
                            "type": "ig.Game.TeleportLoadHint",
                            "isOptional": true
                        },
                        {
                            "name": "clearCache",
                            "type": "Nullable<boolean>",
                            "isOptional": true
                        },
                        {
                            "name": "reloadCache",
                            "type": "Nullable<boolean>",
                            "isOptional": true
                        }
                    ]
                },
                "isTeleporting": {
                    "returnType": "boolean",
                    "args": []
                },
                "onTeleportEnd": {
                    "returnType": "void",
                    "args": []
                },
                "createPlayer": {
                    "returnType": "void",
                    "args": []
                },
                "preloadLevel": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "mapName",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "loadLevel": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "data",
                            "type": "sc.MapModel.Map",
                            "isOptional": false
                        },
                        {
                            "name": "clearCache",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "reloadCache",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "loadingComplete": {
                    "returnType": "void",
                    "args": []
                },
                "update": {
                    "returnType": "void",
                    "args": []
                },
                "preDrawMaps": {
                    "returnType": "void",
                    "args": []
                },
                "run": {
                    "returnType": "void",
                    "args": []
                },
                "deferredUpdate": {
                    "returnType": "void",
                    "args": []
                },
                "deferredMapEntityUpdate": {
                    "returnType": "void",
                    "args": []
                },
                "draw": {
                    "returnType": "void",
                    "args": []
                },
                "finalDraw": {
                    "returnType": "void",
                    "args": []
                },
                "varsChanged": {
                    "returnType": "void",
                    "args": []
                },
                "varsChangedDeferred": {
                    "returnType": "void",
                    "args": []
                },
                "traceEntity": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "res",
                            "type": "ig.Physics.TraceResult",
                            "isOptional": false
                        },
                        {
                            "name": "entity",
                            "type": "ig.Entity",
                            "isOptional": false
                        },
                        {
                            "name": "vx",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "vy",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "xOffset",
                            "type": "number",
                            "isOptional": true
                        },
                        {
                            "name": "yOffeset",
                            "type": "number",
                            "isOptional": true
                        },
                        {
                            "name": "zOffset",
                            "type": "number",
                            "isOptional": true
                        },
                        {
                            "name": "collType",
                            "type": "ig.COLLTYPE",
                            "isOptional": true
                        },
                        {
                            "name": "collisionList",
                            "type": "Nullable<ig.CollEntry[]>",
                            "isOptional": true
                        },
                        {
                            "name": "entryException",
                            "type": "ig.Entity",
                            "isOptional": true
                        },
                        {
                            "name": "negZHeight",
                            "type": "number",
                            "isOptional": true
                        }
                    ]
                },
                "trace": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "res",
                            "type": "ig.Physics.TraceResult",
                            "isOptional": false
                        },
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "vx",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "vy",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "width",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "height",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "zHeight",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "collType",
                            "type": "ig.COLLTYPE",
                            "isOptional": false
                        },
                        {
                            "name": "entryException",
                            "type": "Nullable<ig.Entity>",
                            "isOptional": true
                        },
                        {
                            "name": "collisionList",
                            "type": "Nullable<ig.CollEntry[]>",
                            "isOptional": true
                        },
                        {
                            "name": "onGround",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "onGameLoopStart": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "Game",
                    "args": []
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "ig.Game.teleporting": {
            "fields": {
                "active": {
                    "type": "boolean",
                    "isOptional": false
                },
                "timer": {
                    "type": "number",
                    "isOptional": false
                },
                "position": {
                    "type": "ig.TeleportPosition",
                    "isOptional": false
                },
                "clearCache": {
                    "type": "boolean",
                    "isOptional": false
                },
                "reloadCache": {
                    "type": "boolean",
                    "isOptional": false
                },
                "levelData": {
                    "type": "Nullable<sc.MapModel.Map>",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig": {
            "fields": {
                "Game": {
                    "type": "GameConstructor"
                },
                "GameAddon": {
                    "type": "GameAddonConstructor"
                },
                "TeleportPosition": {
                    "type": "TeleportPositionConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.GameAddon": {
            "fields": {
                "name": {
                    "type": "string",
                    "isOptional": false
                },
                "levelLoadStartOrder": {
                    "type": "number",
                    "isOptional": false
                },
                "levelLoadedOrder": {
                    "type": "number",
                    "isOptional": false
                },
                "teleportOrder": {
                    "type": "number",
                    "isOptional": false
                },
                "preUpdateOrder": {
                    "type": "number",
                    "isOptional": false
                },
                "postUpdateOrder": {
                    "type": "number",
                    "isOptional": false
                },
                "deferredUpdateOrder": {
                    "type": "number",
                    "isOptional": false
                },
                "preDrawOrder": {
                    "type": "number",
                    "isOptional": false
                },
                "midDrawOrder": {
                    "type": "number",
                    "isOptional": false
                },
                "postDrawOrder": {
                    "type": "number",
                    "isOptional": false
                },
                "resetOrder": {
                    "type": "number",
                    "isOptional": false
                },
                "varsChangedOrder": {
                    "type": "number",
                    "isOptional": false
                },
                "windowFocusOrder": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "onLevelLoadStart": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "data",
                            "type": "sc.MapModel.Map",
                            "isOptional": false
                        }
                    ]
                },
                "onLevelLoaded": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "data",
                            "type": "ig.Game",
                            "isOptional": false
                        }
                    ]
                },
                "onTeleport": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "map",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "teleportPosition",
                            "type": "Nullable<ig.TeleportPosition>",
                            "isOptional": true
                        },
                        {
                            "name": "hint",
                            "type": "ig.Game.TeleportLoadHint",
                            "isOptional": true
                        }
                    ]
                },
                "onPreUpdate": {
                    "returnType": "void",
                    "args": []
                },
                "onPostUpdate": {
                    "returnType": "void",
                    "args": []
                },
                "onDeferredUpdate": {
                    "returnType": "void",
                    "args": []
                },
                "onPreDraw": {
                    "returnType": "void",
                    "args": []
                },
                "onMidDraw": {
                    "returnType": "void",
                    "args": []
                },
                "onPostDraw": {
                    "returnType": "void",
                    "args": []
                },
                "onReset": {
                    "returnType": "void",
                    "args": []
                },
                "onVarsChanged": {
                    "returnType": "void",
                    "args": []
                },
                "onWindowFocusChanged": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "status",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "GameAddon",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "ig.TeleportPosition": {
            "fields": {
                "marker": {
                    "type": "Nullable<string>",
                    "isOptional": false
                },
                "pos": {
                    "type": "Nullable<Vec3>",
                    "isOptional": false
                },
                "size": {
                    "type": "Nullable<Vec2>",
                    "isOptional": false
                },
                "face": {
                    "type": "Nullable<Vec2>",
                    "isOptional": false
                },
                "level": {
                    "type": "number",
                    "isOptional": false
                },
                "baseZPos": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "setFromData": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "marker",
                            "type": "Nullable<string>",
                            "isOptional": true
                        },
                        {
                            "name": "pos",
                            "type": "Nullable<Vec3>",
                            "isOptional": true
                        },
                        {
                            "name": "face",
                            "type": "Nullable<Vec2>",
                            "isOptional": true
                        },
                        {
                            "name": "level",
                            "type": "Nullable<number>",
                            "isOptional": true
                        },
                        {
                            "name": "baseZPos",
                            "type": "Nullable<number>",
                            "isOptional": true
                        },
                        {
                            "name": "size",
                            "type": "Nullable<Vec2>",
                            "isOptional": true
                        }
                    ]
                },
                "setFromJson": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "data",
                            "type": "ig.TeleportPosition.Settings",
                            "isOptional": false
                        }
                    ]
                },
                "getJson": {
                    "returnType": "ig.TeleportPosition.Settings",
                    "args": []
                },
                "init": {
                    "returnType": "TeleportPosition",
                    "args": [
                        {
                            "name": "marker",
                            "type": "Nullable<string>",
                            "isOptional": true
                        }
                    ]
                },
                "createFromJson": {
                    "returnType": "ig.TeleportPosition",
                    "args": [
                        {
                            "name": "settings",
                            "type": "Nullable<ig.TeleportPosition.Settings>",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class"
            ]
        }
    },
    "impact.base.global-settings": {},
    "impact.base.image": {
        "ig.Drawable": {
            "fields": {},
            "functions": {
                "draw": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "targetX",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "targetY",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "sourceX",
                            "type": "number",
                            "isOptional": true
                        },
                        {
                            "name": "sourceY",
                            "type": "number",
                            "isOptional": true
                        },
                        {
                            "name": "width",
                            "type": "number",
                            "isOptional": true
                        },
                        {
                            "name": "height",
                            "type": "number",
                            "isOptional": true
                        },
                        {
                            "name": "flipX",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "flipY",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "offsetY",
                            "type": "number",
                            "isOptional": true
                        },
                        {
                            "name": "offsetHeight",
                            "type": "number",
                            "isOptional": true
                        },
                        {
                            "name": "fragment",
                            "type": "unknown",
                            "isOptional": true
                        },
                        {
                            "name": "fragmentAlpha",
                            "type": "number",
                            "isOptional": true
                        },
                        {
                            "name": "filtered",
                            "type": "unknown",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": []
        },
        "ig.Image": {
            "fields": {
                "data": {
                    "type": "HTMLImageElement",
                    "isOptional": false
                },
                "width": {
                    "type": "number",
                    "isOptional": false
                },
                "height": {
                    "type": "number",
                    "isOptional": false
                },
                "additionalCallbacks": {
                    "type": "Image.Callback[]",
                    "isOptional": false
                }
            },
            "functions": {
                "loadInternal": {
                    "returnType": "void",
                    "args": []
                },
                "addCallback": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "callback",
                            "type": "Image.Callback",
                            "isOptional": false
                        }
                    ]
                },
                "onload": {
                    "returnType": "void",
                    "args": []
                },
                "onerror": {
                    "returnType": "void",
                    "args": []
                },
                "resize": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "scale",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "createPattern": {
                    "returnType": "ig.ImagePattern",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "width",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "height",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "optimization",
                            "type": "ig.ImagePattern.OPT",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "Image",
                    "args": [
                        {
                            "name": "pathOrData",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Loadable",
                "Drawable"
            ]
        },
        "ig": {
            "fields": {
                "Image": {
                    "type": "ImageConstructor"
                },
                "ImagePattern": {
                    "type": "ImagePatternConstructor"
                },
                "SimpleColor": {
                    "type": "SimpleColorConstructor"
                },
                "TransitionColor": {
                    "type": "TransitionColorConstructor"
                },
                "DoubleColor": {
                    "type": "DoubleColorConstructor"
                },
                "ImagePatternSheet": {
                    "type": "ImagePatternSheetConstructor"
                },
                "ImageAtlas": {
                    "type": "ImageAtlasConstructor"
                },
                "imageAtlas": {
                    "type": "ig.ImageAtlas"
                },
                "ImageAtlasFragment": {
                    "type": "ImageAtlasFragmentConstructor"
                },
                "ScreenBuffer": {
                    "type": "ScreenBufferConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ImagePattern": {
            "fields": {
                "width": {
                    "type": "number",
                    "isOptional": false
                },
                "OPT": {
                    "type": "typeof ImagePattern$OPT",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "ig.ImagePattern",
                    "args": [
                        {
                            "name": "path",
                            "type": "string | ig.Image",
                            "isOptional": false
                        },
                        {
                            "name": "sourceX",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "sourceY",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "width",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "height",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "patternType",
                            "type": "ImagePattern$OPT",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class",
                "Drawable"
            ]
        },
        "ig.SimpleColor": {
            "fields": {
                "color": {
                    "type": "string",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "SimpleColor",
                    "args": [
                        {
                            "name": "color",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class",
                "Drawable"
            ]
        },
        "ig.TransitionColor": {
            "fields": {
                "colorA": {
                    "type": "string",
                    "isOptional": false
                },
                "colorB": {
                    "type": "string",
                    "isOptional": false
                },
                "colorBWeight": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "setColorBWeight": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "weight",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "TransitionColor",
                    "args": [
                        {
                            "name": "colorA",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "colorB",
                            "type": "string",
                            "isOptional": true
                        },
                        {
                            "name": "colorBWeight",
                            "type": "number",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class",
                "Drawable"
            ]
        },
        "ig.DoubleColor": {
            "fields": {
                "color1": {
                    "type": "ig.TransitionColor",
                    "isOptional": false
                },
                "color2": {
                    "type": "ig.TransitionColor",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "DoubleColor",
                    "args": [
                        {
                            "name": "color1",
                            "type": "ig.TransitionColor",
                            "isOptional": false
                        },
                        {
                            "name": "color2",
                            "type": "ig.TransitionColor",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "ig.ImagePatternSheet": {
            "fields": {
                "image": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "patternTileWidth": {
                    "type": "number",
                    "isOptional": false
                },
                "patternTileHeight": {
                    "type": "number",
                    "isOptional": false
                },
                "offX": {
                    "type": "number",
                    "isOptional": false
                },
                "offY": {
                    "type": "number",
                    "isOptional": false
                },
                "xCount": {
                    "type": "number",
                    "isOptional": false
                },
                "yCount": {
                    "type": "number",
                    "isOptional": false
                },
                "optimization": {
                    "type": "ig.ImagePattern.OPT",
                    "isOptional": false
                },
                "patterns": {
                    "type": "ig.ImagePattern[]",
                    "isOptional": false
                }
            },
            "functions": {
                "getCacheKey": {
                    "returnType": "string",
                    "args": [
                        {
                            "name": "path",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "optimization",
                            "type": "ig.ImagePattern.OPT",
                            "isOptional": false
                        },
                        {
                            "name": "tileWidth",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "tileHeight",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "offX",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "offY",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "xCount",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "yCount",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "onCacheCleared": {
                    "returnType": "void",
                    "args": []
                },
                "onImageLoaded": {
                    "returnType": "void",
                    "args": []
                },
                "getPattern": {
                    "returnType": "ig.ImagePattern",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "ImagePatternSheet",
                    "args": [
                        {
                            "name": "path",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "optimalization",
                            "type": "ig.ImagePattern.OPT",
                            "isOptional": false
                        },
                        {
                            "name": "patternTileWidth",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "patternTileHeight",
                            "type": "number",
                            "isOptional": true
                        },
                        {
                            "name": "offX",
                            "type": "number",
                            "isOptional": true
                        },
                        {
                            "name": "offY",
                            "type": "number",
                            "isOptional": true
                        },
                        {
                            "name": "xCount",
                            "type": "number",
                            "isOptional": true
                        },
                        {
                            "name": "yCount",
                            "type": "number",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": [
                "ig.Cacheable"
            ]
        },
        "ig.ImageAtlas": {
            "fields": {
                "scale": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "getFragment": {
                    "returnType": "ig.ImageAtlasFragment",
                    "args": [
                        {
                            "name": "width",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "height",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "fillCallback",
                            "type": "() => void",
                            "isOptional": false
                        }
                    ]
                },
                "defragment": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "clearBuffers",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "_getFragment": {
                    "returnType": "ig.ImageAtlasFragment",
                    "args": [
                        {
                            "name": "width",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "height",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "fillCallback",
                            "type": "() => void",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "ImageAtlas",
                    "args": []
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "ig.ImageAtlasFragment": {
            "fields": {
                "offX": {
                    "type": "number",
                    "isOptional": false
                },
                "offY": {
                    "type": "number",
                    "isOptional": false
                },
                "width": {
                    "type": "number",
                    "isOptional": false
                },
                "height": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": [
                "ig.Class"
            ]
        },
        "ig.ScreenBuffer": {
            "fields": {
                "width": {
                    "type": "number",
                    "isOptional": false
                },
                "height": {
                    "type": "number",
                    "isOptional": false
                },
                "buffer": {
                    "type": "Nullable<HTMLCanvasElement>",
                    "isOptional": false
                },
                "scroll": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "off": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "shift": {
                    "type": "Vec2 & { full: boolean }",
                    "isOptional": false
                },
                "full": {
                    "type": "boolean",
                    "isOptional": false
                },
                "redrawFull": {
                    "type": "boolean",
                    "isOptional": false
                },
                "ownerMap": {
                    "type": "Nullable<ig.ChunkedMap>",
                    "isOptional": false
                }
            },
            "functions": {
                "clearCached": {
                    "returnType": "void",
                    "args": []
                },
                "resetBuffer": {
                    "returnType": "void",
                    "args": []
                },
                "fetchBuffer": {
                    "returnType": "void",
                    "args": []
                },
                "update": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "map",
                            "type": "ig.ChunkedMap",
                            "isOptional": false
                        }
                    ]
                },
                "draw": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "offX",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "offfY",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "width",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "height",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "setGridTile": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "tile",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "map",
                            "type": "ig.ChunkedMap",
                            "isOptional": false
                        }
                    ]
                },
                "_redrawFull": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "map",
                            "type": "ig.ChunkedMap",
                            "isOptional": false
                        }
                    ]
                },
                "_redrawShift": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "map",
                            "type": "ig.ChunkedMap",
                            "isOptional": false
                        }
                    ]
                },
                "_splitDraw": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "map",
                            "type": "ig.ChunkedMap",
                            "isOptional": false
                        },
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "scrollX",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "scrollY",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "absX",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "height",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "ScreenBuffer",
                    "args": [
                        {
                            "name": "ownerMap",
                            "type": "ig.ChunkedMap",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class"
            ]
        }
    },
    "impact.base.impact": {
        "ig": {
            "fields": {
                "mainLoader": {
                    "type": "ig.Loader"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "impact.base.input": {
        "ig.Input.KnownActions": {
            "fields": {
                "back": {
                    "type": "true",
                    "isOptional": false
                },
                "menu": {
                    "type": "true",
                    "isOptional": false
                },
                "confirm": {
                    "type": "true",
                    "isOptional": false
                },
                "quick": {
                    "type": "true",
                    "isOptional": false
                },
                "dash2": {
                    "type": "true",
                    "isOptional": false
                },
                "pause": {
                    "type": "true",
                    "isOptional": false
                },
                "special": {
                    "type": "true",
                    "isOptional": false
                },
                "guard": {
                    "type": "true",
                    "isOptional": false
                },
                "melee": {
                    "type": "true",
                    "isOptional": false
                },
                "left": {
                    "type": "true",
                    "isOptional": false
                },
                "up": {
                    "type": "true",
                    "isOptional": false
                },
                "right": {
                    "type": "true",
                    "isOptional": false
                },
                "down": {
                    "type": "true",
                    "isOptional": false
                },
                "cold": {
                    "type": "true",
                    "isOptional": false
                },
                "shock": {
                    "type": "true",
                    "isOptional": false
                },
                "heat": {
                    "type": "true",
                    "isOptional": false
                },
                "wave": {
                    "type": "true",
                    "isOptional": false
                },
                "neutral": {
                    "type": "true",
                    "isOptional": false
                },
                "help2": {
                    "type": "true",
                    "isOptional": false
                },
                "'circle-right'": {
                    "type": "true",
                    "isOptional": false
                },
                "'skip-cutscene'": {
                    "type": "true",
                    "isOptional": false
                },
                "help": {
                    "type": "true",
                    "isOptional": false
                },
                "help4": {
                    "type": "true",
                    "isOptional": false
                },
                "help3": {
                    "type": "true",
                    "isOptional": false
                },
                "'circle-left'": {
                    "type": "true",
                    "isOptional": false
                },
                "langedit": {
                    "type": "true",
                    "isOptional": false
                },
                "snapshot": {
                    "type": "true",
                    "isOptional": false
                },
                "savedialog": {
                    "type": "true",
                    "isOptional": false
                },
                "fullscreen": {
                    "type": "true",
                    "isOptional": false
                },
                "aim": {
                    "type": "true",
                    "isOptional": false
                },
                "dash": {
                    "type": "true",
                    "isOptional": false
                },
                "scrollUp": {
                    "type": "true",
                    "isOptional": false
                },
                "scrollDown": {
                    "type": "true",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.Input": {
            "fields": {
                "bindings": {
                    "type": "PartialRecord<ig.KEY, ig.Input.KnownAction> & PartialRecord<ig.KEY, string>",
                    "isOptional": false
                },
                "actions": {
                    "type": "PartialRecord<ig.Input.KnownAction, boolean>",
                    "isOptional": false
                },
                "presses": {
                    "type": "PartialRecord<ig.Input.KnownAction, boolean>",
                    "isOptional": false
                },
                "keyups": {
                    "type": "PartialRecord<ig.Input.KnownAction, boolean>",
                    "isOptional": false
                },
                "locks": {
                    "type": "PartialRecord<ig.Input.KnownAction, boolean>",
                    "isOptional": false
                },
                "delayedKeyup": {
                    "type": "ig.Input.KnownAction[]",
                    "isOptional": false
                },
                "currentDevice": {
                    "type": "ig.INPUT_DEVICES",
                    "isOptional": false
                },
                "isUsingMouse": {
                    "type": "boolean",
                    "isOptional": false
                },
                "isUsingKeyboard": {
                    "type": "boolean",
                    "isOptional": false
                },
                "isUsingAccelerometer": {
                    "type": "boolean",
                    "isOptional": false
                },
                "mouse": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "accel": {
                    "type": "Vec3",
                    "isOptional": false
                },
                "mouseGuiActive": {
                    "type": "boolean",
                    "isOptional": false
                },
                "lastMousePos": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "ignoreKeyboard": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "initMouse": {
                    "returnType": "void",
                    "args": []
                },
                "initKeyboard": {
                    "returnType": "void",
                    "args": []
                },
                "initAccelerometer": {
                    "returnType": "void",
                    "args": []
                },
                "mousewheel": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "event",
                            "type": "WheelEvent",
                            "isOptional": false
                        }
                    ]
                },
                "mousemove": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "isOptional": false
                        }
                    ]
                },
                "mouseout": {
                    "returnType": "void",
                    "args": []
                },
                "mouseOutOfScreen": {
                    "returnType": "boolean",
                    "args": []
                },
                "contextmenu": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "event",
                            "type": "PointerEvent",
                            "isOptional": false
                        }
                    ]
                },
                "isInIframe": {
                    "returnType": "boolean",
                    "args": []
                },
                "isInIframeAndUnfocused": {
                    "returnType": "boolean",
                    "args": []
                },
                "keydown": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent | KeyboardEvent",
                            "isOptional": false
                        }
                    ]
                },
                "keyup": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent | KeyboardEvent",
                            "isOptional": false
                        }
                    ]
                },
                "blur": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent | KeyboardEvent",
                            "isOptional": false
                        }
                    ]
                },
                "focus": {
                    "returnType": "void",
                    "args": []
                },
                "devicemotion": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "event",
                            "type": "DeviceMotionEvent",
                            "isOptional": false
                        }
                    ]
                },
                "bind": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "key",
                            "type": "ig.KEY",
                            "isOptional": false
                        },
                        {
                            "name": "action",
                            "type": "ig.Input.KnownAction",
                            "isOptional": false
                        }
                    ]
                },
                "bindTouch": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "key",
                            "type": "ig.KEY",
                            "isOptional": false
                        },
                        {
                            "name": "action",
                            "type": "ig.Input.KnownAction",
                            "isOptional": false
                        }
                    ]
                },
                "unbind": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "key",
                            "type": "ig.KEY",
                            "isOptional": false
                        }
                    ]
                },
                "unbindAll": {
                    "returnType": "void",
                    "args": []
                },
                "state": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "action",
                            "type": "ig.Input.KnownAction",
                            "isOptional": false
                        }
                    ]
                },
                "pressed": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "action",
                            "type": "ig.Input.KnownAction",
                            "isOptional": false
                        }
                    ]
                },
                "keyupd": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "action",
                            "type": "ig.Input.KnownAction",
                            "isOptional": false
                        }
                    ]
                },
                "clearPressed": {
                    "returnType": "void",
                    "args": []
                },
                "touchStart": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "event",
                            "type": "TouchEvent",
                            "isOptional": false
                        },
                        {
                            "name": "action",
                            "type": "ig.Input.KnownAction",
                            "isOptional": false
                        }
                    ]
                },
                "touchEnd": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "event",
                            "type": "TouchEvent",
                            "isOptional": false
                        },
                        {
                            "name": "action",
                            "type": "ig.Input.KnownAction",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "Input",
                    "args": []
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "ig": {
            "fields": {
                "Input": {
                    "type": "InputConstructor"
                },
                "input": {
                    "type": "Input"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "impact.base.lang": {
        "ig.Lang": {
            "fields": {
                "labels": {
                    "type": "any",
                    "isOptional": false
                }
            },
            "functions": {
                "loadInternal": {
                    "returnType": "void",
                    "args": []
                },
                "get": {
                    "returnType": "T",
                    "args": [
                        {
                            "name": "path",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "onerror": {
                    "returnType": "void",
                    "args": []
                },
                "onload": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "labels",
                            "type": "any",
                            "isOptional": false
                        }
                    ]
                },
                "grammarReplace": {
                    "returnType": "string",
                    "args": [
                        {
                            "name": "template",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "substitution",
                            "type": "sc.TextLike",
                            "isOptional": false
                        },
                        {
                            "name": "unknownValue",
                            "type": "Nullable<any>",
                            "isOptional": true
                        }
                    ]
                },
                "_doCallback": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "Lang",
                    "args": []
                }
            },
            "parents": [
                "ig.SingleLoadable"
            ]
        },
        "ig": {
            "fields": {
                "Lang": {
                    "type": "LangConstructor"
                },
                "lang": {
                    "type": "ig.Lang"
                },
                "LangLabel": {
                    "type": "LangLabelConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.LangLabel": {
            "fields": {
                "langUid": {
                    "type": "number",
                    "isOptional": false
                },
                "value": {
                    "type": "string",
                    "isOptional": false
                },
                "data": {
                    "type": "Nullable<ig.LangLabel.Data>",
                    "isOptional": false
                },
                "originFile": {
                    "type": "Nullable<string>",
                    "isOptional": false
                }
            },
            "functions": {
                "toString": {
                    "returnType": "string",
                    "args": []
                },
                "init": {
                    "returnType": "LangLabel",
                    "args": [
                        {
                            "name": "data",
                            "type": "Nullable<ig.LangLabel.Data>",
                            "isOptional": false
                        }
                    ]
                },
                "setOriginFile": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "file",
                            "type": "Nullable<string>",
                            "isOptional": false
                        }
                    ]
                },
                "getOriginFile": {
                    "returnType": "Nullable<string>",
                    "args": []
                },
                "getText": {
                    "returnType": "string",
                    "args": [
                        {
                            "name": "data",
                            "type": "ig.LangLabel.Data",
                            "isOptional": false
                        },
                        {
                            "name": "allowEmpty",
                            "type": "Nullable<boolean>",
                            "isOptional": true
                        }
                    ]
                },
                "bakeVars": {
                    "returnType": "T",
                    "args": [
                        {
                            "name": "value",
                            "type": "T",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class"
            ]
        }
    },
    "impact.base.loader": {
        "ig": {
            "fields": {
                "cacheList": {
                    "type": "Record<string, Record<string, Nullable<ig.Cacheable>>>"
                },
                "fileForwarding": {
                    "type": "Record<string, string>"
                },
                "Cacheable": {
                    "type": "CacheableConstructor"
                },
                "Loadable": {
                    "type": "LoadableConstructor"
                },
                "JsonLoadable": {
                    "type": "JsonLoadableConstructor"
                },
                "SingleLoadable": {
                    "type": "SingleLoadableConstructor"
                },
                "Loader": {
                    "type": "LoaderConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.Cacheable.ImplementsCache": {
            "fields": {
                "cache": {
                    "type": "Record<string, T>",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.Cacheable": {
            "fields": {
                "cacheType": {
                    "type": "string",
                    "isOptional": false
                },
                "cacheKey": {
                    "type": "string",
                    "isOptional": false
                },
                "referenceCount": {
                    "type": "number",
                    "isOptional": false
                },
                "emptyMapChangeCount": {
                    "type": "number",
                    "isOptional": false
                },
                "cache": {
                    "type": "Record<string, Nullable<Cacheable>>",
                    "isOptional": false
                }
            },
            "functions": {
                "increaseRef": {
                    "returnType": "void",
                    "args": []
                },
                "decreaseRef": {
                    "returnType": "void",
                    "args": []
                },
                "getCacheKey": {
                    "returnType": "Nullable<string>",
                    "args": [
                        {
                            "name": "args",
                            "type": "unknown[]",
                            "isOptional": false
                        }
                    ]
                },
                "onCacheCleared": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "Cacheable",
                    "args": []
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "ig.Loadable": {
            "fields": {
                "loaded": {
                    "type": "boolean",
                    "isOptional": false
                },
                "failed": {
                    "type": "boolean",
                    "isOptional": false
                },
                "path": {
                    "type": "string",
                    "isOptional": false
                },
                "debugReload": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "reload": {
                    "returnType": "void",
                    "args": []
                },
                "loadingFinished": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "success",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "Loadable",
                    "args": [
                        {
                            "name": "pathOrData",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Cacheable",
                "ig.Resource"
            ]
        },
        "ig.JsonLoadable": {
            "fields": {},
            "functions": {
                "onload": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "data",
                            "type": "unknown",
                            "isOptional": false
                        }
                    ]
                },
                "getJsonPath": {
                    "returnType": "string",
                    "args": []
                },
                "init": {
                    "returnType": "JsonLoadable",
                    "args": [
                        {
                            "name": "item",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Loadable",
                "ig.Resource"
            ]
        },
        "ig.SingleLoadable": {
            "fields": {
                "loaded": {
                    "type": "boolean",
                    "isOptional": false
                },
                "failed": {
                    "type": "boolean",
                    "isOptional": false
                },
                "path": {
                    "type": "string",
                    "isOptional": false
                },
                "instance": {
                    "type": "SingleLoadable",
                    "isOptional": false
                }
            },
            "functions": {
                "loadingFinished": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "success",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "SingleLoadable",
                    "args": []
                }
            },
            "parents": [
                "ig.Class",
                "ig.Resource"
            ]
        },
        "ig.Loader": {
            "fields": {
                "resources": {
                    "type": "unknown[]",
                    "isOptional": false
                },
                "prevResourcesCnt": {
                    "type": "number",
                    "isOptional": false
                },
                "status": {
                    "type": "number",
                    "isOptional": false
                },
                "done": {
                    "type": "boolean",
                    "isOptional": false
                },
                "lastPath": {
                    "type": "string",
                    "isOptional": false
                },
                "gameObjectCreated": {
                    "type": "boolean",
                    "isOptional": false
                },
                "_unloaded": {
                    "type": "string[]",
                    "isOptional": false
                },
                "_drawStatus": {
                    "type": "number",
                    "isOptional": false
                },
                "_intervalId": {
                    "type": "number",
                    "isOptional": false
                },
                "_loadCallbackBound": {
                    "type": "Nullable<ig.Resource.LoadCallback>",
                    "isOptional": false
                },
                "_loadIndex": {
                    "type": "number",
                    "isOptional": false
                },
                "_loadCallback": {
                    "type": "ReplaceThisParameter<ig.Resource.LoadCallback, this>",
                    "isOptional": false
                }
            },
            "functions": {
                "load": {
                    "returnType": "void",
                    "args": []
                },
                "end": {
                    "returnType": "void",
                    "args": []
                },
                "onEnd": {
                    "returnType": "void",
                    "args": []
                },
                "finalize": {
                    "returnType": "void",
                    "args": []
                },
                "draw": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "Loader",
                    "args": [
                        {
                            "name": "gameClass",
                            "type": "sc.CrossCodeConstructor",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class"
            ]
        }
    },
    "impact.base.map": {
        "ig": {
            "fields": {
                "MAP": {
                    "type": "{\n      HeightMap: ig.MAP.HeightMapConstructor;\n      Collision: ig.MAP.CollisionConstructor;\n      Navigation: ig.MAP.NavigationConstructor;\n      Background: ig.MAP.BackgroundConstructor;\n      Light: ig.MAP.LightConstructor;\n    }"
                },
                "HeightMap": {
                    "type": "ig.MAP.HeightMapConstructor",
                    "isOptional": false
                },
                "Collision": {
                    "type": "ig.MAP.CollisionConstructor",
                    "isOptional": false
                },
                "Navigation": {
                    "type": "ig.MAP.NavigationConstructor",
                    "isOptional": false
                },
                "Background": {
                    "type": "ig.MAP.BackgroundConstructor",
                    "isOptional": false
                },
                "Light": {
                    "type": "ig.MAP.LightConstructor",
                    "isOptional": false
                },
                "Map": {
                    "type": "MapConstructor"
                },
                "ChunkedMap": {
                    "type": "ChunkedMapConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.Map": {
            "fields": {
                "tilesize": {
                    "type": "number",
                    "isOptional": false
                },
                "width": {
                    "type": "number",
                    "isOptional": false
                },
                "height": {
                    "type": "number",
                    "isOptional": false
                },
                "data": {
                    "type": "number[][]",
                    "isOptional": false
                },
                "zHeight": {
                    "type": "number",
                    "isOptional": false
                },
                "zTileOff": {
                    "type": "number",
                    "isOptional": false
                },
                "moveSpeed": {
                    "type": "Vec2",
                    "isOptional": false
                }
            },
            "functions": {
                "copy": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "copyMapIntoThis",
                            "type": "ig.Map",
                            "isOptional": false
                        }
                    ]
                },
                "clear": {
                    "returnType": "void",
                    "args": []
                },
                "getTile": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "entityX",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "entityY",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "getGridTile": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "setTile": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "entityX",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "entityY",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "tile",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "setGridTile": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "tile",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "Map",
                    "args": [
                        {
                            "name": "data",
                            "type": "sc.MapModel.MapLayer",
                            "isOptional": false
                        },
                        {
                            "name": "zHeight",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "ig.ChunkedMap": {
            "fields": {
                "scroll": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "distance": {
                    "type": "number",
                    "isOptional": false
                },
                "yDistance": {
                    "type": "number",
                    "isOptional": false
                },
                "repeat": {
                    "type": "boolean",
                    "isOptional": false
                },
                "enabled": {
                    "type": "boolean",
                    "isOptional": false
                },
                "preRender": {
                    "type": "boolean",
                    "isOptional": false
                },
                "screenRender": {
                    "type": "boolean",
                    "isOptional": false
                },
                "screenBuffer": {
                    "type": "ig.ScreenBuffer",
                    "isOptional": true
                },
                "preRenderedChunks": {
                    "type": "HTMLCanvasElement[][]",
                    "isOptional": false
                },
                "chunkSizeX": {
                    "type": "number",
                    "isOptional": false
                },
                "chunkSizeY": {
                    "type": "number",
                    "isOptional": false
                },
                "debugDraw": {
                    "type": "boolean",
                    "isOptional": false
                },
                "lighter": {
                    "type": "boolean",
                    "isOptional": false
                },
                "merged": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "clearPreRenderedChunks": {
                    "returnType": "void",
                    "args": []
                },
                "setScreenPos": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "preRenderMapToChunks": {
                    "returnType": "HTMLCanvasElement[][] | false",
                    "args": [
                        {
                            "name": "isMerged",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "readyToDraw": {
                    "returnType": "boolean",
                    "args": []
                },
                "preRenderChunk": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "cx",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "cy",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "w_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "h_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "merge",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "preRenderScreen": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "context",
                            "type": "CanvasRenderingContext2D",
                            "isOptional": false
                        },
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "scrollX",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "scrollY",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "width",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "height",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "redrawChunkTile": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "chunk",
                            "type": "HTMLCanvasElement",
                            "isOptional": false
                        },
                        {
                            "name": "offX",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "offY",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "tile",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "_draw": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": true
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": true
                        },
                        {
                            "name": "width",
                            "type": "number",
                            "isOptional": true
                        },
                        {
                            "name": "height",
                            "type": "number",
                            "isOptional": true
                        }
                    ]
                },
                "draw": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": true
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": true
                        },
                        {
                            "name": "width",
                            "type": "number",
                            "isOptional": true
                        },
                        {
                            "name": "height",
                            "type": "number",
                            "isOptional": true
                        }
                    ]
                },
                "drawFromScreenBuffer": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "width",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "height",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "drawPreRendered": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "width",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "height",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "drawTiled": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "width",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "height",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "drawAnimated": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "width",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "height",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "ChunkedMap",
                    "args": [
                        {
                            "name": "data",
                            "type": "sc.MapModel.MapLayer",
                            "isOptional": false
                        },
                        {
                            "name": "zHeight",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Map"
            ]
        }
    },
    "impact.base.physics": {
        "ig.Physics.TraceResult": {
            "fields": {
                "dir": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "dist": {
                    "type": "number",
                    "isOptional": false
                },
                "levelUp": {
                    "type": "boolean",
                    "isOptional": false
                },
                "forcePushEntries": {
                    "type": "unknown",
                    "isOptional": false
                },
                "forcePushDirs": {
                    "type": "unknown",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.Physics.CollEntry": {
            "fields": {
                "_inCollisionMap": {
                    "type": "boolean",
                    "isOptional": false
                },
                "type": {
                    "type": "ig.COLLTYPE",
                    "isOptional": false
                },
                "pos": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "size": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "padding": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "parentColl": {
                    "type": "CollEntry",
                    "isOptional": false
                },
                "ignoreCollision": {
                    "type": "boolean",
                    "isOptional": false
                },
                "weight": {
                    "type": "number",
                    "isOptional": false
                },
                "entity": {
                    "type": "ig.Entity",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.Physics": {
            "fields": {
                "cellSize": {
                    "type": "number",
                    "isOptional": false
                },
                "collUpdateList": {
                    "type": "ig.CollEntry[]",
                    "isOptional": false
                },
                "collOutOfScreenList": {
                    "type": "ig.CollEntry[]",
                    "isOptional": false
                },
                "collEntryMap": {
                    "type": "ig.CollEntry[][][] & {\n        width: number;\n        height: number;\n      }",
                    "isOptional": false
                },
                "width": {
                    "type": "number",
                    "isOptional": false
                },
                "height": {
                    "type": "number",
                    "isOptional": false
                },
                "_updateCount": {
                    "type": "number",
                    "isOptional": false
                },
                "_trackEntityTouch": {
                    "type": "boolean",
                    "isOptional": false
                },
                "dir": {
                    "type": "Vec2",
                    "isOptional": true
                }
            },
            "functions": {
                "mapLoaded": {
                    "returnType": "void",
                    "args": []
                },
                "update": {
                    "returnType": "void",
                    "args": []
                },
                "updateCollEntry": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "coll",
                            "type": "ig.CollEntry",
                            "isOptional": false
                        },
                        {
                            "name": "collisionList",
                            "type": "ig.CollEntry[]",
                            "isOptional": false
                        }
                    ]
                },
                "initTraceResult": {
                    "returnType": "ig.Physics.TraceResult",
                    "args": [
                        {
                            "name": "empty",
                            "type": "{ dir?: Vec2 }",
                            "isOptional": false
                        }
                    ]
                },
                "trace": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "res",
                            "type": "ig.Physics.TraceResult",
                            "isOptional": false
                        },
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "vx",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "vy",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "width",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "height",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "zHeight",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "collType",
                            "type": "ig.COLLTYPE",
                            "isOptional": false
                        },
                        {
                            "name": "entryException",
                            "type": "Nullable<ig.CollEntry>",
                            "isOptional": true
                        },
                        {
                            "name": "collisionList",
                            "type": "Nullable<ig.CollEntry[]>",
                            "isOptional": true
                        },
                        {
                            "name": "onGround",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "addCollEntry": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "coll",
                            "type": "ig.CollEntry",
                            "isOptional": false
                        }
                    ]
                },
                "removeCollEntry": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "coll",
                            "type": "ig.CollEntry",
                            "isOptional": false
                        }
                    ]
                },
                "moveEntity": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "coll",
                            "type": "ig.CollEntry",
                            "isOptional": false
                        },
                        {
                            "name": "collisionList",
                            "type": "ig.CollEntry[]",
                            "isOptional": false
                        }
                    ]
                },
                "moveEntityZ": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "coll",
                            "type": "ig.CollEntry",
                            "isOptional": false
                        },
                        {
                            "name": "fVel",
                            "type": "Vec2",
                            "isOptional": false
                        },
                        {
                            "name": "prevOnGround",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "traceOnEntryMap": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "res",
                            "type": "ig.Physics.TraceResult",
                            "isOptional": false
                        },
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "vx",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "vy",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "width",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "height",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "zHeight",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "collType",
                            "type": "ig.COLLTYPE",
                            "isOptional": false
                        },
                        {
                            "name": "entryException",
                            "type": "Nullable<ig.CollEntry>",
                            "isOptional": true
                        },
                        {
                            "name": "collisionList",
                            "type": "Nullable<ig.CollEntry[]>",
                            "isOptional": true
                        },
                        {
                            "name": "onGround",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "getGroundEntry": {
                    "returnType": "ig.CollEntry | undefined",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "width",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "height",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "zHeight",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "currentZ",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "minZ",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "exception",
                            "type": "ig.CollEntry",
                            "isOptional": false
                        },
                        {
                            "name": "collData",
                            "type": "ig.CollEntry",
                            "isOptional": true
                        }
                    ]
                },
                "init": {
                    "returnType": "Physics",
                    "args": []
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "ig": {
            "fields": {
                "Physics": {
                    "type": "PhysicsConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "impact.base.renderer": {
        "ig.Renderer2d.SpriteDrawSlot": {
            "fields": {
                "cubeSprite": {
                    "type": "ig.CubeSprite",
                    "isOptional": false
                },
                "ground": {
                    "type": "boolean",
                    "isOptional": false
                },
                "yIndex": {
                    "type": "number",
                    "isOptional": false
                },
                "zMin": {
                    "type": "number",
                    "isOptional": false
                },
                "zMax": {
                    "type": "number",
                    "isOptional": false
                },
                "spriteIdx": {
                    "type": "number",
                    "isOptional": false
                },
                "drawShadow": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "update": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "drawShadow",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "draw": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "zMin",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "zMax",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "SpriteDrawSlot",
                    "args": [
                        {
                            "name": "cubeSprite",
                            "type": "ig.CubeSprite",
                            "isOptional": false
                        },
                        {
                            "name": "ground",
                            "type": "boolean",
                            "isOptional": false
                        },
                        {
                            "name": "spriteIdx",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "ig.Renderer2d": {
            "fields": {
                "spriteSlots": {
                    "type": "ig.Renderer2d.SpriteDrawSlot[]",
                    "isOptional": false
                },
                "guiSpriteSlots": {
                    "type": "ig.Renderer2d.SpriteDrawSlot[]",
                    "isOptional": false
                },
                "SpriteDrawSlot": {
                    "type": "ig.Renderer2d.SpriteDrawSlotConstructor",
                    "isOptional": false
                }
            },
            "functions": {
                "prepareDraw": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "shownEntities",
                            "type": "ig.Entity[]",
                            "isOptional": false
                        },
                        {
                            "name": "forceDraw",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "drawPostLayerSprites": {
                    "returnType": "void",
                    "args": []
                },
                "mapCleared": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "Renderer2d",
                    "args": []
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "ig": {
            "fields": {
                "Renderer2d": {
                    "type": "Renderer2dConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "impact.base.sprite-fx": {
        "ig.SpriteEffectBase.Settings": {
            "fields": {
                "delay": {
                    "type": "number",
                    "isOptional": true
                },
                "duration": {
                    "type": "number",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.SpriteEffectBase": {
            "fields": {
                "delay": {
                    "type": "number",
                    "isOptional": false
                },
                "duration": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "updateSprite": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "sprite",
                            "type": "ig.CubeSprite",
                            "isOptional": false
                        },
                        {
                            "name": "time",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "animDuration",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "apply": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "sprite",
                            "type": "ig.CubeSprite",
                            "isOptional": false
                        },
                        {
                            "name": "weight",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "SpriteEffectBase",
                    "args": [
                        {
                            "name": "settings",
                            "type": "ig.SpriteEffectBase.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "ig": {
            "fields": {
                "SpriteEffectBase": {
                    "type": "SpriteEffectBaseConstructor"
                },
                "SPRITE_FX": {
                    "type": "{\n      SLIDE: ig.SPRITE_FX.SLIDEConstructor;\n      MOVE_XYZ: ig.SPRITE_FX.MOVE_XYZConstructor;\n    }"
                },
                "SLIDE": {
                    "type": "ig.SPRITE_FX.SLIDEConstructor",
                    "isOptional": false
                },
                "MOVE_XYZ": {
                    "type": "ig.SPRITE_FX.MOVE_XYZConstructor",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.SPRITE_FX.SLIDE.Settings": {
            "fields": {
                "dir": {
                    "type": "keyof typeof ig.ActorEntity.FACE4",
                    "isOptional": true
                },
                "start": {
                    "type": "number",
                    "isOptional": true
                },
                "end": {
                    "type": "number",
                    "isOptional": true
                },
                "keySpline": {
                    "type": "keyof typeof window.KEY_SPLINES",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": [
                "ig.SpriteEffectBase.Settings"
            ]
        },
        "ig.SPRITE_FX.SLIDE": {
            "fields": {
                "dir": {
                    "type": "ig.ActorEntity.FACE4",
                    "isOptional": false
                },
                "start": {
                    "type": "number",
                    "isOptional": false
                },
                "end": {
                    "type": "number",
                    "isOptional": false
                },
                "keySpline": {
                    "type": "KeySpline",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "SLIDE",
                    "args": [
                        {
                            "name": "settings",
                            "type": "ig.SPRITE_FX.SLIDE.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.SpriteEffectBase"
            ]
        },
        "ig.SPRITE_FX.MOVE_XYZ.Settings": {
            "fields": {
                "start": {
                    "type": "number",
                    "isOptional": true
                },
                "end": {
                    "type": "number",
                    "isOptional": true
                },
                "keySpline": {
                    "type": "keyof typeof window.KEY_SPLINES",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": [
                "ig.SpriteEffectBase.Settings"
            ]
        },
        "ig.SPRITE_FX.MOVE_XYZ": {
            "fields": {
                "dir": {
                    "type": "ig.ActorEntity.FACE4",
                    "isOptional": false
                },
                "start": {
                    "type": "number",
                    "isOptional": false
                },
                "end": {
                    "type": "number",
                    "isOptional": false
                },
                "keySpline": {
                    "type": "KeySpline",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "MOVE_XYZ",
                    "args": [
                        {
                            "name": "settings",
                            "type": "ig.SPRITE_FX.MOVE_XYZ.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.SpriteEffectBase"
            ]
        }
    },
    "impact.base.sprite": {
        "ig.CubeSprite": {
            "fields": {
                "pos": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "size": {
                    "type": "Vec3",
                    "isOptional": false
                },
                "shadow": {
                    "type": "Vec3 & { diameter: number; scaleY: number }",
                    "isOptional": false
                },
                "diameter": {
                    "type": "number",
                    "isOptional": false
                },
                "scaleY": {
                    "type": "number",
                    "isOptional": false
                },
                "gfxOffset": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "gfxCut": {
                    "type": "{ top: number; bottom: number; left: number; right: number }",
                    "isOptional": false
                },
                "tmpOffset": {
                    "type": "Vec3",
                    "isOptional": false
                },
                "wallY": {
                    "type": "number",
                    "isOptional": false
                },
                "image": {
                    "type": "Nullable<ig.Drawable | ig.DoubleColor | ig.TransitionColor>",
                    "isOptional": false
                },
                "src": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "alpha": {
                    "type": "number",
                    "isOptional": false
                },
                "flip": {
                    "type": "{ x: boolean; y: boolean }",
                    "isOptional": false
                },
                "scale": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "rotate": {
                    "type": "number",
                    "isOptional": false
                },
                "pivot": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "overlay": {
                    "type": "{ color: Nullable<string>; alpha: number }",
                    "isOptional": false
                },
                "lighterOverlay": {
                    "type": "{ color: Nullable<string>; alpha: number }",
                    "isOptional": false
                },
                "aboveZ": {
                    "type": "number",
                    "isOptional": false
                },
                "mergeTop": {
                    "type": "boolean",
                    "isOptional": false
                },
                "renderData": {
                    "type": "Record<string, unknown>",
                    "isOptional": false
                },
                "gui": {
                    "type": "boolean",
                    "isOptional": false
                },
                "renderMode": {
                    "type": "Nullable<GlobalCompositeOperation>",
                    "isOptional": false
                },
                "alwaysRender": {
                    "type": "boolean",
                    "isOptional": false
                },
                "noOverlapSolving": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "clear": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "guiSprites",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "setPos": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "setGfxOffset": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "setGfxCut": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "top",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "bottom",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "left",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "right",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "setShadow": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "diameter",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "type",
                            "type": "ig.COLL_SHADOW_TYPE",
                            "isOptional": true
                        },
                        {
                            "name": "scaleY",
                            "type": "number",
                            "isOptional": true
                        }
                    ]
                },
                "setImageSrc": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "image",
                            "type": "this['image']",
                            "isOptional": false
                        },
                        {
                            "name": "offsetX",
                            "type": "Nullable<number>",
                            "isOptional": true
                        },
                        {
                            "name": "offsetY",
                            "type": "Nullable<number>",
                            "isOptional": true
                        }
                    ]
                },
                "setOverlayColor": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "color",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "alpha",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "setLighterOverlayColor": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "color",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "alpha",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "setInvisible": {
                    "returnType": "void",
                    "args": []
                },
                "setEntityDefault": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "entity",
                            "type": "ig.Entity",
                            "isOptional": false
                        },
                        {
                            "name": "tileWidth",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "tileHeight",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "shapeType",
                            "type": "ig.ANIM_SHAPE_TYPE | keyof typeof ig.ANIM_SHAPE_TYPE",
                            "isOptional": false
                        },
                        {
                            "name": "wallY",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "offset",
                            "type": "Vec3 | null",
                            "isOptional": false
                        },
                        {
                            "name": "image",
                            "type": "ig.Image",
                            "isOptional": false
                        },
                        {
                            "name": "srcX",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "srcY",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "CubeSprite",
                    "args": [
                        {
                            "name": "gui",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "ig.CubeSprite.gfxCut": {
            "fields": {
                "top": {
                    "type": "number",
                    "isOptional": false
                },
                "bottom": {
                    "type": "number",
                    "isOptional": false
                },
                "left": {
                    "type": "number",
                    "isOptional": false
                },
                "right": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.CubeSprite.flip": {
            "fields": {
                "x": {
                    "type": "boolean",
                    "isOptional": false
                },
                "y": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.CubeSprite.overlay": {
            "fields": {
                "color": {
                    "type": "Nullable<string>",
                    "isOptional": false
                },
                "alpha": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.CubeSprite.lighterOverlay": {
            "fields": {
                "color": {
                    "type": "Nullable<string>",
                    "isOptional": false
                },
                "alpha": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig": {
            "fields": {
                "CubeSprite": {
                    "type": "CubeSpriteConstructor"
                },
                "SpritePool": {
                    "type": "SpritePoolConstructor"
                },
                "spritePool": {
                    "type": "SpritePool"
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.SpritePool": {
            "fields": {
                "sprites": {
                    "type": "ig.CubeSprite[]",
                    "isOptional": false
                }
            },
            "functions": {
                "get": {
                    "returnType": "ig.CubeSprite",
                    "args": [
                        {
                            "name": "guiSprites",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "SpritePool",
                    "args": []
                }
            },
            "parents": [
                "ig.Class"
            ]
        }
    },
    "impact.base.steps": {
        "ig.StepBase": {
            "fields": {
                "_nextStep": {
                    "type": "Nullable<ig.StepBase>",
                    "isOptional": false
                },
                "_cacheIsCleared": {
                    "type": "boolean",
                    "isOptional": false
                },
                "branches": {
                    "type": "Record<string, ig.StepBase> | null | undefined",
                    "isOptional": false
                }
            },
            "functions": {
                "start": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "args",
                            "type": "unknown[]",
                            "isOptional": false
                        }
                    ]
                },
                "run": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "args",
                            "type": "unknown[]",
                            "isOptional": false
                        }
                    ]
                },
                "getNext": {
                    "returnType": "Nullable<ig.StepBase>",
                    "args": [
                        {
                            "name": "args",
                            "type": "unknown[]",
                            "isOptional": false
                        }
                    ]
                },
                "getJumpLabelName": {
                    "returnType": "string | null",
                    "args": []
                },
                "getBranchNames": {
                    "returnType": "string[]",
                    "args": []
                },
                "init": {
                    "returnType": "StepBase",
                    "args": [
                        {
                            "name": "settings",
                            "type": "unknown",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "ig": {
            "fields": {
                "StepBase": {
                    "type": "StepBaseConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "impact.base.tile-info": {
        "ig.TileInfo": {
            "fields": {
                "animatedTiles": {
                    "type": "Record<number, [number, number, number, number]>",
                    "isOptional": false
                },
                "animSpeed": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "getAnimTiles": {
                    "returnType": "Nullable<[number, number, number, number]>",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "TileInfo",
                    "args": [
                        {
                            "name": "tileset",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "ig": {
            "fields": {
                "TileInfo": {
                    "type": "TileInfoConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "impact.base.timer": {
        "ig.Timer": {
            "fields": {
                "target": {
                    "type": "number",
                    "isOptional": false
                },
                "base": {
                    "type": "number",
                    "isOptional": false
                },
                "last": {
                    "type": "number",
                    "isOptional": false
                },
                "stopped": {
                    "type": "boolean",
                    "isOptional": false
                },
                "_last": {
                    "type": "number",
                    "isOptional": false
                },
                "time": {
                    "type": "number",
                    "isOptional": false
                },
                "timeScale": {
                    "type": "number",
                    "isOptional": false
                },
                "maxStep": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "set": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "seconds",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "keepRelativeDelta",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "reverseRelativeDelta": {
                    "returnType": "void",
                    "args": []
                },
                "stop": {
                    "returnType": "void",
                    "args": []
                },
                "resume": {
                    "returnType": "void",
                    "args": []
                },
                "reset": {
                    "returnType": "void",
                    "args": []
                },
                "tick": {
                    "returnType": "number",
                    "args": []
                },
                "weight": {
                    "returnType": "number",
                    "args": []
                },
                "delta": {
                    "returnType": "number",
                    "args": []
                },
                "step": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "Timer",
                    "args": [
                        {
                            "name": "target",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "ig": {
            "fields": {
                "Timer": {
                    "type": "TimerConstructor"
                },
                "WeightTimer": {
                    "type": "WeightTimerConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.WeightTimer": {
            "fields": {
                "duration": {
                    "type": "number",
                    "isOptional": false
                },
                "timer": {
                    "type": "number",
                    "isOptional": false
                },
                "actualTick": {
                    "type": "boolean",
                    "isOptional": false
                },
                "mode": {
                    "type": "ig.TIMER_MODE",
                    "isOptional": false
                },
                "repeatCount": {
                    "type": "number",
                    "isOptional": false
                },
                "_rndBool": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "set": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "duration",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "mode",
                            "type": "ig.TIMER_MODE",
                            "isOptional": true
                        }
                    ]
                },
                "getRemainingTime": {
                    "returnType": "number",
                    "args": []
                },
                "setRemainingTime": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "time",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "tick": {
                    "returnType": "void",
                    "args": []
                },
                "done": {
                    "returnType": "boolean",
                    "args": []
                },
                "getTimePassed": {
                    "returnType": "number",
                    "args": []
                },
                "get": {
                    "returnType": "number",
                    "args": []
                },
                "getTotalWeight": {
                    "returnType": "number",
                    "args": []
                },
                "hasRepeated": {
                    "returnType": "boolean",
                    "args": []
                },
                "getRepeatCount": {
                    "returnType": "number",
                    "args": []
                },
                "onBlinkDecline": {
                    "returnType": "boolean",
                    "args": []
                },
                "init": {
                    "returnType": "WeightTimer",
                    "args": [
                        {
                            "name": "actualTick",
                            "type": "boolean",
                            "isOptional": false
                        },
                        {
                            "name": "duration",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "mode",
                            "type": "ig.TIMER_MODE",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class"
            ]
        }
    },
    "impact.base.utils": {
        "ig.RGBColorData": {
            "fields": {
                "r": {
                    "type": "number",
                    "isOptional": false
                },
                "g": {
                    "type": "number",
                    "isOptional": false
                },
                "b": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.RGBColor": {
            "fields": {
                "ok": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "toRGB": {
                    "returnType": "string",
                    "args": []
                },
                "toHex": {
                    "returnType": "string",
                    "args": []
                },
                "assign": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "color",
                            "type": "ig.RGBColorData",
                            "isOptional": false
                        }
                    ]
                },
                "addColor": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "color",
                            "type": "ig.RGBColorData",
                            "isOptional": false
                        },
                        {
                            "name": "strenght",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "interpolate": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "color1",
                            "type": "ig.RGBColorData",
                            "isOptional": false
                        },
                        {
                            "name": "color2",
                            "type": "ig.RGBColorData",
                            "isOptional": false
                        },
                        {
                            "name": "strenght",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "RGBColor",
                    "args": [
                        {
                            "name": "color",
                            "type": "ig.RGBColorData | string",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "RGBColorData"
            ]
        },
        "ig": {
            "fields": {
                "RGBColor": {
                    "type": "RGBColorConstructor"
                },
                "UniformRNG": {
                    "type": "UniformRNGConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.UniformRNG": {
            "fields": {
                "lastIndex": {
                    "type": "number",
                    "isOptional": false
                },
                "values": {
                    "type": "number[]",
                    "isOptional": false
                }
            },
            "functions": {
                "get": {
                    "returnType": "number",
                    "args": []
                },
                "init": {
                    "returnType": "UniformRNG",
                    "args": [
                        {
                            "name": "numCount",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "subtractOneFromNumCount",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class"
            ]
        }
    },
    "impact.base.vars": {
        "ig.KnownVars": {
            "fields": {
                "'arena.active'": {
                    "type": "boolean",
                    "isOptional": false
                },
                "'plot.line'": {
                    "type": "number",
                    "isOptional": false
                },
                "'plot.metaSpace'": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.Vars.Accessor": {
            "fields": {},
            "functions": {
                "onVarAccess": {
                    "returnType": "VarValue | void",
                    "args": [
                        {
                            "name": "path",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "keys",
                            "type": "string[]",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": []
        },
        "ig.Vars": {
            "fields": {
                "currentLevelName": {
                    "type": "string",
                    "isOptional": false
                },
                "storage": {
                    "type": "any",
                    "isOptional": false
                }
            },
            "functions": {
                "get": {
                    "returnType": "T",
                    "args": [
                        {
                            "name": "path",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "setDefault": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "path",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "value",
                            "type": "T",
                            "isOptional": false
                        }
                    ]
                },
                "set": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "path",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "value",
                            "type": "T",
                            "isOptional": false
                        }
                    ]
                },
                "add": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "path",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "value",
                            "type": "T",
                            "isOptional": false
                        }
                    ]
                },
                "sub": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "path",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "value",
                            "type": "T",
                            "isOptional": false
                        }
                    ]
                },
                "mul": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "path",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "value",
                            "type": "T",
                            "isOptional": false
                        }
                    ]
                },
                "div": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "path",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "value",
                            "type": "T",
                            "isOptional": false
                        }
                    ]
                },
                "mod": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "path",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "value",
                            "type": "T",
                            "isOptional": false
                        }
                    ]
                },
                "and": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "path",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "value",
                            "type": "T",
                            "isOptional": false
                        }
                    ]
                },
                "or": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "path",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "value",
                            "type": "T",
                            "isOptional": false
                        }
                    ]
                },
                "xor": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "path",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "value",
                            "type": "T",
                            "isOptional": false
                        }
                    ]
                },
                "registerVarAccessor": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "domain",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "accessor",
                            "type": "ig.Vars.Accessor",
                            "isOptional": false
                        },
                        {
                            "name": "editor",
                            "type": "string",
                            "isOptional": true
                        }
                    ]
                },
                "onLevelChange": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "mapName",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "Vars",
                    "args": []
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "ig": {
            "fields": {
                "Vars": {
                    "type": "VarsConstructor"
                },
                "vars": {
                    "type": "Vars"
                },
                "VarCondition": {
                    "type": "ig.VarConditionConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.VarCondition": {
            "fields": {
                "code": {
                    "type": "string",
                    "isOptional": false
                },
                "pretty": {
                    "type": "string",
                    "isOptional": false
                },
                "vars": {
                    "type": "string[]",
                    "isOptional": false
                },
                "condition": {
                    "type": "() => boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "setCondition": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "condition",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "evaluate": {
                    "returnType": "boolean",
                    "args": []
                },
                "toString": {
                    "returnType": "string",
                    "args": []
                },
                "init": {
                    "returnType": "ig.VarCondition",
                    "args": [
                        {
                            "name": "condition",
                            "type": "string | undefined",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class"
            ]
        }
    },
    "impact.base.worker": {},
    "impact.feature.base.entities.marker": {
        "ig.ENTITY.Marker.Settings": {
            "fields": {
                "dir": {
                    "type": "keyof typeof ig.ActorEntity.FACE8",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": [
                "ig.Entity.Settings"
            ]
        },
        "ig.ENTITY.Marker": {
            "fields": {
                "name": {
                    "type": "string",
                    "isOptional": false
                },
                "dir": {
                    "type": "unknown",
                    "isOptional": false
                },
                "face": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "_wm": {
                    "type": "ig.Config",
                    "isOptional": false
                }
            },
            "functions": {
                "applyMarkerPosition": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "entity",
                            "type": "ig.Entity",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "Marker",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "ig.ENTITY.Marker.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Entity"
            ]
        },
        "ig.ENTITY": {
            "fields": {
                "Marker": {
                    "type": "MarkerConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "impact.feature.base.entities.object-layer-view": {
        "ig.EntityHideManager": {
            "fields": {
                "hideCondition": {
                    "type": "ig.VarCondition",
                    "isOptional": false
                },
                "hideTimer": {
                    "type": "number",
                    "isOptional": false
                },
                "hidden": {
                    "type": "boolean",
                    "isOptional": false
                },
                "efficentMode": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "isBusy": {
                    "returnType": "number",
                    "args": []
                },
                "init": {
                    "returnType": "EntityHideManager",
                    "args": [
                        {
                            "name": "condition",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "ig": {
            "fields": {
                "EntityHideManager": {
                    "type": "EntityHideManagerConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "impact.feature.base.entities.sound-entities": {},
    "impact.feature.base.entities.touch-trigger": {
        "ig.ENTITY.TouchTrigger.Settings": {
            "fields": {
                "size": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "variable": {
                    "type": "string",
                    "isOptional": false
                },
                "type": {
                    "type": "keyof typeof ig.TOUCH_TRIGGER_TYPE",
                    "isOptional": true
                },
                "shape": {
                    "type": "keyof typeof ig.COLLSHAPE",
                    "isOptional": true
                },
                "zHeight": {
                    "type": "number",
                    "isOptional": true
                },
                "reactToParty": {
                    "type": "boolean",
                    "isOptional": true
                },
                "startCondition": {
                    "type": "string",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": [
                "ig.Entity.Settings"
            ]
        },
        "ig.ENTITY.TouchTrigger": {
            "fields": {
                "name": {
                    "type": "string",
                    "isOptional": false
                },
                "face": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "touchType": {
                    "type": "number",
                    "isOptional": false
                },
                "touchedCnt": {
                    "type": "number",
                    "isOptional": false
                },
                "startCondition": {
                    "type": "ig.VarCondition",
                    "isOptional": false
                },
                "isOn": {
                    "type": "boolean",
                    "isOptional": false
                },
                "_wm": {
                    "type": "ig.Config",
                    "isOptional": false
                }
            },
            "functions": {
                "update": {
                    "returnType": "void",
                    "args": []
                },
                "setOn": {
                    "returnType": "void",
                    "args": []
                },
                "setOff": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "TouchTrigger",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "ig.ENTITY.TouchTrigger.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Entity"
            ]
        },
        "ig.ENTITY": {
            "fields": {
                "TouchTrigger": {
                    "type": "TouchTriggerConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "impact.feature.base.plug-in": {},
    "impact.feature.bgm.plug-in": {},
    "impact.feature.camera.camera": {
        "ig.Camera": {
            "fields": {
                "targets": {
                    "type": "ig.Camera.TargetHandle[]",
                    "isOptional": false
                },
                "namedTargets": {
                    "type": "Record<string, ig.Camera.TargetHandle>",
                    "isOptional": false
                },
                "_currentPos": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "_currentZ": {
                    "type": "number",
                    "isOptional": false
                },
                "_currentZoom": {
                    "type": "number",
                    "isOptional": false
                },
                "_currentZoomPos": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "_zSlow": {
                    "type": "boolean",
                    "isOptional": false
                },
                "_lastPos": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "_lastZoom": {
                    "type": "number",
                    "isOptional": false
                },
                "_lastZoomPos": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "_duration": {
                    "type": "number",
                    "isOptional": false
                },
                "_time": {
                    "type": "number",
                    "isOptional": false
                },
                "_transitionFunction": {
                    "type": "KeySpline",
                    "isOptional": false
                },
                "_cameraInBounds": {
                    "type": "boolean",
                    "isOptional": false
                },
                "postUpdateOrder": {
                    "type": "number",
                    "isOptional": false
                },
                "levelLoadStartOrder": {
                    "type": "number",
                    "isOptional": false
                },
                "SPEED_OPTIONS": {
                    "type": "ig.Camera.SPEED_OPTIONS",
                    "isOptional": false
                },
                "PosTarget": {
                    "type": "ig.Camera.PosTargetConstructor",
                    "isOptional": false
                },
                "EntityTarget": {
                    "type": "ig.Camera.EntityTargetConstructor",
                    "isOptional": false
                },
                "TargetHandle": {
                    "type": "ig.Camera.TargetHandleConstructor",
                    "isOptional": false
                }
            },
            "functions": {
                "onPostUpdate": {
                    "returnType": "void",
                    "args": []
                },
                "pushTarget": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "target",
                            "type": "ig.Camera.TargetHandle",
                            "isOptional": false
                        },
                        {
                            "name": "speed",
                            "type": "ig.Camera.SPEED_OPTIONS | keyof typeof ig.Camera.SPEED_OPTIONS",
                            "isOptional": true
                        },
                        {
                            "name": "transitionFunction",
                            "type": "KeySpline",
                            "isOptional": true
                        },
                        {
                            "name": "name",
                            "type": "string",
                            "isOptional": true
                        }
                    ]
                },
                "replaceTarget": {
                    "returnType": "unknown",
                    "args": [
                        {
                            "name": "toDelete",
                            "type": "ig.Camera.TargetHandle",
                            "isOptional": false
                        },
                        {
                            "name": "newTarget",
                            "type": "ig.Camera.TargetHandle",
                            "isOptional": false
                        },
                        {
                            "name": "speed",
                            "type": "ig.Camera.SPEED_OPTIONS | keyof typeof ig.Camera.SPEED_OPTIONS",
                            "isOptional": true
                        },
                        {
                            "name": "transitionFunction",
                            "type": "KeySpline",
                            "isOptional": true
                        }
                    ]
                },
                "_getDuration": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "speed",
                            "type": "ig.Camera.SPEED_OPTIONS | keyof typeof ig.Camera.SPEED_OPTIONS",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "Camera",
                    "args": []
                }
            },
            "parents": [
                "ig.GameAddon"
            ]
        },
        "ig": {
            "fields": {
                "Camera": {
                    "type": "CameraConstructor"
                },
                "camera": {
                    "type": "Camera"
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.Camera.SPEED_OPTIONS": {
            "fields": {
                "NORMAL": {
                    "type": "number",
                    "isOptional": false
                },
                "FAST": {
                    "type": "number",
                    "isOptional": false
                },
                "FASTER": {
                    "type": "number",
                    "isOptional": false
                },
                "FASTEST": {
                    "type": "number",
                    "isOptional": false
                },
                "FASTESTEST": {
                    "type": "number",
                    "isOptional": false
                },
                "SLOW": {
                    "type": "number",
                    "isOptional": false
                },
                "SLOWER": {
                    "type": "number",
                    "isOptional": false
                },
                "SLOWEST": {
                    "type": "number",
                    "isOptional": false
                },
                "SLOWESTEST": {
                    "type": "number",
                    "isOptional": false
                },
                "SLOWEST_DREAM": {
                    "type": "number",
                    "isOptional": false
                },
                "IMMEDIATELY": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.Camera.PosTarget": {
            "fields": {
                "pos": {
                    "type": "Vec2",
                    "isOptional": false
                }
            },
            "functions": {
                "start": {
                    "returnType": "void",
                    "args": []
                },
                "getPos": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "dest",
                            "type": "Vec2",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "PosTarget",
                    "args": [
                        {
                            "name": "pos",
                            "type": "Vec2",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class",
                "ig.Camera.TargetHandle.Target"
            ]
        },
        "ig.Camera.EntityTarget": {
            "fields": {
                "entity": {
                    "type": "ig.Entity",
                    "isOptional": false
                },
                "_zSlow": {
                    "type": "boolean",
                    "isOptional": false
                },
                "_currentZ": {
                    "type": "number",
                    "isOptional": false
                },
                "_lockZ": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "start": {
                    "returnType": "void",
                    "args": []
                },
                "getPos": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "dest",
                            "type": "Vec2",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "EntityTarget",
                    "args": [
                        {
                            "name": "entity",
                            "type": "ig.Entity",
                            "isOptional": false
                        },
                        {
                            "name": "lockZ",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class",
                "ig.Camera.TargetHandle.Target"
            ]
        },
        "ig.Camera.TargetHandle.Target": {
            "fields": {},
            "functions": {
                "start": {
                    "returnType": "void",
                    "args": []
                },
                "getPos": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "dest",
                            "type": "Vec2",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": []
        },
        "ig.Camera.TargetHandle": {
            "fields": {
                "target": {
                    "type": "ig.Camera.TargetHandle.Target",
                    "isOptional": false
                },
                "offset": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "zoomOffset": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "keepZoomFocusAligned": {
                    "type": "boolean",
                    "isOptional": false
                },
                "_offsetDuration": {
                    "type": "number",
                    "isOptional": false
                },
                "_offsetTime": {
                    "type": "number",
                    "isOptional": false
                },
                "_currentOffset": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "_currentZoomOffset": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "_lastOffset": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "_lastZoomOffset": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "zoomTimer": {
                    "type": "ig.WeightTimer",
                    "isOptional": false
                },
                "oldZoom": {
                    "type": "number",
                    "isOptional": false
                },
                "targetZoom": {
                    "type": "number",
                    "isOptional": false
                },
                "keyspline": {
                    "type": "KeySpline",
                    "isOptional": false
                },
                "lockZ": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "TargetHandle",
                    "args": [
                        {
                            "name": "target",
                            "type": "ig.Camera.TargetHandle.Target",
                            "isOptional": false
                        },
                        {
                            "name": "xOffset",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "yOffset",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class"
            ]
        }
    },
    "impact.feature.camera.plug-in": {},
    "impact.feature.database.database": {
        "ig.Database.Data": {
            "fields": {
                "areas": {
                    "type": "{ [name: string]: sc.MapModel.Area }",
                    "isOptional": false
                },
                "chapters": {
                    "type": "Chapter[]",
                    "isOptional": false
                },
                "commonEvents": {
                    "type": "Record<string, sc.CommonEvent.Data>",
                    "isOptional": false
                },
                "drops": {
                    "type": "Record<DropKey, Drop>",
                    "isOptional": false
                },
                "enemies": {
                    "type": "{ [id: string]: EnemyData }",
                    "isOptional": false
                },
                "leawords": {
                    "type": "string[]",
                    "isOptional": false
                },
                "lore": {
                    "type": "Record<string, LoreData>",
                    "isOptional": false
                },
                "names": {
                    "type": "ig.Database.Names",
                    "isOptional": false
                },
                "shops": {
                    "type": "{ [id: string]: ShopData }",
                    "isOptional": false
                },
                "traders": {
                    "type": "{ [id: string]: sc.TradeModel.Trader }",
                    "isOptional": false
                },
                "toggleSets": {
                    "type": "{ [name: string]: ToggleSet }",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.Database.EnemyData": {
            "fields": {
                "name": {
                    "type": "ig.LangLabel.Data",
                    "isOptional": false
                },
                "species": {
                    "type": "ig.LangLabel.Data",
                    "isOptional": false
                },
                "descriptions": {
                    "type": "EnemyDescriptionBlock[]",
                    "isOptional": false
                },
                "boostedLevel": {
                    "type": "number",
                    "isOptional": false
                },
                "boss": {
                    "type": "boolean",
                    "isOptional": false
                },
                "track": {
                    "type": "boolean",
                    "isOptional": true
                },
                "level": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.Database.LoreData": {
            "fields": {
                "title": {
                    "type": "ig.LangLabel.Data",
                    "isOptional": false
                },
                "order": {
                    "type": "number",
                    "isOptional": false
                },
                "category": {
                    "type": "'STORY' | 'CHARACTERS' | 'CROSS_LORE' | 'EARTH_LORE'",
                    "isOptional": false
                },
                "content": {
                    "type": "ig.LangLabel.Data",
                    "isOptional": false
                },
                "switchPage": {
                    "type": "boolean",
                    "isOptional": true
                },
                "image": {
                    "type": "ig.AnimationSheet.Sheet",
                    "isOptional": true
                },
                "options": {
                    "type": "{ allgn: string; wrap: boolean }",
                    "isOptional": true
                },
                "allgn": {
                    "type": "string",
                    "isOptional": false
                },
                "wrap": {
                    "type": "boolean",
                    "isOptional": false
                },
                "condition": {
                    "type": "string",
                    "isOptional": false
                },
                "hr": {
                    "type": "boolean",
                    "isOptional": true
                },
                "altContent": {
                    "type": "{\n              content: ig.LangLabel.Data;\n              condition: string;\n            }",
                    "isOptional": true
                },
                "parent": {
                    "type": "string",
                    "isOptional": true
                },
                "extension": {
                    "type": "string",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.Database.EnemyDescriptionBlock": {
            "fields": {
                "text": {
                    "type": "ig.LangLabel.Data",
                    "isOptional": false
                },
                "condition": {
                    "type": "Nullable<string>",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.Database.ShopData": {
            "fields": {
                "name": {
                    "type": "ig.LangLabel.Data",
                    "isOptional": false
                },
                "shopType": {
                    "type": "keyof typeof sc.MENU_SHOP_TYPES",
                    "isOptional": false
                },
                "sellScale": {
                    "type": "number",
                    "isOptional": false
                },
                "maxOwn": {
                    "type": "number",
                    "isOptional": true
                },
                "content": {
                    "type": "unknown[][]",
                    "isOptional": true
                },
                "pages": {
                    "type": "ShopPage[]",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.Database.ShopPage": {
            "fields": {
                "title": {
                    "type": "ig.LangLabel.Data",
                    "isOptional": false
                },
                "content": {
                    "type": "ShopItem[]",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.Database.ShopItem": {
            "fields": {
                "item": {
                    "type": "sc.ItemID",
                    "isOptional": false
                },
                "condition": {
                    "type": "string",
                    "isOptional": true
                },
                "price": {
                    "type": "number",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.Database.Chapter": {
            "fields": {
                "name": {
                    "type": "ig.LangLabel",
                    "isOptional": false
                },
                "plotline": {
                    "type": "number",
                    "isOptional": false
                },
                "prefix": {
                    "type": "ig.LangLabel",
                    "isOptional": true
                },
                "condition": {
                    "type": "string",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.Database.ToggleSet": {
            "fields": {
                "type": {
                    "type": "'SINGLE' | 'MULTI'",
                    "isOptional": false
                },
                "name": {
                    "type": "ig.LangLabel.Data",
                    "isOptional": false
                },
                "order": {
                    "type": "number",
                    "isOptional": false
                },
                "color": {
                    "type": "string",
                    "isOptional": false
                },
                "items": {
                    "type": "sc.ItemID[]",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.Database.Name": {
            "fields": {
                "gender": {
                    "type": "'MALE' | 'FEMALE' | 'BOTH'",
                    "isOptional": false
                },
                "name": {
                    "type": "ig.LangLabel.Data",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.Database.Drop": {
            "fields": {
                "name": {
                    "type": "ig.LangLabel.Data",
                    "isOptional": false
                },
                "track": {
                    "type": "boolean",
                    "isOptional": false
                },
                "order": {
                    "type": "number",
                    "isOptional": false
                },
                "area": {
                    "type": "string",
                    "isOptional": false
                },
                "progress": {
                    "type": "number",
                    "isOptional": false
                },
                "subArea": {
                    "type": "ig.LangLabel.Data",
                    "isOptional": true
                },
                "id": {
                    "type": "string",
                    "isOptional": false
                },
                "items": {
                    "type": "{\n          id: string;\n          prob: number;\n          item?: string;\n        }[]",
                    "isOptional": false
                },
                "prob": {
                    "type": "number",
                    "isOptional": false
                },
                "item": {
                    "type": "string",
                    "isOptional": true
                },
                "link": {
                    "type": "string",
                    "isOptional": true
                },
                "extension": {
                    "type": "string",
                    "isOptional": true
                },
                "other": {
                    "type": "boolean",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.Database": {
            "fields": {
                "data": {
                    "type": "ig.Database.Data",
                    "isOptional": false
                }
            },
            "functions": {
                "get": {
                    "returnType": "unknown",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "onload": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "data",
                            "type": "ig.Database.Data",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "Database",
                    "args": []
                }
            },
            "parents": [
                "ig.SingleLoadable"
            ]
        },
        "ig": {
            "fields": {
                "Database": {
                    "type": "DatabaseConstructor"
                },
                "database": {
                    "type": "Database"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "impact.feature.database.plug-in": {},
    "impact.feature.dream-fx.dream-fx": {
        "ig.DreamAssets": {
            "fields": {
                "shadowGfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "sideGfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "edgeGfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "dotGfx": {
                    "type": "ig.Image",
                    "isOptional": false
                }
            },
            "functions": {
                "clone": {
                    "returnType": "ig.DreamAssets",
                    "args": []
                },
                "clearCached": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "DreamAssets",
                    "args": []
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "ig": {
            "fields": {
                "DreamAssets": {
                    "type": "DreamAssetsConstructor"
                },
                "DreamCircleShadowGui": {
                    "type": "DreamCircleShadowGuiConstructor"
                },
                "DreamSideGui": {
                    "type": "DreamSideGuiConstructor"
                },
                "DreamDotGui": {
                    "type": "DreamDotGuiConstructor"
                },
                "DreamFx": {
                    "type": "DreamFxConstructor"
                },
                "dreamFx": {
                    "type": "ig.DreamFx"
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.DreamCircleShadowGui": {
            "fields": {
                "assets": {
                    "type": "Nullable<ig.DreamAssets>",
                    "isOptional": false
                },
                "centerColor": {
                    "type": "{ old: ig.RGBColor; new: ig.RGBColor }",
                    "isOptional": false
                },
                "borderColor": {
                    "type": "{ old: ig.RGBColor; new: ig.RGBColor }",
                    "isOptional": false
                },
                "colorTimer": {
                    "type": "number",
                    "isOptional": false
                },
                "colorDuration": {
                    "type": "number",
                    "isOptional": false
                },
                "circleSize": {
                    "type": "{ old: number; new: number; timer: number; duration: number }",
                    "isOptional": false
                },
                "wobbleTimer": {
                    "type": "number",
                    "isOptional": false
                },
                "old": {
                    "type": "ig.RGBColor",
                    "isOptional": false
                },
                "new": {
                    "type": "ig.RGBColor",
                    "isOptional": false
                }
            },
            "functions": {
                "setColors": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "centerColor",
                            "type": "ig.RGBColorData",
                            "isOptional": false
                        },
                        {
                            "name": "borderColor",
                            "type": "ig.RGBColorData",
                            "isOptional": false
                        },
                        {
                            "name": "colorDuration",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "_getCurrentColor": {
                    "returnType": "ig.RGBColor",
                    "args": [
                        {
                            "name": "color1",
                            "type": "ig.RGBColor",
                            "isOptional": false
                        },
                        {
                            "name": "obj",
                            "type": "{ old: ig.RGBColor; new: ig.RGBColor }",
                            "isOptional": false
                        }
                    ]
                },
                "_getCurrentSize": {
                    "returnType": "number",
                    "args": []
                },
                "setCircleSize": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "newSize",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "duration",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "DreamCircleShadowGui",
                    "args": []
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "ig.DreamCircleShadowGui.centerColor": {
            "fields": {
                "old": {
                    "type": "ig.RGBColor",
                    "isOptional": false
                },
                "new": {
                    "type": "ig.RGBColor",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.DreamCircleShadowGui.borderColor": {
            "fields": {
                "old": {
                    "type": "ig.RGBColor",
                    "isOptional": false
                },
                "new": {
                    "type": "ig.RGBColor",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.DreamCircleShadowGui.circleSize": {
            "fields": {
                "old": {
                    "type": "number",
                    "isOptional": false
                },
                "new": {
                    "type": "number",
                    "isOptional": false
                },
                "timer": {
                    "type": "number",
                    "isOptional": false
                },
                "duration": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.DreamSideGui.Particle": {
            "fields": {
                "duration": {
                    "type": "number",
                    "isOptional": false
                },
                "timer": {
                    "type": "number",
                    "isOptional": false
                },
                "right": {
                    "type": "boolean",
                    "isOptional": false
                },
                "y": {
                    "type": "number",
                    "isOptional": false
                },
                "speedY": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.DreamSideGui": {
            "fields": {
                "assets": {
                    "type": "Nullable<ig.DreamAssets>",
                    "isOptional": false
                },
                "particles": {
                    "type": "ig.DreamSideGui.Particle[]",
                    "isOptional": false
                },
                "spawnTimer": {
                    "type": "number",
                    "isOptional": false
                },
                "lastRight": {
                    "type": "boolean",
                    "isOptional": false
                },
                "rng": {
                    "type": "{ left: ig.UniformRNG; righr: ig.UniformRNG }",
                    "isOptional": false
                }
            },
            "functions": {
                "spawnParticle": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "DreamSideGui",
                    "args": []
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "ig.DreamSideGui.rng": {
            "fields": {
                "left": {
                    "type": "ig.UniformRNG",
                    "isOptional": false
                },
                "righr": {
                    "type": "ig.UniformRNG",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.DreamDotGui.Particle": {
            "fields": {
                "duration": {
                    "type": "number",
                    "isOptional": false
                },
                "timer": {
                    "type": "number",
                    "isOptional": false
                },
                "y": {
                    "type": "number",
                    "isOptional": false
                },
                "x": {
                    "type": "number",
                    "isOptional": false
                },
                "maxSize": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.DreamDotGui": {
            "fields": {
                "assets": {
                    "type": "Nullable<ig.DreamAssets>",
                    "isOptional": false
                },
                "particles": {
                    "type": "ig.DreamDotGui.Particle[]",
                    "isOptional": false
                },
                "spawnTimer": {
                    "type": "number",
                    "isOptional": false
                },
                "rng": {
                    "type": "ig.UniformRNG",
                    "isOptional": false
                },
                "rotate": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "spawnParticle": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "DreamDotGui",
                    "args": []
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "ig.DreamFx": {
            "fields": {
                "assets": {
                    "type": "Nullable<ig.DreamAssets>",
                    "isOptional": false
                },
                "circleShadowGui": {
                    "type": "ig.DreamCircleShadowGui",
                    "isOptional": false
                },
                "sideGui": {
                    "type": "ig.DreamSideGui",
                    "isOptional": false
                },
                "dotGui": {
                    "type": "ig.DreamDotGui",
                    "isOptional": false
                }
            },
            "functions": {
                "onReset": {
                    "returnType": "void",
                    "args": []
                },
                "start": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "assets",
                            "type": "ig.DreamAssets",
                            "isOptional": false
                        },
                        {
                            "name": "showTransition",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "clear": {
                    "returnType": "void",
                    "args": []
                },
                "setColors": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "centerColor",
                            "type": "ig.RGBColorData",
                            "isOptional": false
                        },
                        {
                            "name": "borderColor",
                            "type": "ig.RGBColorData",
                            "isOptional": false
                        },
                        {
                            "name": "colorDuration",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "setCircleSize": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "newSize",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "duration",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "isActive": {
                    "returnType": "boolean",
                    "args": []
                },
                "init": {
                    "returnType": "DreamFx",
                    "args": []
                }
            },
            "parents": [
                "ig.GameAddon"
            ]
        }
    },
    "impact.feature.dream-fx.plug-in": {},
    "impact.feature.effect.entities.effect-previewer": {},
    "impact.feature.effect.plug-in": {},
    "impact.feature.env-particles.env-particles": {
        "ig.EnvParticleSpawner.Settings": {
            "fields": {
                "animSheet": {
                    "type": "ig.AnimationSheet.Settings",
                    "isOptional": false
                },
                "speed": {
                    "type": "number",
                    "isOptional": false
                },
                "speedVariance": {
                    "type": "number",
                    "isOptional": false
                },
                "dir": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "randomFlip": {
                    "type": "{ x: boolean; y: boolean }",
                    "isOptional": false
                },
                "randomRotate": {
                    "type": "number",
                    "isOptional": false
                },
                "time": {
                    "type": "number",
                    "isOptional": false
                },
                "timeVariance": {
                    "type": "number",
                    "isOptional": false
                },
                "fadeTime": {
                    "type": "number",
                    "isOptional": false
                },
                "levels": {
                    "type": "{ scale: number; anim: string }[]",
                    "isOptional": false
                },
                "scale": {
                    "type": "number",
                    "isOptional": false
                },
                "anim": {
                    "type": "string",
                    "isOptional": false
                },
                "rotateToDir": {
                    "type": "number",
                    "isOptional": true
                },
                "sineRotate": {
                    "type": "number",
                    "isOptional": true
                },
                "sineRotateTime": {
                    "type": "number",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.EnvParticleSpawner.Settings.randomFlip": {
            "fields": {
                "x": {
                    "type": "boolean",
                    "isOptional": false
                },
                "y": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.EnvParticleSpawner.EnvParticles": {
            "fields": {
                "WHITE_DUST": {
                    "type": "ig.EnvParticleSpawner.Settings",
                    "isOptional": false
                },
                "DARK_DUST": {
                    "type": "ig.EnvParticleSpawner.Settings",
                    "isOptional": false
                },
                "LEAVES": {
                    "type": "ig.EnvParticleSpawner.Settings",
                    "isOptional": false
                },
                "GREEN_LEAVES": {
                    "type": "ig.EnvParticleSpawner.Settings",
                    "isOptional": false
                },
                "JUNGLE_LEAVES": {
                    "type": "ig.EnvParticleSpawner.Settings",
                    "isOptional": false
                },
                "BLUE_SQUARES": {
                    "type": "ig.EnvParticleSpawner.Settings",
                    "isOptional": false
                },
                "RED_SQUARES": {
                    "type": "ig.EnvParticleSpawner.Settings",
                    "isOptional": false
                },
                "SNOW_FLAKES": {
                    "type": "ig.EnvParticleSpawner.Settings",
                    "isOptional": false
                },
                "COLD_CRYSTALS": {
                    "type": "ig.EnvParticleSpawner.Settings",
                    "isOptional": false
                },
                "SAND_OUTSIDE": {
                    "type": "ig.EnvParticleSpawner.Settings",
                    "isOptional": false
                },
                "SANDSTORM": {
                    "type": "ig.EnvParticleSpawner.Settings",
                    "isOptional": false
                },
                "BEACH_GLOW": {
                    "type": "ig.EnvParticleSpawner.Settings",
                    "isOptional": false
                },
                "BEACH_GLOW_BIG": {
                    "type": "ig.EnvParticleSpawner.Settings",
                    "isOptional": false
                },
                "FINAL_GLOW": {
                    "type": "ig.EnvParticleSpawner.Settings",
                    "isOptional": false
                },
                "FINAL_WHIRL": {
                    "type": "ig.EnvParticleSpawner.Settings",
                    "isOptional": false
                },
                "FINAL_WHIRL_FAST": {
                    "type": "ig.EnvParticleSpawner.Settings",
                    "isOptional": false
                },
                "COAL_SPARKS": {
                    "type": "ig.EnvParticleSpawner.Settings",
                    "isOptional": false
                },
                "COAL_SPARKS_FAST": {
                    "type": "ig.EnvParticleSpawner.Settings",
                    "isOptional": false
                },
                "INFESTED_DUST": {
                    "type": "ig.EnvParticleSpawner.Settings",
                    "isOptional": false
                },
                "WAVE_DUST": {
                    "type": "ig.EnvParticleSpawner.Settings",
                    "isOptional": false
                },
                "SPOOKY_DUST": {
                    "type": "ig.EnvParticleSpawner.Settings",
                    "isOptional": false
                },
                "ARID_DUST_1": {
                    "type": "ig.EnvParticleSpawner.Settings",
                    "isOptional": false
                },
                "ARID_DUST_FAST": {
                    "type": "ig.EnvParticleSpawner.Settings",
                    "isOptional": false
                },
                "ARID_DUST_ELEVATOR_UP": {
                    "type": "ig.EnvParticleSpawner.Settings",
                    "isOptional": false
                },
                "ARID_DUST_ELEVATOR_DOWN": {
                    "type": "ig.EnvParticleSpawner.Settings",
                    "isOptional": false
                },
                "RHOMBUS": {
                    "type": "ig.EnvParticleSpawner.Settings",
                    "isOptional": false
                },
                "HACKING": {
                    "type": "ig.EnvParticleSpawner.Settings",
                    "isOptional": false
                },
                "STARS": {
                    "type": "ig.EnvParticleSpawner.Settings",
                    "isOptional": false
                },
                "SLOWDOWN": {
                    "type": "ig.EnvParticleSpawner.Settings",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.EnvParticleSpawner.Particle": {
            "fields": {
                "duration": {
                    "type": "number",
                    "isOptional": false
                },
                "timer": {
                    "type": "number",
                    "isOptional": false
                },
                "hideTimer": {
                    "type": "number",
                    "isOptional": false
                },
                "pos": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "vel": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "roughDisplayPos": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.EnvParticleSpawner.Level": {
            "fields": {
                "scale": {
                    "type": "number",
                    "isOptional": false
                },
                "anim": {
                    "type": "string",
                    "isOptional": false
                },
                "spawnInterval": {
                    "type": "number",
                    "isOptional": false
                },
                "spawnTimer": {
                    "type": "number",
                    "isOptional": false
                },
                "particles": {
                    "type": "ig.EnvParticleSpawner.Particle[]",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig": {
            "fields": {
                "ENV_PARTICLES": {
                    "type": "ig.EnvParticleSpawner.EnvParticles"
                },
                "EnvParticleSpawner": {
                    "type": "EnvParticleSpawnerConstructor"
                },
                "EnvParticles": {
                    "type": "EnvParticlesConstructor"
                },
                "envParticles": {
                    "type": "EnvParticles"
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.EnvParticleSpawner": {
            "fields": {
                "name": {
                    "type": "keyof typeof ig.ENV_PARTICLES",
                    "isOptional": false
                },
                "animSheet": {
                    "type": "ig.AnimationSheet",
                    "isOptional": false
                },
                "config": {
                    "type": "ig.EnvParticleSpawner.Settings",
                    "isOptional": false
                },
                "levels": {
                    "type": "ig.EnvParticleSpawner.Level[]",
                    "isOptional": false
                }
            },
            "functions": {
                "onCacheCleared": {
                    "returnType": "void",
                    "args": []
                },
                "_initLevels": {
                    "returnType": "void",
                    "args": []
                },
                "setQuantity": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "quantity",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "reset",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "update": {
                    "returnType": "void | boolean",
                    "args": []
                },
                "getTick": {
                    "returnType": "number",
                    "args": []
                },
                "spawnParticle": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "level",
                            "type": "ig.EnvParticleSpawner.Level",
                            "isOptional": false
                        }
                    ]
                },
                "updateParticles": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "level",
                            "type": "ig.EnvParticleSpawner.Level",
                            "isOptional": false
                        },
                        {
                            "name": "tick",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "draw": {
                    "returnType": "void",
                    "args": []
                },
                "drawLevel": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "level",
                            "type": "ig.EnvParticleSpawner.Level",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "EnvParticleSpawner",
                    "args": [
                        {
                            "name": "name",
                            "type": "keyof typeof ig.ENV_PARTICLES",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Cacheable"
            ]
        },
        "ig.EnvParticles": {
            "fields": {
                "activeSpawners": {
                    "type": "ig.EnvParticleSpawner[]",
                    "isOptional": false
                },
                "width": {
                    "type": "number",
                    "isOptional": false
                },
                "height": {
                    "type": "number",
                    "isOptional": false
                },
                "deferredUpdateOrder": {
                    "type": "number",
                    "isOptional": false
                },
                "midDrawOrder": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "addSpawner": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "spawner",
                            "type": "ig.EnvParticleSpawner",
                            "isOptional": false
                        },
                        {
                            "name": "quantity",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "immediately",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "clear": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "clearList",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "onDeferredUpdate": {
                    "returnType": "void",
                    "args": []
                },
                "onMidDraw": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "EnvParticles",
                    "args": []
                }
            },
            "parents": [
                "ig.GameAddon"
            ]
        }
    },
    "impact.feature.env-particles.plug-in": {},
    "impact.feature.event-sheet.plug-in": {},
    "impact.feature.gamepad.gamepad": {
        "ig.GamepadManager": {
            "fields": {
                "gamepads": {
                    "type": "Record<string, ig.Gamepad>",
                    "isOptional": false
                },
                "activeGamepads": {
                    "type": "ig.Gamepad[]",
                    "isOptional": false
                }
            },
            "functions": {
                "onPreUpdate": {
                    "returnType": "void",
                    "args": []
                },
                "onDeferredUpdate": {
                    "returnType": "void",
                    "args": []
                },
                "isButtonPressed": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "button",
                            "type": "ig.BUTTONS",
                            "isOptional": false
                        }
                    ]
                },
                "isButtonReleased": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "button",
                            "type": "ig.BUTTONS",
                            "isOptional": false
                        }
                    ]
                },
                "isButtonDown": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "button",
                            "type": "ig.BUTTONS",
                            "isOptional": false
                        }
                    ]
                },
                "getButtonValue": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "button",
                            "type": "ig.BUTTONS",
                            "isOptional": false
                        }
                    ]
                },
                "getAxesValue": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "axis",
                            "type": "ig.AXES",
                            "isOptional": false
                        },
                        {
                            "name": "clipDeadZone",
                            "type": "number",
                            "isOptional": true
                        }
                    ]
                },
                "isAxesDown": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "axis",
                            "type": "ig.AXES",
                            "isOptional": false
                        }
                    ]
                },
                "isLeftStickDown": {
                    "returnType": "boolean",
                    "args": []
                },
                "isRightStickDown": {
                    "returnType": "boolean",
                    "args": []
                },
                "isSupported": {
                    "returnType": "boolean",
                    "args": []
                },
                "init": {
                    "returnType": "GamepadManager",
                    "args": []
                }
            },
            "parents": [
                "ig.GameAddon"
            ]
        },
        "ig": {
            "fields": {
                "gamepad": {
                    "type": "GamepadManager"
                },
                "GamepadManager": {
                    "type": "GamepadManagerConstructor"
                },
                "Gamepad": {
                    "type": "GamepadConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.Gamepad": {
            "fields": {
                "buttonDeadzones": {
                    "type": "Record<ig.BUTTONS, number>",
                    "isOptional": false
                },
                "axesDeadzones": {
                    "type": "Record<ig.BUTTONS, number>",
                    "isOptional": false
                },
                "buttonStates": {
                    "type": "Record<ig.BUTTONS, number>",
                    "isOptional": false
                },
                "axesStates": {
                    "type": "Record<ig.BUTTONS, number>",
                    "isOptional": false
                },
                "pressedStates": {
                    "type": "Record<ig.BUTTONS, boolean>",
                    "isOptional": false
                },
                "releasedStates": {
                    "type": "Record<ig.BUTTONS, boolean>",
                    "isOptional": false
                }
            },
            "functions": {
                "updateButton": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "buttonId",
                            "type": "ig.BUTTONS",
                            "isOptional": false
                        },
                        {
                            "name": "value",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "updateAxes": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "axesId",
                            "type": "ig.AXES",
                            "isOptional": false
                        },
                        {
                            "name": "value",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "Gamepad",
                    "args": []
                }
            },
            "parents": [
                "ig.Class"
            ]
        }
    },
    "impact.feature.gamepad.html5-gamepad": {
        "ig.Html5GamepadHandler": {
            "fields": {},
            "functions": {
                "update": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "gamepads",
                            "type": "Record<string, ig.Gamepad>",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "Html5GamepadHandler",
                    "args": []
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "ig": {
            "fields": {
                "Html5GamepadHandler": {
                    "type": "Html5GamepadHandlerConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "impact.feature.gamepad.nwf-gamepad": {},
    "impact.feature.gamepad.plug-in": {},
    "impact.feature.greenworks.greenworks": {
        "ig.Greenworks": {
            "fields": {
                "greenworks": {
                    "type": "any",
                    "isOptional": false
                },
                "steps": {
                    "type": "Greenworks.Step[]",
                    "isOptional": false
                }
            },
            "functions": {
                "isActive": {
                    "returnType": "boolean",
                    "args": []
                },
                "hasSteamStartArgument": {
                    "returnType": "boolean",
                    "args": []
                },
                "activateAchievement": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "achievement",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "clearAfterwards",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "clearAchievement": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "achievement",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "Greenworks",
                    "args": []
                }
            },
            "parents": [
                "ig.GameAddon"
            ]
        },
        "ig": {
            "fields": {
                "Greenworks": {
                    "type": "GreenworksConstructor"
                },
                "greenworks": {
                    "type": "Greenworks"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "impact.feature.greenworks.plug-in": {},
    "impact.feature.gui.base.basic-gui": {
        "ig.ImageGui": {
            "fields": {
                "image": {
                    "type": "Nullable<ig.Image>",
                    "isOptional": true
                },
                "offsetX": {
                    "type": "number",
                    "isOptional": false
                },
                "offsetY": {
                    "type": "number",
                    "isOptional": false
                },
                "renderMode": {
                    "type": "Nullable<string>",
                    "isOptional": true
                },
                "flipX": {
                    "type": "boolean",
                    "isOptional": false
                },
                "flipY": {
                    "type": "boolean",
                    "isOptional": false
                },
                "pivotOverride": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "setImage": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "image",
                            "type": "ig.Image",
                            "isOptional": false
                        },
                        {
                            "name": "offsetX",
                            "type": "Nullable<number>",
                            "isOptional": true
                        },
                        {
                            "name": "offsetY",
                            "type": "Nullable<number>",
                            "isOptional": true
                        },
                        {
                            "name": "width",
                            "type": "Nullable<number>",
                            "isOptional": true
                        },
                        {
                            "name": "height",
                            "type": "Nullable<number>",
                            "isOptional": true
                        }
                    ]
                },
                "init": {
                    "returnType": "ig.ImageGui",
                    "args": [
                        {
                            "name": "image",
                            "type": "Nullable<ig.Image>",
                            "isOptional": true
                        },
                        {
                            "name": "offsetX",
                            "type": "Nullable<number>",
                            "isOptional": true
                        },
                        {
                            "name": "offsetY",
                            "type": "Nullable<number>",
                            "isOptional": true
                        },
                        {
                            "name": "width",
                            "type": "Nullable<number>",
                            "isOptional": true
                        },
                        {
                            "name": "height",
                            "type": "Nullable<number>",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "ig": {
            "fields": {
                "ImageGui": {
                    "type": "ImageGuiConstructor"
                },
                "ColorGui": {
                    "type": "ColorGuiConstructor"
                },
                "SequenceGui": {
                    "type": "SequenceGuiConstructor"
                },
                "SimpleGui": {
                    "type": "SimpleGuiConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ColorGui": {
            "fields": {
                "color": {
                    "type": "string",
                    "isOptional": false
                },
                "renderMode": {
                    "type": "Nullable<string>",
                    "isOptional": true
                }
            },
            "functions": {
                "init": {
                    "returnType": "ColorGui",
                    "args": [
                        {
                            "name": "color",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "width",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "height",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "ig.SequenceGui": {
            "fields": {
                "timer": {
                    "type": "number",
                    "isOptional": false
                },
                "timeLineIndex": {
                    "type": "number",
                    "isOptional": false
                },
                "gfx": {
                    "type": "Record<string, ig.Image>",
                    "isOptional": false
                },
                "gui": {
                    "type": "Record<string, unknown>",
                    "isOptional": false
                },
                "timeLine": {
                    "type": "unknown[]",
                    "isOptional": false
                },
                "reachedLabels": {
                    "type": "string[]",
                    "isOptional": false
                },
                "currentSkipLabel": {
                    "type": "unknown",
                    "isOptional": false
                },
                "callback": {
                    "type": "(msg: ig.SEQUENCE_MSG, labelReached?: string) => void",
                    "isOptional": false
                }
            },
            "functions": {
                "initTimeLine": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "gfx",
                            "type": "Record<string, ig.Image>",
                            "isOptional": false
                        },
                        {
                            "name": "gui",
                            "type": "Record<string, unknown>",
                            "isOptional": false
                        },
                        {
                            "name": "timeLine",
                            "type": "unknown[]",
                            "isOptional": false
                        }
                    ]
                },
                "_setLabelReached": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "label",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "start": {
                    "returnType": "void",
                    "args": []
                },
                "end": {
                    "returnType": "void",
                    "args": []
                },
                "notifyCallback": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "msg",
                            "type": "ig.SEQUENCE_MSG",
                            "isOptional": false
                        },
                        {
                            "name": "labelReached",
                            "type": "string",
                            "isOptional": true
                        }
                    ]
                },
                "skip": {
                    "returnType": "void",
                    "args": []
                },
                "jumpTo": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "label",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "hasEnded": {
                    "returnType": "boolean",
                    "args": []
                },
                "isLabelReached": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "label",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "SequenceGui",
                    "args": [
                        {
                            "name": "callback",
                            "type": "(msg: ig.SEQUENCE_MSG, labelReached?: String) => void",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "ig.SimpleGui": {
            "fields": {},
            "functions": {
                "hide": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "skip",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "initDelay",
                            "type": "number",
                            "isOptional": true
                        }
                    ]
                },
                "show": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "skip",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "initDelay",
                            "type": "number",
                            "isOptional": true
                        }
                    ]
                },
                "init": {
                    "returnType": "SimpleGui",
                    "args": []
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        }
    },
    "impact.feature.gui.base.box": {
        "ig.NinePatch.Tile": {
            "fields": {
                "width": {
                    "type": "number",
                    "isOptional": false
                },
                "height": {
                    "type": "number",
                    "isOptional": false
                },
                "top": {
                    "type": "number",
                    "isOptional": false
                },
                "bottom": {
                    "type": "number",
                    "isOptional": false
                },
                "left": {
                    "type": "number",
                    "isOptional": false
                },
                "right": {
                    "type": "number",
                    "isOptional": false
                },
                "offsets": {
                    "type": "Record<string, Vec2>",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.NinePatch.Pattern": {
            "fields": {
                "top": {
                    "type": "ig.ImagePattern",
                    "isOptional": false
                },
                "bottom": {
                    "type": "ig.ImagePattern",
                    "isOptional": false
                },
                "left": {
                    "type": "ig.ImagePattern",
                    "isOptional": false
                },
                "right": {
                    "type": "ig.ImagePattern",
                    "isOptional": false
                },
                "center": {
                    "type": "ig.ImagePattern",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.NinePatch": {
            "fields": {
                "tile": {
                    "type": "ig.NinePatch.Tile",
                    "isOptional": false
                },
                "skipTile": {
                    "type": "Record<number, boolean | number>",
                    "isOptional": false
                },
                "pattern": {
                    "type": "Record<number, ig.NinePatch.Pattern>",
                    "isOptional": false
                },
                "gfx": {
                    "type": "ig.Image",
                    "isOptional": false
                }
            },
            "functions": {
                "initPattern": {
                    "returnType": "void",
                    "args": []
                },
                "draw": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "renderer",
                            "type": "ig.GuiRenderer",
                            "isOptional": false
                        },
                        {
                            "name": "width",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "height",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "tileOffset",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "offX",
                            "type": "Nullable<number>",
                            "isOptional": true
                        },
                        {
                            "name": "offY",
                            "type": "Nullable<number>",
                            "isOptional": true
                        }
                    ]
                },
                "drawComposite": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "renderer",
                            "type": "ig.GuiRenderer",
                            "isOptional": false
                        },
                        {
                            "name": "width",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "height",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "tileOffset",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "composite",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "offX",
                            "type": "Nullable<number>",
                            "isOptional": true
                        },
                        {
                            "name": "offY",
                            "type": "Nullable<number>",
                            "isOptional": true
                        }
                    ]
                },
                "init": {
                    "returnType": "NinePatch",
                    "args": [
                        {
                            "name": "path",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "tile",
                            "type": "ig.NinePatch.Tile",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "ig": {
            "fields": {
                "NinePatch": {
                    "type": "NinePatchConstructor"
                },
                "BoxGui": {
                    "type": "BoxGuiConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.BoxGui": {
            "fields": {
                "gfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "ninepatch": {
                    "type": "ig.NinePatch",
                    "isOptional": false
                },
                "currentTileOffset": {
                    "type": "string",
                    "isOptional": false
                },
                "skipTile": {
                    "type": "Record<number, boolean | number>",
                    "isOptional": false
                },
                "flipped": {
                    "type": "boolean",
                    "isOptional": false
                },
                "flippedY": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "BoxGui",
                    "args": [
                        {
                            "name": "width",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "height",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "flipped",
                            "type": "Nullable<boolean>",
                            "isOptional": true
                        },
                        {
                            "name": "ninepatch",
                            "type": "Nullable<ig.NinePatch>",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        }
    },
    "impact.feature.gui.gui-images": {
        "ig.GuiImageContainer": {
            "fields": {},
            "functions": {
                "init": {
                    "returnType": "GuiImageContainer",
                    "args": [
                        {
                            "name": "zIndex",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "ig": {
            "fields": {
                "GuiImageContainer": {
                    "type": "GuiImageContainerConstructor"
                },
                "GuiImage": {
                    "type": "GuiImageConstructor"
                },
                "guiImage": {
                    "type": "ig.GuiImage"
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.GuiImage.Image": {
            "fields": {
                "gui": {
                    "type": "ig.ImageGui",
                    "isOptional": false
                },
                "data": {
                    "type": "{\n          alignX: ig.GUI_ALIGN;\n          alignY: ig.GUI_ALIGN;\n          state: ig.GuiHook.State;\n        }",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.GuiImage.Image.data": {
            "fields": {
                "alignX": {
                    "type": "ig.GUI_ALIGN",
                    "isOptional": false
                },
                "alignY": {
                    "type": "ig.GUI_ALIGN",
                    "isOptional": false
                },
                "state": {
                    "type": "ig.GuiHook.State",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.GuiImage": {
            "fields": {
                "guiImages": {
                    "type": "Record<string, ig.GuiImage.Image>",
                    "isOptional": false
                },
                "containerBelowGui": {
                    "type": "ig.GuiImageContainer",
                    "isOptional": false
                },
                "containerOverGui": {
                    "type": "ig.GuiImageContainer",
                    "isOptional": false
                }
            },
            "functions": {
                "showImage": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "tilesheet",
                            "type": "ig.TileSheet",
                            "isOptional": false
                        },
                        {
                            "name": "state",
                            "type": "ig.GuiHook.State",
                            "isOptional": false
                        },
                        {
                            "name": "alignX",
                            "type": "ig.GUI_ALIGN",
                            "isOptional": false
                        },
                        {
                            "name": "alignY",
                            "type": "ig.GUI_ALIGN",
                            "isOptional": false
                        },
                        {
                            "name": "renderMode",
                            "type": "'source-over' | 'lighter'",
                            "isOptional": true
                        },
                        {
                            "name": "above",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "moveImage": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "state",
                            "type": "ig.GuiHook.State",
                            "isOptional": false
                        },
                        {
                            "name": "transitionTime",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "keySpline",
                            "type": "KeySpline",
                            "isOptional": false
                        },
                        {
                            "name": "removeAfter",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "removeImage": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "_createGuiState": {
                    "returnType": "ig.GuiHook.State",
                    "args": [
                        {
                            "name": "state",
                            "type": "ig.GuiHook.State",
                            "isOptional": false
                        }
                    ]
                },
                "onStorageSave": {
                    "returnType": "void",
                    "args": []
                },
                "onStoragePreLoad": {
                    "returnType": "void",
                    "args": []
                },
                "onReset": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "GuiImage",
                    "args": []
                }
            },
            "parents": [
                "ig.GameAddon"
            ]
        }
    },
    "impact.feature.gui.plug-in": {},
    "impact.feature.height-map.height-map-config": {},
    "impact.feature.height-map.height-map": {
        "ig.MAP.HeightMap": {
            "fields": {
                "_wm": {
                    "type": "ig.Config",
                    "isOptional": false
                },
                "noMerge": {
                    "type": "boolean",
                    "isOptional": false
                },
                "levelKey": {
                    "type": "'heightMap'",
                    "isOptional": false
                }
            },
            "functions": {
                "draw": {
                    "returnType": "void",
                    "args": []
                },
                "drawTiled": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "HeightMap",
                    "args": [
                        {
                            "name": "data",
                            "type": "sc.MapModel.MapLayer",
                            "isOptional": false
                        },
                        {
                            "name": "zHeight",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Map"
            ]
        }
    },
    "impact.feature.height-map.plug-in": {},
    "impact.feature.influencer.plug-in": {},
    "impact.feature.interact.gui.focus-gui": {
        "ig.FocusGui": {
            "fields": {
                "focus": {
                    "type": "boolean",
                    "isOptional": false
                },
                "active": {
                    "type": "boolean",
                    "isOptional": false
                },
                "keepPressed": {
                    "type": "boolean",
                    "isOptional": false
                },
                "pressed": {
                    "type": "boolean",
                    "isOptional": false
                },
                "keepMouseFocus": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "focusGained": {
                    "returnType": "void",
                    "args": []
                },
                "focusLost": {
                    "returnType": "void",
                    "args": []
                },
                "invokeButtonPress": {
                    "returnType": "void",
                    "args": []
                },
                "onButtonPress": {
                    "returnType": "void",
                    "args": []
                },
                "canPlayFocusSounds": {
                    "returnType": "boolean",
                    "args": []
                },
                "setPressed": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "pressed",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "setActive": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "active",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "isSameAs": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "other",
                            "type": "ig.FocusGui",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "ig.FocusGui",
                    "args": [
                        {
                            "name": "active",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "keepPressed",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "ig": {
            "fields": {
                "FocusGui": {
                    "type": "FocusGuiConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "impact.feature.interact.interact": {
        "ig.InteractEntry": {
            "fields": {},
            "functions": {
                "isActive": {
                    "returnType": "boolean",
                    "args": []
                },
                "onConnect": {
                    "returnType": "void",
                    "args": []
                },
                "onDisconnect": {
                    "returnType": "void",
                    "args": []
                },
                "update": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "InteractEntry",
                    "args": []
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "ig": {
            "fields": {
                "InteractEntry": {
                    "type": "InteractEntryConstructor"
                },
                "InteractManager": {
                    "type": "InteractManagerConstructor"
                },
                "interact": {
                    "type": "ig.InteractManager"
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.InteractManager": {
            "fields": {
                "blockTimer": {
                    "type": "number",
                    "isOptional": false
                },
                "entries": {
                    "type": "ig.InteractEntry[]",
                    "isOptional": false
                },
                "deferredUpdateOrder": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "addEntry": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "entry",
                            "type": "ig.InteractEntry",
                            "isOptional": false
                        }
                    ]
                },
                "removeEntry": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "entry",
                            "type": "ig.InteractEntry",
                            "isOptional": false
                        }
                    ]
                },
                "setBlockDelay": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "time",
                            "type": "number | undefined",
                            "isOptional": true
                        }
                    ]
                },
                "isBlocked": {
                    "returnType": "boolean",
                    "args": []
                },
                "onDeferredUpdate": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "InteractManager",
                    "args": []
                }
            },
            "parents": [
                "ig.GameAddon"
            ]
        }
    },
    "impact.feature.interact.plug-in": {},
    "impact.feature.interact.press-repeater": {
        "ig.PressRepeater": {
            "fields": {
                "currentPressed": {
                    "type": "string",
                    "isOptional": false
                },
                "lastPressed": {
                    "type": "string",
                    "isOptional": false
                },
                "timer": {
                    "type": "number",
                    "isOptional": false
                },
                "firstDelay": {
                    "type": "number",
                    "isOptional": false
                },
                "repeatDelay": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "setDown": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "getPressed": {
                    "returnType": "string | null",
                    "args": []
                },
                "init": {
                    "returnType": "PressRepeater",
                    "args": [
                        {
                            "name": "firstDelay",
                            "type": "number",
                            "isOptional": true
                        },
                        {
                            "name": "repeatDelay",
                            "type": "number",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "ig": {
            "fields": {
                "PressRepeater": {
                    "type": "PressRepeaterConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "impact.feature.lang-edit.lang-edit": {},
    "impact.feature.lang-edit.plug-in": {},
    "impact.feature.light.entities.cond-light": {},
    "impact.feature.light.light-map": {
        "ig.MAP.Light": {
            "fields": {
                "lightmapGfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "_wm": {
                    "type": "ig.Config",
                    "isOptional": false
                },
                "lightSources": {
                    "type": "unknown",
                    "isOptional": false
                },
                "glowSources": {
                    "type": "unknown",
                    "isOptional": false
                },
                "noMerge": {
                    "type": "boolean",
                    "isOptional": false
                },
                "lightCanvas": {
                    "type": "unknown",
                    "isOptional": false
                },
                "shadowOrder": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "drawShadows": {
                    "returnType": "void",
                    "args": []
                },
                "drawGlow": {
                    "returnType": "void",
                    "args": []
                },
                "draw": {
                    "returnType": "void",
                    "args": []
                },
                "drawTiled": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "Light",
                    "args": [
                        {
                            "name": "data",
                            "type": "sc.MapModel.MapLayer",
                            "isOptional": false
                        },
                        {
                            "name": "zHeight",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.ChunkedMap"
            ]
        }
    },
    "impact.feature.light.light": {
        "ig.LightMetric": {
            "fields": {
                "x": {
                    "type": "number",
                    "isOptional": false
                },
                "y": {
                    "type": "number",
                    "isOptional": false
                },
                "w": {
                    "type": "number",
                    "isOptional": false
                },
                "h": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig": {
            "fields": {
                "LIGHT_METRIC": {
                    "type": "Record<ig.LIGHT_SIZE, LightMetric>"
                },
                "LightHandle": {
                    "type": "LightHandleConstructor"
                },
                "DarknessHandle": {
                    "type": "DarknessHandleConstructor"
                },
                "ScreenFlashHandle": {
                    "type": "ScreenFlashHandleConstructor"
                },
                "GlowColor": {
                    "type": "GlowColorConstructor"
                },
                "CondLights": {
                    "type": "CondLightsConstructor"
                },
                "Light": {
                    "type": "LightConstructor"
                },
                "light": {
                    "type": "ig.Light"
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.LightHandle": {
            "fields": {
                "targetEntity": {
                    "type": "ig.Entity",
                    "isOptional": false
                },
                "lastPos": {
                    "type": "Vec3",
                    "isOptional": false
                },
                "size": {
                    "type": "ig.LIGHT_SIZE",
                    "isOptional": false
                },
                "fadeIn": {
                    "type": "number",
                    "isOptional": false
                },
                "fadeOut": {
                    "type": "number",
                    "isOptional": false
                },
                "duration": {
                    "type": "number",
                    "isOptional": false
                },
                "maxAlpha": {
                    "type": "number",
                    "isOptional": false
                },
                "glow": {
                    "type": "boolean",
                    "isOptional": false
                },
                "timer": {
                    "type": "number",
                    "isOptional": false
                },
                "offset": {
                    "type": "Nullable<Vec3>",
                    "isOptional": true
                }
            },
            "functions": {
                "setOffset": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "stop": {
                    "returnType": "void",
                    "args": []
                },
                "update": {
                    "returnType": "boolean",
                    "args": []
                },
                "draw": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "baseAlpha",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "sizeOffset",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "LightHandle",
                    "args": [
                        {
                            "name": "entity",
                            "type": "ig.Entity",
                            "isOptional": false
                        },
                        {
                            "name": "size",
                            "type": "ig.LIGHT_SIZE",
                            "isOptional": true
                        },
                        {
                            "name": "fadeIn",
                            "type": "Nullable<number>",
                            "isOptional": true
                        },
                        {
                            "name": "fadeOut",
                            "type": "Nullable<number>",
                            "isOptional": true
                        },
                        {
                            "name": "duration",
                            "type": "Nullable<number>",
                            "isOptional": true
                        },
                        {
                            "name": "maxAlpha",
                            "type": "Nullable<number>",
                            "isOptional": true
                        },
                        {
                            "name": "glow",
                            "type": "Nullable<boolean>",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class",
                "ig.Entity.Attachable",
                "sc.Combat.ActionAttached"
            ]
        },
        "ig.DarknessHandle": {
            "fields": {},
            "functions": {
                "update": {
                    "returnType": "boolean",
                    "args": []
                },
                "getIntensity": {
                    "returnType": "number",
                    "args": []
                },
                "init": {
                    "returnType": "DarknessHandle",
                    "args": [
                        {
                            "name": "useActualTick",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "ig.ScreenFlashHandle": {
            "fields": {},
            "functions": {
                "update": {
                    "returnType": "boolean",
                    "args": []
                },
                "draw": {
                    "returnType": "void",
                    "args": []
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "ig.GlowColor": {
            "fields": {},
            "functions": {},
            "parents": [
                "ig.Class"
            ]
        },
        "ig.CondLights": {
            "fields": {},
            "functions": {},
            "parents": [
                "ig.Class"
            ]
        },
        "ig.Light.ShadowProvider": {
            "fields": {
                "shadowOrder": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.Light": {
            "fields": {},
            "functions": {
                "addDarknessHandle": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "darknessHandle",
                            "type": "ig.DarknessHandle",
                            "isOptional": false
                        }
                    ]
                },
                "removeDarknessHandle": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "darknessHandle",
                            "type": "ig.DarknessHandle",
                            "isOptional": false
                        }
                    ]
                },
                "addScreenFlashHandle": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "screenFlashHandle",
                            "type": "ig.ScreenFlashHandle",
                            "isOptional": false
                        }
                    ]
                },
                "removeScreenFlashHandle": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "screenFlashHandle",
                            "type": "ig.ScreenFlashHandle",
                            "isOptional": false
                        }
                    ]
                },
                "addLightHandle": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "lightHandle",
                            "type": "ig.LightHandle",
                            "isOptional": false
                        }
                    ]
                },
                "addShadowProvider": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "shadowProvider",
                            "type": "ig.Light.ShadowProvider",
                            "isOptional": false
                        }
                    ]
                },
                "removeShadowProvider": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "shadowProvider",
                            "type": "ig.Light.ShadowProvider",
                            "isOptional": false
                        }
                    ]
                },
                "onDeferredUpdate": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "Light",
                    "args": []
                }
            },
            "parents": [
                "ig.GameAddon"
            ]
        }
    },
    "impact.feature.light.plug-in": {},
    "impact.feature.map-content.entities.door": {
        "ig.ENTITY.Door.Settings": {
            "fields": {
                "doorType": {
                    "type": "keyof typeof ig.DOOR_TYPE",
                    "isOptional": true
                },
                "transitionType": {
                    "type": "'REGULAR' | 'INTER_AREA'",
                    "isOptional": true
                },
                "narrow": {
                    "type": "boolean",
                    "isOptional": true
                },
                "map": {
                    "type": "string",
                    "isOptional": false
                },
                "marker": {
                    "type": "string",
                    "isOptional": false
                },
                "dir": {
                    "type": "keyof typeof ig.ActorEntity.FACE4",
                    "isOptional": true
                },
                "variation": {
                    "type": "string",
                    "isOptional": true
                },
                "condition": {
                    "type": "string",
                    "isOptional": true
                },
                "blockEvent": {
                    "type": "ig.EventStepBase.Settings",
                    "isOptional": true
                },
                "blockEventCondition": {
                    "type": "string",
                    "isOptional": true
                },
                "hideCondition": {
                    "type": "string",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": [
                "ig.Entity.Settings"
            ]
        },
        "ig.ENTITY.Door": {
            "fields": {
                "doorType": {
                    "type": "keyof typeof ig.DOOR_TYPE",
                    "isOptional": false
                },
                "condition": {
                    "type": "ig.VarCondition",
                    "isOptional": false
                },
                "map": {
                    "type": "string",
                    "isOptional": false
                },
                "marker": {
                    "type": "string",
                    "isOptional": false
                },
                "dir": {
                    "type": "keyof typeof ig.ActorEntity.FACE4",
                    "isOptional": false
                },
                "active": {
                    "type": "boolean",
                    "isOptional": false
                },
                "openTimer": {
                    "type": "number",
                    "isOptional": false
                },
                "hasDoorMat": {
                    "type": "boolean",
                    "isOptional": false
                },
                "hasDoorGlow": {
                    "type": "boolean",
                    "isOptional": false
                },
                "hideManager": {
                    "type": "ig.EntityHideManager",
                    "isOptional": true
                },
                "blockEvent": {
                    "type": "ig.Event",
                    "isOptional": false
                },
                "blockEventCondition": {
                    "type": "ig.VarCondition",
                    "isOptional": false
                },
                "openEffect": {
                    "type": "ig.EffectHandle",
                    "isOptional": false
                },
                "sounds": {
                    "type": "{ activate: ig.Sound; deactivate: ig.Sound }",
                    "isOptional": false
                },
                "fx": {
                    "type": "{ sheet: ig.EffectSheet }",
                    "isOptional": false
                },
                "doorMat": {
                    "type": "ig.DoorMat",
                    "isOptional": true
                },
                "dot": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "close": {
                    "returnType": "void",
                    "args": []
                },
                "open": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "entity",
                            "type": "ig.Entity",
                            "isOptional": false
                        },
                        {
                            "name": "data",
                            "type": "Vec2 & { dot: number }",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "Door",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "ig.ENTITY.Door.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.AnimatedEntity"
            ]
        },
        "ig.ENTITY.Door.sounds": {
            "fields": {
                "activate": {
                    "type": "ig.Sound",
                    "isOptional": false
                },
                "deactivate": {
                    "type": "ig.Sound",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ENTITY.Door.fx": {
            "fields": {
                "sheet": {
                    "type": "ig.EffectSheet",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ENTITY": {
            "fields": {
                "Door": {
                    "type": "DoorConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.DoorMat.Settings": {
            "fields": {
                "dir": {
                    "type": "keyof typeof ig.ActorEntity.FACE4",
                    "isOptional": false
                },
                "active": {
                    "type": "boolean",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": [
                "ig.Entity.Settings"
            ]
        },
        "ig.DoorMat": {
            "fields": {
                "dir": {
                    "type": "keyof typeof ig.ActorEntity.FACE4",
                    "isOptional": false
                },
                "isActive": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "setActive": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "a_",
                            "type": "unknown",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "DoorMat",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "ig.DoorMat.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.AnimatedEntity"
            ]
        },
        "ig": {
            "fields": {
                "DoorMat": {
                    "type": "DoorMatConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "impact.feature.map-content.entities.glowing-ground": {},
    "impact.feature.map-content.entities.hidden-block": {
        "ig.ENTITY.HiddenBlock.Settings": {
            "fields": {
                "collType": {
                    "type": "keyof typeof ig.COLLTYPE",
                    "isOptional": true
                },
                "size": {
                    "type": "Vec2",
                    "isOptional": true
                },
                "shape": {
                    "type": "keyof typeof ig.COLLSHAPE",
                    "isOptional": true
                },
                "heightShape": {
                    "type": "keyof typeof ig.COLL_HEIGHT_SHAPE",
                    "isOptional": true
                },
                "terrain": {
                    "type": "keyof typeof ig.TERRAIN",
                    "isOptional": true
                },
                "zHeight": {
                    "type": "number",
                    "isOptional": true
                },
                "blockNavMap": {
                    "type": "boolean",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": [
                "ig.Entity.Settings"
            ]
        },
        "ig.ENTITY.HiddenBlock": {
            "fields": {
                "terrain": {
                    "type": "ig.TERRAIN",
                    "isOptional": false
                },
                "_wm": {
                    "type": "ig.Config",
                    "isOptional": false
                },
                "blockNavMap": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "onHideRequest": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "HiddenBlock",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "ig.ENTITY.HiddenBlock.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Entity"
            ]
        },
        "ig.ENTITY": {
            "fields": {
                "HiddenBlock": {
                    "type": "HiddenBlockConstructor"
                },
                "HiddenSkyBlock": {
                    "type": "HiddenSkyBlockConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ENTITY.HiddenSkyBlock.Settings": {
            "fields": {},
            "functions": {},
            "parents": [
                "ig.Entity.Settings"
            ]
        },
        "ig.ENTITY.HiddenSkyBlock": {
            "fields": {},
            "functions": {
                "init": {
                    "returnType": "HiddenSkyBlock",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "ig.ENTITY.HiddenSkyBlock.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Entity"
            ]
        }
    },
    "impact.feature.map-content.entities.note": {},
    "impact.feature.map-content.entities.prop": {
        "ig.PropSheet.Data": {
            "fields": {
                "DOCTYPE": {
                    "type": "'PROP_SHEET'",
                    "isOptional": false
                },
                "props": {
                    "type": "PropData[]",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.PropSheet.PropData": {
            "fields": {
                "name": {
                    "type": "string",
                    "isOptional": false
                },
                "terrain": {
                    "type": "keyof typeof ig.TERRAIN",
                    "isOptional": false
                },
                "size": {
                    "type": "Vec3",
                    "isOptional": false
                },
                "collType": {
                    "type": "keyof typeof ig.COLLTYPE",
                    "isOptional": false
                },
                "anims": {
                    "type": "ig.AnimationSheet.Settings",
                    "isOptional": false
                },
                "fix": {
                    "type": "{\n          gfx: string;\n          x: number;\n          y: number;\n          w: number;\n          h: number;\n          offY?: number;\n          shape?: keyof typeof ig.ANIM_SHAPE_TYPE;\n          flipX?: number;\n        }",
                    "isOptional": true
                },
                "gfx": {
                    "type": "string",
                    "isOptional": false
                },
                "x": {
                    "type": "number",
                    "isOptional": false
                },
                "y": {
                    "type": "number",
                    "isOptional": false
                },
                "w": {
                    "type": "number",
                    "isOptional": false
                },
                "h": {
                    "type": "number",
                    "isOptional": false
                },
                "offY": {
                    "type": "number",
                    "isOptional": true
                },
                "shape": {
                    "type": "keyof typeof ig.ANIM_SHAPE_TYPE",
                    "isOptional": true
                },
                "flipX": {
                    "type": "number",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.PropSheet": {
            "fields": {
                "props": {
                    "type": "Record<string, ig.PropSheet.PropData>",
                    "isOptional": false
                }
            },
            "functions": {
                "handlePropEntry": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "propData",
                            "type": "ig.PropSheet.PropData",
                            "isOptional": false
                        }
                    ]
                },
                "getProp": {
                    "returnType": "ig.PropSheet.PropData",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "PropSheet",
                    "args": [
                        {
                            "name": "item",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.JsonLoadable"
            ]
        },
        "ig": {
            "fields": {
                "PropSheet": {
                    "type": "PropSheetConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ENTITY.Prop.Settings": {
            "fields": {},
            "functions": {},
            "parents": [
                "ig.Entity.Settings"
            ]
        },
        "ig.ENTITY.Prop": {
            "fields": {
                "terrain": {
                    "type": "ig.TERRAIN",
                    "isOptional": false
                },
                "face": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "propSet": {
                    "type": "unknown",
                    "isOptional": false
                },
                "propName": {
                    "type": "string",
                    "isOptional": false
                },
                "propAnim": {
                    "type": "string",
                    "isOptional": false
                },
                "nudging": {
                    "type": "{\n          active: boolean;\n          timer: number;\n          variance: number;\n          onFall: boolean;\n        }",
                    "isOptional": false
                },
                "collideSound": {
                    "type": "ig.Sound",
                    "isOptional": false
                },
                "condAnims": {
                    "type": "unknown",
                    "isOptional": false
                },
                "touchVar": {
                    "type": "string",
                    "isOptional": false
                },
                "_triggered": {
                    "type": "boolean",
                    "isOptional": false
                },
                "shuffleAnims": {
                    "type": "boolean",
                    "isOptional": false
                },
                "interact": {
                    "type": "sc.PropInteract",
                    "isOptional": true
                },
                "currentInteract": {
                    "type": "unknown",
                    "isOptional": false
                },
                "ballKill": {
                    "type": "{ fx?: ig.EffectHandle }",
                    "isOptional": false
                },
                "hideManager": {
                    "type": "ig.EntityHideManager",
                    "isOptional": true
                }
            },
            "functions": {
                "init": {
                    "returnType": "Prop",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "ig.ENTITY.Prop.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.AnimatedEntity"
            ]
        },
        "ig.ENTITY.Prop.nudging": {
            "fields": {
                "active": {
                    "type": "boolean",
                    "isOptional": false
                },
                "timer": {
                    "type": "number",
                    "isOptional": false
                },
                "variance": {
                    "type": "number",
                    "isOptional": false
                },
                "onFall": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ENTITY.Prop.ballKill": {
            "fields": {
                "fx": {
                    "type": "ig.EffectHandle",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ENTITY": {
            "fields": {
                "Prop": {
                    "type": "PropConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "impact.feature.map-content.entities.scalable-prop": {
        "ig.ENTITY.ScalableProp.Settings.PropConfig": {
            "fields": {
                "name": {
                    "type": "string",
                    "isOptional": false
                },
                "sheet": {
                    "type": "string",
                    "isOptional": false
                },
                "ends": {
                    "type": "{ west?: string; east?: string; north?: string; south?: string } | null",
                    "isOptional": false
                },
                "west": {
                    "type": "string",
                    "isOptional": true
                },
                "east": {
                    "type": "string",
                    "isOptional": true
                },
                "north": {
                    "type": "string",
                    "isOptional": true
                },
                "south": {
                    "type": "string",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ENTITY.ScalableProp.Settings": {
            "fields": {
                "size": {
                    "type": "Vec2",
                    "isOptional": true
                },
                "patternOffset": {
                    "type": "Vec2",
                    "isOptional": true
                },
                "timeOffset": {
                    "type": "number",
                    "isOptional": true
                },
                "blockNavMap": {
                    "type": "boolean",
                    "isOptional": false
                },
                "hideCondition": {
                    "type": "string",
                    "isOptional": true
                },
                "propConfig": {
                    "type": "ig.ENTITY.ScalableProp.Settings.PropConfig",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": [
                "ig.Entity.Settings"
            ]
        }
    },
    "impact.feature.map-content.entities.stair-door": {},
    "impact.feature.map-content.entities.teleport-ground": {
        "ig.ENTITY.TeleportGround.Settings": {
            "fields": {
                "zHeight": {
                    "type": "number",
                    "isOptional": true
                },
                "dir": {
                    "type": "keyof typeof ig.ActorEntity.FACE4",
                    "isOptional": true
                },
                "map": {
                    "type": "string",
                    "isOptional": false
                },
                "marker": {
                    "type": "string",
                    "isOptional": false
                },
                "spawnDistance": {
                    "type": "number",
                    "isOptional": true
                },
                "blockEvent": {
                    "type": "ig.EventStepBase.Settings",
                    "isOptional": true
                },
                "blockEventCondition": {
                    "type": "string",
                    "isOptional": true
                },
                "transitionType": {
                    "type": "'REGULAR' | 'INTER_AREA'",
                    "isOptional": true
                },
                "npcRunnerProb": {
                    "type": "number",
                    "isOptional": true
                },
                "centerWalkThrough": {
                    "type": "boolean",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": [
                "ig.Entity.Settings"
            ]
        },
        "ig.ENTITY.TeleportGround": {
            "fields": {
                "map": {
                    "type": "string",
                    "isOptional": false
                },
                "marker": {
                    "type": "string",
                    "isOptional": false
                },
                "dir": {
                    "type": "keyof typeof ig.ActorEntity.FACE4",
                    "isOptional": false
                },
                "blockEventCondition": {
                    "type": "string",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "TeleportGround",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "ig.ENTITY.TeleportGround.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Entity"
            ]
        },
        "ig.ENTITY": {
            "fields": {
                "TeleportGround": {
                    "type": "TeleportGroundConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "impact.feature.map-content.map-style": {
        "ig": {
            "fields": {
                "MAP_STYLES": {
                    "type": "Record<string, MapStyle.MapStyleEntry>"
                },
                "MapStyle": {
                    "type": "MapStyleConstructor"
                },
                "mapStyle": {
                    "type": "MapStyle"
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.MapStyle.MapStyleType.Map.TeleportField": {
            "fields": {
                "x": {
                    "type": "number",
                    "isOptional": false
                },
                "y": {
                    "type": "number",
                    "isOptional": false
                },
                "xCount": {
                    "type": "number",
                    "isOptional": false
                },
                "zHeight": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.MapStyle.MapStyleType.Map.DoorGlow": {
            "fields": {
                "x": {
                    "type": "number",
                    "isOptional": false
                },
                "y": {
                    "type": "number",
                    "isOptional": false
                },
                "xCount": {
                    "type": "number",
                    "isOptional": false
                },
                "sideX": {
                    "type": "number",
                    "isOptional": true
                },
                "sideY": {
                    "type": "number",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.MapStyle.MapStyleType.Map.DoorVariationGlow": {
            "fields": {
                "x": {
                    "type": "number",
                    "isOptional": false
                },
                "y": {
                    "type": "number",
                    "isOptional": false
                },
                "xCount": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.MapStyle.MapStyleType.Map.DoorVariation": {
            "fields": {
                "x": {
                    "type": "number",
                    "isOptional": false
                },
                "y": {
                    "type": "number",
                    "isOptional": false
                },
                "doorMat": {
                    "type": "boolean",
                    "isOptional": false
                },
                "doorGlow": {
                    "type": "DoorVariationGlow",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.MapStyle.MapStyleType.Map": {
            "fields": {
                "sheet": {
                    "type": "string",
                    "isOptional": false
                },
                "hasDoorMat": {
                    "type": "boolean",
                    "isOptional": false
                },
                "teleportField": {
                    "type": "Map.TeleportField",
                    "isOptional": true
                },
                "doorGlow": {
                    "type": "Map.DoorGlow",
                    "isOptional": true
                },
                "doorVariations": {
                    "type": "Record<string, Map.DoorVariation>",
                    "isOptional": true
                },
                "doorSound": {
                    "type": "string",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.MapStyle.MapStyleType.Puzzle": {
            "fields": {
                "sheet": {
                    "type": "string",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.MapStyle.MapStyleType.Puzzle2": {
            "fields": {
                "sheet": {
                    "type": "string",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.MapStyle.MapStyleType.Effect": {
            "fields": {
                "sheet": {
                    "type": "string",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.MapStyle.MapStyleType.Walls.Colors": {
            "fields": {
                "blockFront": {
                    "type": "string",
                    "isOptional": false
                },
                "blockTop": {
                    "type": "string",
                    "isOptional": false
                },
                "pBlockFront": {
                    "type": "string",
                    "isOptional": false
                },
                "pBlockTop": {
                    "type": "string",
                    "isOptional": false
                },
                "npBlockFront": {
                    "type": "string",
                    "isOptional": false
                },
                "npBlockTop": {
                    "type": "string",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.MapStyle.MapStyleType.Walls": {
            "fields": {
                "colors": {
                    "type": "Walls.Colors",
                    "isOptional": false
                },
                "alpha": {
                    "type": "number",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.MapStyle.MapStyleType.PuzzleElement": {
            "fields": {
                "sheet": {
                    "type": "string",
                    "isOptional": false
                },
                "x": {
                    "type": "number",
                    "isOptional": false
                },
                "y": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.MapStyle.MapStyleType.WaterBlock": {
            "fields": {
                "puddleX": {
                    "type": "number",
                    "isOptional": false
                },
                "puddleY": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": [
                "PuzzleElement"
            ]
        },
        "ig.MapStyle.MapStyleType.Lorry": {
            "fields": {
                "sheet": {
                    "type": "string",
                    "isOptional": false
                },
                "railX": {
                    "type": "number",
                    "isOptional": false
                },
                "railY": {
                    "type": "number",
                    "isOptional": false
                },
                "lorryX": {
                    "type": "number",
                    "isOptional": false
                },
                "lorryY": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.MapStyle.MapStyleType.Destruct": {
            "fields": {
                "sheet": {
                    "type": "string",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.MapStyle.MapStyleTypes": {
            "fields": {
                "map": {
                    "type": "MapStyleType.Map",
                    "isOptional": false
                },
                "puzzle": {
                    "type": "MapStyleType.Puzzle",
                    "isOptional": false
                },
                "puzzle2": {
                    "type": "MapStyleType.Puzzle2",
                    "isOptional": false
                },
                "walls": {
                    "type": "MapStyleType.Walls",
                    "isOptional": false
                },
                "effect": {
                    "type": "MapStyleType.Effect",
                    "isOptional": false
                },
                "quickSand": {
                    "type": "MapStyleType.PuzzleElement",
                    "isOptional": false
                },
                "pipes": {
                    "type": "MapStyleType.PuzzleElement",
                    "isOptional": false
                },
                "pipeSwitch": {
                    "type": "MapStyleType.PuzzleElement",
                    "isOptional": false
                },
                "propeller": {
                    "type": "MapStyleType.PuzzleElement",
                    "isOptional": false
                },
                "magnet": {
                    "type": "MapStyleType.PuzzleElement",
                    "isOptional": false
                },
                "tesla": {
                    "type": "MapStyleType.PuzzleElement",
                    "isOptional": false
                },
                "teslaSwitch": {
                    "type": "MapStyleType.PuzzleElement",
                    "isOptional": false
                },
                "anticompressor": {
                    "type": "MapStyleType.PuzzleElement",
                    "isOptional": false
                },
                "dynPlatformSmall": {
                    "type": "MapStyleType.PuzzleElement",
                    "isOptional": false
                },
                "dynPlatformMedium": {
                    "type": "MapStyleType.PuzzleElement",
                    "isOptional": false
                },
                "rotateBlocker": {
                    "type": "MapStyleType.PuzzleElement",
                    "isOptional": false
                },
                "waveSwitch": {
                    "type": "MapStyleType.PuzzleElement",
                    "isOptional": false
                },
                "waveblock": {
                    "type": "MapStyleType.PuzzleElement",
                    "isOptional": false
                },
                "waterblock": {
                    "type": "MapStyleType.WaterBlock",
                    "isOptional": false
                },
                "bouncer": {
                    "type": "MapStyleType.PuzzleElement",
                    "isOptional": false
                },
                "destruct": {
                    "type": "MapStyleType.Destruct",
                    "isOptional": false
                },
                "lorry": {
                    "type": "MapStyleType.Lorry",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.MapStyle": {
            "fields": {},
            "functions": {
                "get": {
                    "returnType": "MapStyle.MapStyleTypes[K]",
                    "args": [
                        {
                            "name": "contentType",
                            "type": "K",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "MapStyle",
                    "args": []
                },
                "registerStyle": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "contentType",
                            "type": "K",
                            "isOptional": false
                        },
                        {
                            "name": "data",
                            "type": "MapStyle.MapStyleTypes[K]",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.GameAddon"
            ]
        }
    },
    "impact.feature.map-content.plug-in": {},
    "impact.feature.map-image.map-image": {},
    "impact.feature.map-image.plug-in": {},
    "impact.feature.map-sounds.map-sounds": {
        "ig.MAP_SOUNDS.Loop": {
            "fields": {
                "path": {
                    "type": "string",
                    "isOptional": false
                },
                "volume": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.MAP_SOUNDS": {
            "fields": {
                "wait": {
                    "type": "number",
                    "isOptional": false
                },
                "path": {
                    "type": "string",
                    "isOptional": false
                },
                "volume": {
                    "type": "number",
                    "isOptional": false
                },
                "CARGO_SHIP_OUTSIDE": {
                    "type": "ig.MAP_SOUNDS.Entry",
                    "isOptional": false
                },
                "CARGO_SHIP_OUTSIDE_RAIN": {
                    "type": "ig.MAP_SOUNDS.Entry",
                    "isOptional": false
                },
                "CARGO_SHIP_INSIDE": {
                    "type": "ig.MAP_SOUNDS.Entry",
                    "isOptional": false
                },
                "STRONG_RAIN": {
                    "type": "ig.MAP_SOUNDS.Entry",
                    "isOptional": false
                },
                "LIGHT_WIND": {
                    "type": "ig.MAP_SOUNDS.Entry",
                    "isOptional": false
                },
                "CARGO_SHIP_AMBIENT_A": {
                    "type": "ig.MAP_SOUNDS.Entry",
                    "isOptional": false
                },
                "CARGO_SHIP_AMBIENT_B": {
                    "type": "ig.MAP_SOUNDS.Entry",
                    "isOptional": false
                },
                "CARGO_SHIP_AMBIENT_C": {
                    "type": "ig.MAP_SOUNDS.Entry",
                    "isOptional": false
                },
                "CARGO_SHIP_AMBIENT_D": {
                    "type": "ig.MAP_SOUNDS.Entry",
                    "isOptional": false
                },
                "CARGO_SHIP_AMBIENT_E": {
                    "type": "ig.MAP_SOUNDS.Entry",
                    "isOptional": false
                },
                "CARGO_SHIP_AMBIENT_F": {
                    "type": "ig.MAP_SOUNDS.Entry",
                    "isOptional": false
                },
                "CARGO_SHIP_AMBIENT_G": {
                    "type": "ig.MAP_SOUNDS.Entry",
                    "isOptional": false
                },
                "CARGO_SHIP_AMBIENT_H": {
                    "type": "ig.MAP_SOUNDS.Entry",
                    "isOptional": false
                },
                "HIDEOUT_AMBIENT": {
                    "type": "ig.MAP_SOUNDS.Entry",
                    "isOptional": false
                },
                "HIDEOUT_INNER_AMBIENT": {
                    "type": "ig.MAP_SOUNDS.Entry",
                    "isOptional": false
                },
                "SAPPHIRE_RIDGE_AMBIENT": {
                    "type": "ig.MAP_SOUNDS.Entry",
                    "isOptional": false
                },
                "HIDEOUT_OFFICE_AMBIENT": {
                    "type": "ig.MAP_SOUNDS.Entry",
                    "isOptional": false
                },
                "CROSS_CENTRAL_INNER": {
                    "type": "ig.MAP_SOUNDS.Entry",
                    "isOptional": false
                },
                "NEWCOMERS_BRIDGE": {
                    "type": "ig.MAP_SOUNDS.Entry",
                    "isOptional": false
                },
                "BERGEN_TRAIL_WIND": {
                    "type": "ig.MAP_SOUNDS.Entry",
                    "isOptional": false
                },
                "BERGEN_TRAIL_WIND_SUBTLE": {
                    "type": "ig.MAP_SOUNDS.Entry",
                    "isOptional": false
                },
                "ROOKIE_HARBOR_TELEPORTER": {
                    "type": "ig.MAP_SOUNDS.Entry",
                    "isOptional": false
                },
                "ROOKIE_HARBOR_OCEAN": {
                    "type": "ig.MAP_SOUNDS.Entry",
                    "isOptional": false
                },
                "CROWD": {
                    "type": "ig.MAP_SOUNDS.Entry",
                    "isOptional": false
                },
                "ROOKIE_HARBOR_CROWD": {
                    "type": "ig.MAP_SOUNDS.Entry",
                    "isOptional": false
                },
                "HEAT_AREA_DESERT": {
                    "type": "ig.MAP_SOUNDS.Entry",
                    "isOptional": false
                },
                "HEAT_AREA_WIND": {
                    "type": "ig.MAP_SOUNDS.Entry",
                    "isOptional": false
                },
                "HEAT_AREA_OASIS": {
                    "type": "ig.MAP_SOUNDS.Entry",
                    "isOptional": false
                },
                "CAVE": {
                    "type": "ig.MAP_SOUNDS.Entry",
                    "isOptional": false
                },
                "CAVE_WATER_DROPS": {
                    "type": "ig.MAP_SOUNDS.Entry",
                    "isOptional": false
                },
                "'BAKI-KUM'": {
                    "type": "ig.MAP_SOUNDS.Entry",
                    "isOptional": false
                },
                "HEAT_DUNGEON_OUTSIDE": {
                    "type": "ig.MAP_SOUNDS.Entry",
                    "isOptional": false
                },
                "DREAM": {
                    "type": "ig.MAP_SOUNDS.Entry",
                    "isOptional": false
                },
                "JUNGLE": {
                    "type": "ig.MAP_SOUNDS.Entry",
                    "isOptional": false
                },
                "JUNGLE_INFESTED": {
                    "type": "ig.MAP_SOUNDS.Entry",
                    "isOptional": false
                },
                "JUNGLE_CITY_INNER": {
                    "type": "ig.MAP_SOUNDS.Entry",
                    "isOptional": false
                },
                "JUNGLE_CITY_OUTER": {
                    "type": "ig.MAP_SOUNDS.Entry",
                    "isOptional": false
                },
                "COLD_DUNGEON": {
                    "type": "ig.MAP_SOUNDS.Entry",
                    "isOptional": false
                },
                "HEAT_DUNGEON": {
                    "type": "ig.MAP_SOUNDS.Entry",
                    "isOptional": false
                },
                "HEAT_DUNGEON_WATER": {
                    "type": "ig.MAP_SOUNDS.Entry",
                    "isOptional": false
                },
                "SHOCK_DUNGEON": {
                    "type": "ig.MAP_SOUNDS.Entry",
                    "isOptional": false
                },
                "WAVE_DUNGEON": {
                    "type": "ig.MAP_SOUNDS.Entry",
                    "isOptional": false
                },
                "TREE_DUNGEON": {
                    "type": "ig.MAP_SOUNDS.Entry",
                    "isOptional": false
                },
                "SPOOKY_INNER": {
                    "type": "ig.MAP_SOUNDS.Entry",
                    "isOptional": false
                },
                "ARID_OUTSIDE": {
                    "type": "ig.MAP_SOUNDS.Entry",
                    "isOptional": false
                },
                "ARID_INSIDE": {
                    "type": "ig.MAP_SOUNDS.Entry",
                    "isOptional": false
                },
                "SERIOUS_AMBIENT": {
                    "type": "ig.MAP_SOUNDS.Entry",
                    "isOptional": false
                },
                "LAB": {
                    "type": "ig.MAP_SOUNDS.Entry",
                    "isOptional": false
                },
                "EVO_VILLAGE": {
                    "type": "ig.MAP_SOUNDS.Entry",
                    "isOptional": false
                },
                "FINAL_DUNGEON_INSIDE": {
                    "type": "ig.MAP_SOUNDS.Entry",
                    "isOptional": false
                },
                "FINAL_DUNGEON_OUTSIDE": {
                    "type": "ig.MAP_SOUNDS.Entry",
                    "isOptional": false
                },
                "FINAL_DUNGEON_OUTSIDE_WINDY": {
                    "type": "ig.MAP_SOUNDS.Entry",
                    "isOptional": false
                },
                "BEACH_AMBIENCE": {
                    "type": "ig.MAP_SOUNDS.Entry",
                    "isOptional": false
                },
                "ARENA_TOP": {
                    "type": "ig.MAP_SOUNDS.Entry",
                    "isOptional": false
                },
                "RAID_BOSS_AMBIENCE": {
                    "type": "ig.MAP_SOUNDS.Entry",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.MAP_SOUNDS.Entry": {
            "fields": {
                "loop": {
                    "type": "Loop[]",
                    "isOptional": false
                },
                "segments": {
                    "type": "Segment[]",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig": {
            "fields": {
                "MAP_SOUNDS": {
                    "type": "MAP_SOUNDS"
                },
                "MapSoundEntry": {
                    "type": "MapSoundEntryConstructor"
                },
                "MapSounds": {
                    "type": "MapSoundsConstructor"
                },
                "mapSounds": {
                    "type": "MapSounds"
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.MapSoundEntry.Segment.Entry": {
            "fields": {
                "time": {
                    "type": "number",
                    "isOptional": false
                },
                "sound": {
                    "type": "ig.Sound",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.MapSoundEntry.Segment": {
            "fields": {
                "maxTime": {
                    "type": "number",
                    "isOptional": false
                },
                "entries": {
                    "type": "ig.MapSoundEntry.Segment.Entry[]",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.MapSoundEntry": {
            "fields": {
                "name": {
                    "type": "keyof typeof ig.MAP_SOUNDS",
                    "isOptional": false
                },
                "loopSounds": {
                    "type": "ig.Sound[]",
                    "isOptional": false
                },
                "segments": {
                    "type": "ig.MapSoundEntry.Segment[]",
                    "isOptional": false
                },
                "loopHandles": {
                    "type": "ig.SoundHandle[]",
                    "isOptional": false
                },
                "currentSegment": {
                    "type": "number",
                    "isOptional": false
                },
                "currentEntry": {
                    "type": "number",
                    "isOptional": false
                },
                "timer": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "clearCached": {
                    "returnType": "void",
                    "args": []
                },
                "start": {
                    "returnType": "void",
                    "args": []
                },
                "update": {
                    "returnType": "void",
                    "args": []
                },
                "stop": {
                    "returnType": "void",
                    "args": []
                },
                "_createSegment": {
                    "returnType": "ig.MapSoundEntry.Segment",
                    "args": [
                        {
                            "name": "settings",
                            "type": "ig.MAP_SOUNDS.Segment",
                            "isOptional": false
                        }
                    ]
                },
                "_selectSegment": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "MapSoundEntry",
                    "args": [
                        {
                            "name": "name",
                            "type": "keyof typeof ig.MAP_SOUNDS",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "ig.MapSounds": {
            "fields": {},
            "functions": {
                "onReset": {
                    "returnType": "void",
                    "args": []
                },
                "onLevelLoaded": {
                    "returnType": "void",
                    "args": []
                },
                "onDeferredUpdate": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "MapSounds",
                    "args": []
                }
            },
            "parents": [
                "ig.GameAddon"
            ]
        }
    },
    "impact.feature.map-sounds.plug-in": {},
    "impact.feature.navigation.nav-map": {
        "ig.NavEntityFlag": {
            "fields": {
                "bitOffset": {
                    "type": "number",
                    "isOptional": false
                },
                "map": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.NAV_ENTITY_FLAG": {
            "fields": {
                "BLOCK": {
                    "type": "ig.NavEntityFlag",
                    "isOptional": false
                },
                "GROUND": {
                    "type": "ig.NavEntityFlag",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig": {
            "fields": {
                "NAV_ENTITY_FLAG": {
                    "type": "NAV_ENTITY_FLAG"
                },
                "PathNode": {
                    "type": "PathNodeConstructor"
                },
                "PathNodeConnect": {
                    "type": "PathNodeConnectConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.MAP.Navigation": {
            "fields": {
                "nodes": {
                    "type": "ig.PathNode[]",
                    "isOptional": false
                },
                "freeNodeIds": {
                    "type": "number[]",
                    "isOptional": false
                },
                "initialized": {
                    "type": "boolean",
                    "isOptional": false
                },
                "_wm": {
                    "type": "ig.Config",
                    "isOptional": false
                },
                "levelKey": {
                    "type": "'navigation'",
                    "isOptional": false
                }
            },
            "functions": {
                "levelInit": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "level",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "reparse": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "level",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "minX",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "maxX",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "minY",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "maxY",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "connectAirNodes": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "level",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "draw": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "height",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "_getGridValue": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "navEntityFlag",
                            "type": "ig.NavEntityFlag",
                            "isOptional": false
                        }
                    ]
                },
                "_setGridValue": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "value",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "navEntityFlag",
                            "type": "ig.NavEntityFlag",
                            "isOptional": false
                        }
                    ]
                },
                "_setGridFlag": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "value",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "navEntityFlag",
                            "type": "ig.NavEntityFlag",
                            "isOptional": false
                        }
                    ]
                },
                "_clearGridFlag": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "value",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "navEntityFlag",
                            "type": "ig.NavEntityFlag",
                            "isOptional": false
                        }
                    ]
                },
                "getEntityFlagValue": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "navEntityFlag",
                            "type": "ig.NavEntityFlag",
                            "isOptional": false
                        }
                    ]
                },
                "setEntityFlagValue": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "value",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "navEntityFlag",
                            "type": "ig.NavEntityFlag",
                            "isOptional": false
                        }
                    ]
                },
                "increaseEntityFlagValue": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "navEntityFlag",
                            "type": "ig.NavEntityFlag",
                            "isOptional": false
                        }
                    ]
                },
                "decreaseEntityFlagValue": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "navEntityFlag",
                            "type": "ig.NavEntityFlag",
                            "isOptional": false
                        }
                    ]
                },
                "getGridAreaFlag": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "getGridForceGround": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "getGridNode": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "getGridNodeId": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "setGridNodeId": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "value",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "getGridBuildFlags": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "setGridBuildFlag": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "value",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "clearGridBuildFlags": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "getNode": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "Navigation",
                    "args": [
                        {
                            "name": "data",
                            "type": "sc.MapModel.MapLayer",
                            "isOptional": false
                        },
                        {
                            "name": "zHeight",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Map"
            ]
        },
        "ig.PathNode.Neighbour": {
            "fields": {
                "node": {
                    "type": "ig.PathNode",
                    "isOptional": false
                },
                "shared": {
                    "type": "ig.PathNodeConnect",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.PathNode.Edge": {
            "fields": {
                "min": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "max": {
                    "type": "Vec2",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.PathNode": {
            "fields": {
                "id": {
                    "type": "number",
                    "isOptional": false
                },
                "height": {
                    "type": "number",
                    "isOptional": false
                },
                "min": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "max": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "center": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "neighbours": {
                    "type": "ig.PathNode.Neighbour[]",
                    "isOptional": false
                },
                "airNeighbours": {
                    "type": "ig.PathNode.Neighbour[]",
                    "isOptional": false
                },
                "airNode": {
                    "type": "boolean",
                    "isOptional": false
                },
                "airConnected": {
                    "type": "boolean",
                    "isOptional": false
                },
                "edges": {
                    "type": "Record<\n        'north' | 'east' | 'south' | 'west' | 'down' | 'up' | 'upStairs' | 'block' | 'airBlock',\n        ig.PathNode.Edge[]\n      >",
                    "isOptional": false
                },
                "tmpSearchId": {
                    "type": "number",
                    "isOptional": false
                },
                "tmpCameFromNode": {
                    "type": "null",
                    "isOptional": false
                },
                "tmpCameFromPos": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "tmpCameFromNeighbour": {
                    "type": "null",
                    "isOptional": false
                },
                "tmpClosed": {
                    "type": "boolean",
                    "isOptional": false
                },
                "tmpGScore": {
                    "type": "number",
                    "isOptional": false
                },
                "tmpFScore": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "erase": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "navMap",
                            "type": "ig.MAP.Navigation",
                            "isOptional": false
                        },
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "edge",
                            "type": "ig.PathNode.Edge",
                            "isOptional": false
                        }
                    ]
                },
                "isClosed": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "searchId",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "setClosed": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "searchId",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "closed",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "getCameFromNode": {
                    "returnType": "this['tmpCameFromNode']",
                    "args": [
                        {
                            "name": "searchId",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "getCameFromNeighbour": {
                    "returnType": "this['tmpCameFromNeighbour']",
                    "args": [
                        {
                            "name": "searchId",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "getCameFromPos": {
                    "returnType": "Vec2",
                    "args": [
                        {
                            "name": "searchId",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "setCameFrom": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "searchId",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "cameFromNode",
                            "type": "this['tmpCameFromNode']",
                            "isOptional": false
                        },
                        {
                            "name": "cameFromNeighbour",
                            "type": "this['tmpCameFromNeighbour']",
                            "isOptional": false
                        },
                        {
                            "name": "pos",
                            "type": "Vec2",
                            "isOptional": false
                        }
                    ]
                },
                "getGScore": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "searchId",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "setGScore": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "searchId",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "value",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "getFScore": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "searchId",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "setFScore": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "searchId",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "value",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "hasGScore": {
                    "returnType": "boolean",
                    "args": []
                },
                "init": {
                    "returnType": "PathNode",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "navMap",
                            "type": "ig.MAP.Navigation",
                            "isOptional": false
                        },
                        {
                            "name": "collMap",
                            "type": "ig.MAP.Collision",
                            "isOptional": false
                        },
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "height",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "ig.PathNodeConnect.JumpInfo": {
            "fields": {
                "jumpDist": {
                    "type": "number",
                    "isOptional": false
                },
                "destEdge": {
                    "type": "ig.PathNode.Edge",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.PathNodeConnect.SearchData": {
            "fields": {
                "idx": {
                    "type": "number",
                    "isOptional": false
                },
                "pos": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "fromEdge": {
                    "type": "Nullable<ig.PathNode>",
                    "isOptional": false
                },
                "fromNode": {
                    "type": "Nullable<ig.PathNode>",
                    "isOptional": false
                },
                "toNode": {
                    "type": "Nullable<ig.PathNode>",
                    "isOptional": false
                },
                "gScore": {
                    "type": "number",
                    "isOptional": false
                },
                "fScore": {
                    "type": "number",
                    "isOptional": false
                },
                "closed": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.PathNodeConnect": {
            "fields": {
                "edges": {
                    "type": "ig.PathNode.Edge",
                    "isOptional": false
                },
                "waypointMin": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "waypointMax": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "maxEdgeLength": {
                    "type": "number",
                    "isOptional": false
                },
                "type": {
                    "type": "ig.NAV_CONNECTION_TYPE",
                    "isOptional": false
                },
                "jumpInfo": {
                    "type": "ig.PathNodeConnect.JumpInfo",
                    "isOptional": false
                },
                "reverse": {
                    "type": "Nullable<ig.PathNodeConnect>",
                    "isOptional": false
                },
                "externalData": {
                    "type": "Record<string, boolean>",
                    "isOptional": false
                },
                "searchData": {
                    "type": "Nullable<ig.PathNodeConnect.SearchData>",
                    "isOptional": false
                }
            },
            "functions": {
                "getSearchData": {
                    "returnType": "ig.PathNodeConnect.SearchData",
                    "args": [
                        {
                            "name": "idx",
                            "type": "number",
                            "isOptional": true
                        }
                    ]
                },
                "setExternalData": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "data",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "PathNodeConnect",
                    "args": [
                        {
                            "name": "type",
                            "type": "ig.NAV_CONNECTION_TYPE",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class"
            ]
        }
    },
    "impact.feature.navigation.plug-in": {},
    "impact.feature.nwf.nwf-errors": {},
    "impact.feature.nwf.plug-in": {},
    "impact.feature.overlay.overlay": {
        "ig.OverlayGui": {
            "fields": {
                "color": {
                    "type": "ig.Overlay.RGBAColorData",
                    "isOptional": false
                },
                "lighter": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "OverlayGui",
                    "args": []
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "ig": {
            "fields": {
                "OverlayGui": {
                    "type": "OverlayGuiConstructor"
                },
                "AlphaTransitionHandler": {
                    "type": "AlphaTransitionHandlerConstructor"
                },
                "OverlayCornerGui": {
                    "type": "OverlayCornerGuiConstructor"
                },
                "Overlay": {
                    "type": "OverlayConstructor"
                },
                "overlay": {
                    "type": "Overlay"
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.AlphaTransitionHandler": {
            "fields": {
                "timer": {
                    "type": "ig.WeightTimer",
                    "isOptional": false
                },
                "startAlpha": {
                    "type": "number",
                    "isOptional": false
                },
                "targetAlpha": {
                    "type": "number",
                    "isOptional": false
                },
                "blinkAlpha": {
                    "type": "number",
                    "isOptional": true
                }
            },
            "functions": {
                "update": {
                    "returnType": "boolean",
                    "args": []
                },
                "getAlpha": {
                    "returnType": "number",
                    "args": []
                },
                "set": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "targetAlpha",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "duration",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "blinkAlpha",
                            "type": "number",
                            "isOptional": true
                        }
                    ]
                },
                "init": {
                    "returnType": "AlphaTransitionHandler",
                    "args": []
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "ig.OverlayCornerGui": {
            "fields": {
                "gfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "alphaHandler": {
                    "type": "ig.AlphaTransitionHandler",
                    "isOptional": false
                }
            },
            "functions": {
                "setAlpha": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "alpha",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "time",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "blinkAlpha",
                            "type": "number",
                            "isOptional": true
                        }
                    ]
                },
                "init": {
                    "returnType": "OverlayCornerGui",
                    "args": [
                        {
                            "name": "gfx",
                            "type": "ig.Image",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "ig.Overlay.RGBAColorData": {
            "fields": {
                "a": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": [
                "ig.RGBColorData"
            ]
        },
        "ig.Overlay": {
            "fields": {
                "colorOld": {
                    "type": "ig.Overlay.RGBAColorData",
                    "isOptional": false
                },
                "colorNew": {
                    "type": "ig.Overlay.RGBAColorData",
                    "isOptional": false
                },
                "lighter": {
                    "type": "boolean",
                    "isOptional": false
                },
                "timer": {
                    "type": "number",
                    "isOptional": false
                },
                "max": {
                    "type": "number",
                    "isOptional": false
                },
                "gfx": {
                    "type": "Record<'WHITE' | 'RED' | 'BLACK', ig.Image>",
                    "isOptional": false
                },
                "colorGui": {
                    "type": "ig.OverlayGui",
                    "isOptional": false
                },
                "cornerGui": {
                    "type": "Record<ig.OVERLAY_CORNER, ig.OverlayCornerGui>",
                    "isOptional": false
                },
                "deferredUpdateOrder": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "onDeferredUpdate": {
                    "returnType": "void",
                    "args": []
                },
                "onReset": {
                    "returnType": "void",
                    "args": []
                },
                "setColor": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "r_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "g_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "b_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "a_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "max",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "lighter",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "zIndex",
                            "type": "number",
                            "isOptional": true
                        }
                    ]
                },
                "setAlpha": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "alpha",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "max",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "setCorner": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "corner",
                            "type": "ig.OVERLAY_CORNER | keyof typeof ig.OVERLAY_CORNER",
                            "isOptional": false
                        },
                        {
                            "name": "alpha",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "time",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "blinkAlpha",
                            "type": "number",
                            "isOptional": true
                        }
                    ]
                },
                "_getCurrentColor": {
                    "returnType": "ig.Overlay.RGBAColorData",
                    "args": []
                },
                "init": {
                    "returnType": "Overlay",
                    "args": []
                }
            },
            "parents": [
                "ig.GameAddon"
            ]
        }
    },
    "impact.feature.overlay.plug-in": {},
    "impact.feature.parallax.plug-in": {},
    "impact.feature.rumble.plug-in": {},
    "impact.feature.screen-blur.plug-in": {},
    "impact.feature.slow-motion.plug-in": {},
    "impact.feature.storage.plug-in": {},
    "impact.feature.terrain.plug-in": {},
    "impact.feature.terrain.terrain": {
        "ig.Terrain": {
            "fields": {
                "tilesetIds": {
                    "type": "Record<string, (number | string)[]>",
                    "isOptional": false
                }
            },
            "functions": {
                "isFallTerrain": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "terrain",
                            "type": "ig.TERRAIN",
                            "isOptional": false
                        }
                    ]
                },
                "getTerrain": {
                    "returnType": "ig.TERRAIN",
                    "args": [
                        {
                            "name": "coll",
                            "type": "ig.CollEntry",
                            "isOptional": false
                        },
                        {
                            "name": "precise",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "andBelow",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "getMapTerrain": {
                    "returnType": "ig.TERRAIN",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "level",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "sizeX",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "sizeY",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "Terrain",
                    "args": []
                }
            },
            "parents": [
                "ig.SingleLoadable"
            ]
        },
        "ig": {
            "fields": {
                "Terrain": {
                    "type": "TerrainConstructor"
                },
                "terrain": {
                    "type": "Terrain"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "impact.feature.video.plug-in": {},
    "impact.feature.video.video-gui": {},
    "impact.feature.video.video": {},
    "impact.feature.weather.clouds": {
        "ig.Clouds": {
            "fields": {
                "gfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "currentClouds": {
                    "type": "[]",
                    "isOptional": false
                },
                "density": {
                    "type": "number",
                    "isOptional": false
                },
                "vel": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "cloudRange": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "timer": {
                    "type": "number",
                    "isOptional": false
                },
                "maxTime": {
                    "type": "number",
                    "isOptional": false
                },
                "alpha": {
                    "type": "number",
                    "isOptional": false
                },
                "shadowOrder": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "clearClouds": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "immediately",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "setClouds": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "density",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "vel",
                            "type": "Vec2",
                            "isOptional": false
                        },
                        {
                            "name": "alpha",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "immediately",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "spawnCloudLine": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "immediately",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "addCloud": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "timer",
                            "type": "number",
                            "isOptional": true
                        }
                    ]
                },
                "moveClouds": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "startIndex",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "dontIncreaseTimer",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "update": {
                    "returnType": "void",
                    "args": []
                },
                "drawShadows": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "Clouds",
                    "args": []
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "ig": {
            "fields": {
                "Clouds": {
                    "type": "CloudsConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "impact.feature.weather.fog": {},
    "impact.feature.weather.plug-in": {},
    "impact.feature.weather.rain": {
        "ig.RainStrength": {
            "fields": {
                "pattern": {
                    "type": "number",
                    "isOptional": false
                },
                "move": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "duration": {
                    "type": "number",
                    "isOptional": false
                },
                "wait": {
                    "type": "number",
                    "isOptional": false
                },
                "dropsPerSecond": {
                    "type": "number",
                    "isOptional": false
                },
                "sound": {
                    "type": "Nullable<ig.Sound>",
                    "isOptional": false
                },
                "alpha": {
                    "type": "number",
                    "isOptional": true
                },
                "fade": {
                    "type": "number",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.RAIN_STRENGTH": {
            "fields": {
                "NONE": {
                    "type": "null",
                    "isOptional": false
                },
                "DRIZZLE": {
                    "type": "RainStrength",
                    "isOptional": false
                },
                "WEAK": {
                    "type": "RainStrength",
                    "isOptional": false
                },
                "MEDIUM": {
                    "type": "RainStrength",
                    "isOptional": false
                },
                "STRONG": {
                    "type": "RainStrength",
                    "isOptional": false
                },
                "SNOW_WEAK": {
                    "type": "RainStrength",
                    "isOptional": false
                },
                "SNOW_MEDIUM": {
                    "type": "RainStrength",
                    "isOptional": false
                },
                "SANDSTORM_WEAK": {
                    "type": "RainStrength",
                    "isOptional": false
                },
                "SANDSTORM_NERD": {
                    "type": "RainStrength",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig": {
            "fields": {
                "RAIN_STRENGTH": {
                    "type": "RAIN_STRENGTH"
                },
                "Rain": {
                    "type": "RainConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.Rain.Entry": {
            "fields": {
                "timer": {
                    "type": "number",
                    "isOptional": false
                },
                "maxTime": {
                    "type": "number",
                    "isOptional": false
                },
                "pos": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "move": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "alpha": {
                    "type": "number",
                    "isOptional": false
                },
                "fade": {
                    "type": "number",
                    "isOptional": false
                },
                "pattern": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.Rain": {
            "fields": {
                "gfx": {
                    "type": "ig.ImagePatternSheet",
                    "isOptional": false
                },
                "strength": {
                    "type": "ig.RainStrength",
                    "isOptional": false
                },
                "entries": {
                    "type": "ig.Rain.Entry[]",
                    "isOptional": false
                },
                "timer": {
                    "type": "number",
                    "isOptional": false
                },
                "dropTimer": {
                    "type": "number",
                    "isOptional": false
                },
                "updateSound": {
                    "type": "number",
                    "isOptional": false
                },
                "currentSound": {
                    "type": "ig.Sound",
                    "isOptional": true
                },
                "soundHandle": {
                    "type": "ig.SoundHandle",
                    "isOptional": true
                }
            },
            "functions": {
                "setRain": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "strength",
                            "type": "ig.RainStrength",
                            "isOptional": false
                        },
                        {
                            "name": "resetEntries",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "clearRain": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "resetEntries",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "onReset": {
                    "returnType": "void",
                    "args": []
                },
                "update": {
                    "returnType": "void",
                    "args": []
                },
                "spawnRain": {
                    "returnType": "void",
                    "args": []
                },
                "spawnRainDrop": {
                    "returnType": "void",
                    "args": []
                },
                "moveRain": {
                    "returnType": "void",
                    "args": []
                },
                "draw": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "Rain",
                    "args": []
                }
            },
            "parents": [
                "ig.Class"
            ]
        }
    },
    "impact.feature.weather.weather": {
        "ig.WeatherType.Particle": {
            "fields": {
                "type": {
                    "type": "string",
                    "isOptional": false
                },
                "quantity": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.WeatherType": {
            "fields": {
                "lightMapDarkness": {
                    "type": "number",
                    "isOptional": true
                },
                "particles": {
                    "type": "WeatherType.Particle[]",
                    "isOptional": true
                },
                "glowColor": {
                    "type": "string",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "ig": {
            "fields": {
                "WEATHER_TYPES": {
                    "type": "Record<string, ig.WeatherType>"
                },
                "WeatherInstance": {
                    "type": "WeatherInstanceConstructor"
                },
                "Weather": {
                    "type": "WeatherConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.WeatherInstance": {
            "fields": {
                "name": {
                    "type": "string",
                    "isOptional": false
                },
                "config": {
                    "type": "ig.WeatherType",
                    "isOptional": false
                },
                "particleSpawners": {
                    "type": "ig.EnvParticleSpawner[]",
                    "isOptional": false
                }
            },
            "functions": {
                "onCacheCleared": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "WeatherInstance",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Cacheable"
            ]
        },
        "ig.Weather": {
            "fields": {},
            "functions": {
                "onLevelLoaded": {
                    "returnType": "void",
                    "args": []
                },
                "onDeferredUpdate": {
                    "returnType": "void",
                    "args": []
                },
                "onMidDraw": {
                    "returnType": "void",
                    "args": []
                },
                "onReset": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "Weather",
                    "args": []
                }
            },
            "parents": [
                "ig.GameAddon"
            ]
        }
    },
    "impact.feature.effect.fx.fx-circle": {},
    "impact.feature.weather.weather-steps": {},
    "impact.feature.slow-motion.slow-motion-steps": {},
    "impact.feature.screen-blur.screen-blur-steps": {},
    "impact.feature.screen-blur.screen-blur": {
        "ig.ScreenBlur": {
            "fields": {},
            "functions": {
                "onPostUpdate": {
                    "returnType": "void",
                    "args": []
                },
                "onPreDraw": {
                    "returnType": "void",
                    "args": []
                },
                "onPostDraw": {
                    "returnType": "void",
                    "args": []
                },
                "onReset": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "ScreenBlur",
                    "args": []
                }
            },
            "parents": [
                "ig.GameAddon"
            ]
        },
        "ig": {
            "fields": {
                "ScreenBlur": {
                    "type": "ScreenBlurConstructor"
                },
                "screenBlur": {
                    "type": "ScreenBlur"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "impact.feature.rumble.rumble-steps": {},
    "impact.feature.parallax.parallax-steps": {},
    "impact.feature.overlay.overlay-steps": {},
    "impact.feature.navigation.navigation-steps": {},
    "impact.feature.navigation.navigation": {
        "ig.NavDodgeType": {
            "fields": {
                "deltas": {
                    "type": "number[]",
                    "isOptional": false
                },
                "start": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.NAV_DODGE_TYPE": {
            "fields": {
                "NEUTRAL": {
                    "type": "ig.NavDodgeType",
                    "isOptional": false
                },
                "PASSIVE": {
                    "type": "ig.NavDodgeType",
                    "isOptional": false
                },
                "GET_AWAY": {
                    "type": "ig.NavDodgeType",
                    "isOptional": false
                },
                "AGGRESSIVE": {
                    "type": "ig.NavDodgeType",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig": {
            "fields": {
                "NAV_DODGE_TYPE": {
                    "type": "NAV_DODGE_TYPE"
                },
                "NavPath": {
                    "type": "NavPathConstructor"
                },
                "NAV_CLOSE_POINT_SEARCH": {
                    "type": "NAV_CLOSE_POINT_SERCH"
                },
                "NavBlocker": {
                    "type": "NavBlockerConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.NavPath.Options": {
            "fields": {
                "posOffset": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.NavPath.Path": {
            "fields": {
                "nodes": {
                    "type": "ig.NavPath.Node[]",
                    "isOptional": false
                },
                "distance": {
                    "type": "number",
                    "isOptional": false
                },
                "multiLevel": {
                    "type": "number",
                    "isOptional": false
                },
                "jumpCount": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.NavPath.Node": {
            "fields": {
                "node": {
                    "type": "ig.PathNodeConnect",
                    "isOptional": false
                },
                "connection": {
                    "type": "ig.PathNodeConnect",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.NavPath": {
            "fields": {
                "mapVersion": {
                    "type": "number",
                    "isOptional": false
                },
                "searcher": {
                    "type": "sc.ActorEntity",
                    "isOptional": false
                },
                "startRelativeVel": {
                    "type": "number",
                    "isOptional": false
                },
                "targetEntity": {
                    "type": "ig.Entity",
                    "isOptional": false
                },
                "targetPos": {
                    "type": "Vec3",
                    "isOptional": false
                },
                "retargetPos": {
                    "type": "Vec3",
                    "isOptional": false
                },
                "retargetNode": {
                    "type": "number",
                    "isOptional": true
                },
                "maxDistance": {
                    "type": "number",
                    "isOptional": false
                },
                "precise": {
                    "type": "boolean",
                    "isOptional": false
                },
                "options": {
                    "type": "ig.NavPath.Options",
                    "isOptional": true
                },
                "path": {
                    "type": "Nullable<ig.NavPath.Path>",
                    "isOptional": false
                },
                "pathIdx": {
                    "type": "number",
                    "isOptional": false
                },
                "pathLength": {
                    "type": "number",
                    "isOptional": false
                },
                "nextNodeData": {
                    "type": "{ startPos: Vec2; endPos: Vec2; jump: boolean; height: number }",
                    "isOptional": false
                },
                "overNodePass": {
                    "type": "boolean",
                    "isOptional": false
                },
                "pathComplete": {
                    "type": "boolean",
                    "isOptional": false
                },
                "triedNodePassChange": {
                    "type": "boolean",
                    "isOptional": false
                },
                "triedRandom": {
                    "type": "number",
                    "isOptional": false
                },
                "doBackUp": {
                    "type": "boolean",
                    "isOptional": false
                },
                "triedBackUp": {
                    "type": "number",
                    "isOptional": false
                },
                "avoidTarget": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "avoidTarget2": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "firstMovement": {
                    "type": "boolean",
                    "isOptional": false
                },
                "targetDir": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "targetDist": {
                    "type": "number",
                    "isOptional": false
                },
                "failCount": {
                    "type": "number",
                    "isOptional": false
                },
                "wrongNodeTimer": {
                    "type": "number",
                    "isOptional": false
                },
                "lastSideWayDir": {
                    "type": "Vec2",
                    "isOptional": false
                }
            },
            "functions": {
                "toEntity": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "targetEntity",
                            "type": "ig.Entity",
                            "isOptional": false
                        },
                        {
                            "name": "maxDistance",
                            "type": "number",
                            "isOptional": true
                        },
                        {
                            "name": "options",
                            "type": "ig.NavPath.Options",
                            "isOptional": true
                        },
                        {
                            "name": "precise",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "toPoint": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "pos",
                            "type": "Vec2",
                            "isOptional": false
                        },
                        {
                            "name": "maxDistance",
                            "type": "number",
                            "isOptional": true
                        },
                        {
                            "name": "precise",
                            "type": "number",
                            "isOptional": true
                        }
                    ]
                },
                "redoPathDeferred": {
                    "returnType": "void",
                    "args": []
                },
                "sideways": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "actor",
                            "type": "ig.ActorEntity",
                            "isOptional": false
                        },
                        {
                            "name": "distance",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "variance",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "throwing",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "keepDir",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "forceMinDistance",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "forceMaxDistance",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "precise",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "dodge": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "actor",
                            "type": "ig.ActorEntity",
                            "isOptional": false
                        },
                        {
                            "name": "minDist",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "dodgeType",
                            "type": "ig.NAV_DODGE_TYPE",
                            "isOptional": true
                        }
                    ]
                },
                "moveRange": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "actor",
                            "type": "ig.ActorEntity",
                            "isOptional": false
                        },
                        {
                            "name": "b_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "e_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "f_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "throwing",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "i_",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "runAway": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "actor",
                            "type": "ig.ActorEntity",
                            "isOptional": false
                        },
                        {
                            "name": "minDist",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "throwing",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "runToFace": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "actor",
                            "type": "ig.ActorEntity",
                            "isOptional": false
                        },
                        {
                            "name": "faceRotate",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "minDist",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "maxDist",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "throing",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "_moveCircle": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "targetNode",
                            "type": "ig.MAP.Navigation",
                            "isOptional": false
                        },
                        {
                            "name": "point1",
                            "type": "Vec2",
                            "isOptional": false
                        },
                        {
                            "name": "point2",
                            "type": "Vec2",
                            "isOptional": false
                        },
                        {
                            "name": "distance",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "throwing",
                            "type": "boolean",
                            "isOptional": false
                        },
                        {
                            "name": "minLength",
                            "type": "number",
                            "isOptional": true
                        },
                        {
                            "name": "maxLength",
                            "type": "number",
                            "isOptional": true
                        },
                        {
                            "name": "keepDirection",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "precise",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "getDistance": {
                    "returnType": "number",
                    "args": []
                },
                "getJumpCount": {
                    "returnType": "number",
                    "args": []
                },
                "isDestReachable": {
                    "returnType": "boolean",
                    "args": []
                },
                "redoPath": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "pathNode",
                            "type": "ig.PathNode",
                            "isOptional": false
                        },
                        {
                            "name": "pos",
                            "type": "Vec3",
                            "isOptional": false
                        }
                    ]
                },
                "interrupt": {
                    "returnType": "void",
                    "args": []
                },
                "isCurrentNodeInvalid": {
                    "returnType": "boolean",
                    "args": []
                },
                "moveEntity": {
                    "returnType": "boolean",
                    "args": []
                },
                "avoidEntities": {
                    "returnType": "void",
                    "args": []
                },
                "runPath": {
                    "returnType": "void",
                    "args": []
                },
                "selectNextTargetPos": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "NavPath",
                    "args": [
                        {
                            "name": "searcher",
                            "type": "sc.ActorEntity",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "ig.NavPath.nextNodeData": {
            "fields": {
                "startPos": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "endPos": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "jump": {
                    "type": "boolean",
                    "isOptional": false
                },
                "height": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.NAV_CLOSE_POINT_SERCH": {
            "fields": {},
            "functions": {
                "RANDOM": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "vec",
                            "type": "Vec2",
                            "isOptional": false
                        }
                    ]
                },
                "BEHIND": {
                    "returnType": "void",
                    "args": []
                },
                "FRONT": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "vec",
                            "type": "Vec2",
                            "isOptional": false
                        }
                    ]
                },
                "BEHIND_FACE": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "vec",
                            "type": "Vec2",
                            "isOptional": false
                        },
                        {
                            "name": "target",
                            "type": "ig.ActorEntity",
                            "isOptional": false
                        }
                    ]
                },
                "FRONT_FACE": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "vec",
                            "type": "Vec2",
                            "isOptional": false
                        },
                        {
                            "name": "target",
                            "type": "ig.ActorEntity",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": []
        },
        "ig.NavBlocker": {
            "fields": {
                "entity": {
                    "type": "ig.Entity",
                    "isOptional": false
                },
                "pos": {
                    "type": "Vec3",
                    "isOptional": false
                },
                "size": {
                    "type": "Vec3",
                    "isOptional": false
                },
                "blockType": {
                    "type": "ig.NAV_BLOCKER_TYPE",
                    "isOptional": false
                }
            },
            "functions": {
                "update": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "blockType",
                            "type": "ig.NAV_BLOCKER_TYPE",
                            "isOptional": true
                        }
                    ]
                },
                "embedInNavMap": {
                    "returnType": "void",
                    "args": []
                },
                "removeFromNavMap": {
                    "returnType": "void",
                    "args": []
                },
                "remove": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "NavBlocker",
                    "args": [
                        {
                            "name": "entity",
                            "type": "ig.Entity",
                            "isOptional": false
                        },
                        {
                            "name": "blockType",
                            "type": "ig.NAV_BLOCKER_TYPE",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class"
            ]
        }
    },
    "impact.feature.map-sounds.map-sounds-steps": {},
    "impact.feature.map-image.map-image-steps": {},
    "impact.feature.map-content.map-content-steps": {},
    "impact.feature.light.light-steps": {},
    "impact.feature.influencer.influencer-steps": {},
    "impact.feature.event-sheet.event-sheet": {},
    "impact.feature.env-particles.env-particles-steps": {},
    "impact.feature.effect.fx.fx-wipe": {},
    "impact.feature.effect.fx.fx-rhombus": {},
    "impact.feature.effect.fx.fx-line": {
        "ig.EFFECT_ENTRY.COPY_SPRITE": {
            "fields": {
                "color": {
                    "type": "string",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": [
                "ig.EffectStepBase"
            ]
        },
        "ig.EFFECT_ENTRY.void": {
            "fields": {},
            "functions": {
                "init": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "type",
                            "type": "unknown",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "ig.EFFECT_ENTRY.EffectSettings.COPY_SPRITE",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": []
        },
        "ig.EFFECT_ENTRY": {
            "fields": {
                "COPY_SPRITE": {
                    "type": "COPY_SPRITE_CONSTRUCTOR"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "impact.feature.effect.fx.fx-light": {},
    "impact.feature.effect.fx.fx-homing": {},
    "impact.feature.effect.fx.fx-color": {},
    "impact.feature.effect.fx.fx-box": {},
    "impact.feature.effect.fx.fx-basic": {
        "ig.EFFECT_ENTRY.PLAY_ANIM_RANGE.Settings": {
            "fields": {
                "radius": {
                    "type": "number",
                    "isOptional": true
                },
                "useTargetAngle": {
                    "type": "boolean",
                    "isOptional": true
                },
                "numParticles": {
                    "type": "number",
                    "isOptional": true
                },
                "duration": {
                    "type": "number",
                    "isOptional": true
                },
                "offset": {
                    "type": "Vec3",
                    "isOptional": true
                },
                "alongY": {
                    "type": "boolean",
                    "isOptional": true
                },
                "moveZDist": {
                    "type": "number",
                    "isOptional": true
                },
                "keySpline": {
                    "type": "keyof typeof KEY_SPLINES",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": [
                "ig.EffectStepBase.Settings"
            ]
        },
        "ig.EFFECT_ENTRY.PLAY_ANIM_RANGE": {
            "fields": {
                "particleData": {
                    "type": "ig.ParticleData",
                    "isOptional": false
                },
                "offset": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "radius": {
                    "type": "number",
                    "isOptional": false
                },
                "duration": {
                    "type": "number",
                    "isOptional": false
                },
                "numParticles": {
                    "type": "number",
                    "isOptional": false
                },
                "useTargetAngle": {
                    "type": "boolean",
                    "isOptional": false
                },
                "_wm": {
                    "type": "ig.EffectConfig",
                    "isOptional": false
                },
                "particles": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "getDuration": {
                    "returnType": "number",
                    "args": []
                },
                "start": {
                    "returnType": "{ duration: number; particles: number }",
                    "args": []
                },
                "update": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "entity",
                            "type": "ig.ENTITY.Effect",
                            "isOptional": false
                        },
                        {
                            "name": "lastParticle",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "currentParticle",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "PLAY_ANIM_RANGE",
                    "args": [
                        {
                            "name": "sheet",
                            "type": "ig.EffectSheet",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "ig.EffectStepBase.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.EffectStepBase"
            ]
        },
        "ig.EFFECT_ENTRY": {
            "fields": {
                "PLAY_ANIM_RANGE": {
                    "type": "PLAY_ANIM_RANGEConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "impact.feature.effect.effect-steps": {},
    "impact.feature.dream-fx.dream-fx-steps": {},
    "impact.feature.camera.camera-steps": {},
    "impact.feature.bgm.bgm-steps": {},
    "game.feature.tutorial.tutorial-steps": {},
    "game.feature.trade.trade-steps": {},
    "game.feature.timers.timers-steps": {},
    "game.feature.puzzle.puzzle-steps": {},
    "game.feature.player.crosshair-steps": {},
    "game.feature.party.party-steps": {},
    "game.feature.npc.npc-steps": {
        "ig.EVENT_STEP.DO_THE_SHAKE": {
            "fields": {
                "person": {
                    "type": "string",
                    "isOptional": false
                },
                "message": {
                    "type": "string",
                    "isOptional": false
                },
                "charExpression": {
                    "type": "sc.CharacterExpression",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": [
                "ig.EventStepBase"
            ]
        },
        "ig.EVENT_STEP": {
            "fields": {
                "DO_THE_SHAKE": {
                    "type": "DO_THE_SHAKE_CONSTRUCTOR"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.new-game.new-game-steps": {},
    "game.feature.msg.gui.dream-msg": {},
    "game.feature.model.model-steps": {
        "ig.EVENT_STEP.SET_PLAYER_CORE": {
            "fields": {
                "core": {
                    "type": "sc.PLAYER_CORE",
                    "isOptional": false
                },
                "value": {
                    "type": "any",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "SET_PLAYER_CORE",
                    "args": [
                        {
                            "name": "settings",
                            "type": "{ core: sc.PLAYER_CORE, value: any }",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.EventStepBase"
            ]
        },
        "ig.EVENT_STEP": {
            "fields": {
                "SET_PLAYER_CORE": {
                    "type": "SET_PLAYER_COREConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.menu.menu-steps": {
        "ig.EVENT_STEP.OPEN_SHOP.Settings": {
            "fields": {
                "shop": {
                    "type": "string",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.EVENT_STEP.OPEN_SHOP": {
            "fields": {
                "shop": {
                    "type": "string",
                    "isOptional": false
                }
            },
            "functions": {
                "start": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "OPEN_SHOP",
                    "args": [
                        {
                            "name": "settings",
                            "type": "OPEN_SHOP.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.EventStepBase"
            ]
        },
        "ig.EVENT_STEP": {
            "fields": {
                "OPEN_SHOP": {
                    "type": "OPEN_SHOP_CONSTRUCTOR"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.map-content.map-content-steps": {},
    "game.feature.gui.widget.timer-gui": {
        "ig.GUI.TimerGui": {
            "fields": {},
            "functions": {},
            "parents": [
                "sc.SlickBoxRawGui"
            ]
        },
        "ig.GUI": {
            "fields": {
                "TimerGui": {
                    "type": "GUI.TimerGuiConstructor",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.common-event.common-event-steps": {},
    "game.feature.combat.enemy-steps": {},
    "game.feature.combat.combat-event-steps": {},
    "game.feature.combat.combat-action-steps": {
        "ig.ACTION_STEP.SET_TEMP_TARGET.Settings": {
            "fields": {
                "kind": {
                    "type": "| 'PLAYER'\n            | 'PARTY_0'\n            | 'PARTY_1'\n            | 'COLLAB_ENTITY'\n            | 'COLLAB_LABELED_ENTITY'\n            | 'CLOSEST_ENEMY'\n            | 'GUARDED_ATTACKER'\n            | 'FIRST_HIT'\n            | 'PROXY_OWNER'\n            | 'ENEMY_OWNER'\n            | 'ENEMY_OWNER_ACTION_PROXY'\n            | 'PROXY_SRC'\n            | 'ACTION_PROXY'\n            | 'PROXY'\n            | 'PROXY_OWNER_ACTION_PROXY'\n            | 'PROXY_SRC_ACTION_PROXY'\n            | 'NAMED_ENTITY'\n            | 'ATTRIB_ENTITY'\n            | 'THREAT'\n            | 'ENTITY_VIA_ID'\n            | 'PART_TARGET_ROOT'",
                    "isOptional": false
                },
                "key": {
                    "type": "string",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ACTION_STEP.SET_TEMP_TARGET": {
            "fields": {
                "kind": {
                    "type": "SET_TEMP_TARGET.TargetFunction",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "SET_TEMP_TARGET",
                    "args": [
                        {
                            "name": "settings",
                            "type": "SET_TEMP_TARGET.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.ActionStepBase"
            ]
        },
        "ig.ACTION_STEP": {
            "fields": {
                "SET_TEMP_TARGET": {
                    "type": "SET_TEMP_TARGET_CONSTRUCTOR"
                },
                "SET_CLOSE_TEMP_TARGET": {
                    "type": "SET_CLOSE_TEMP_TARGET_CONSTRUCTOR"
                },
                "ADD_ACTION_BUFF": {
                    "type": "ADD_ACTION_BUFF_CONSTRUCTOR"
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ACTION_STEP.SET_CLOSE_TEMP_TARGET.Settings": {
            "fields": {
                "searchType": {
                    "type": "string",
                    "isOptional": true
                },
                "distance": {
                    "type": "number",
                    "isOptional": true
                },
                "ignoreCurrentTarget": {
                    "type": "boolean",
                    "isOptional": true
                },
                "prevHitBehavior": {
                    "type": "string",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ACTION_STEP.SET_CLOSE_TEMP_TARGET.SearchType": {
            "fields": {
                "angle": {
                    "type": "number",
                    "isOptional": false
                },
                "radius": {
                    "type": "number",
                    "isOptional": false
                },
                "facePriority": {
                    "type": "boolean",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ACTION_STEP.SET_CLOSE_TEMP_TARGET": {
            "fields": {
                "searchType": {
                    "type": "SET_CLOSE_TEMP_TARGET.SearchType",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "SET_CLOSE_TEMP_TARGET",
                    "args": [
                        {
                            "name": "settings",
                            "type": "SET_CLOSE_TEMP_TARGET.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.ActionStepBase"
            ]
        },
        "ig.ACTION_STEP.ADD_ACTION_BUFF.Settings": {
            "fields": {
                "target": {
                    "type": "string",
                    "isOptional": false
                },
                "stats": {
                    "type": "string[]",
                    "isOptional": false
                },
                "name": {
                    "type": "string",
                    "isOptional": true
                },
                "hacked": {
                    "type": "boolean",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ACTION_STEP.ADD_ACTION_BUFF": {
            "fields": {
                "target": {
                    "type": "TargetFunction",
                    "isOptional": false
                },
                "stats": {
                    "type": "string[]",
                    "isOptional": false
                },
                "name": {
                    "type": "string",
                    "isOptional": true
                },
                "hacked": {
                    "type": "boolean",
                    "isOptional": true
                }
            },
            "functions": {
                "init": {
                    "returnType": "ADD_ACTION_BUFF",
                    "args": [
                        {
                            "name": "settings",
                            "type": "ADD_ACTION_BUFF.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.ActionStepBase"
            ]
        }
    },
    "game.feature.combat.combat-force": {
        "sc.CombatForce": {
            "fields": {
                "combatant": {
                    "type": "sc.BasicCombatant",
                    "isOptional": false
                },
                "combatantRoot": {
                    "type": "ig.ENTITY.Combatant",
                    "isOptional": false
                }
            },
            "functions": {
                "update": {
                    "returnType": "boolean",
                    "args": []
                },
                "isRepeating": {
                    "returnType": "boolean",
                    "args": []
                },
                "onEnd": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "CombatForce",
                    "args": [
                        {
                            "name": "combatant",
                            "type": "sc.BasicCombatant",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class",
                "sc.GetCombatant",
                "sc.GetCombatantRoot",
                "sc.Combat.ActionAttached"
            ]
        },
        "sc": {
            "fields": {
                "CombatForce": {
                    "type": "CombatForceConstructor"
                },
                "CircleHitForce": {
                    "type": "CircleHitForceConstructor"
                },
                "DirectHitForce": {
                    "type": "DirectHitForceConstructor"
                },
                "SpawnHelper": {
                    "type": "SpawnHelperConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.CircleHitForce": {
            "fields": {},
            "functions": {
                "getHitDir": {
                    "returnType": "Vec2",
                    "args": [
                        {
                            "name": "entity",
                            "type": "ig.Entity",
                            "isOptional": false
                        },
                        {
                            "name": "dest",
                            "type": "Vec2",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "sc.CombatForce"
            ]
        },
        "sc.DirectHitForce": {
            "fields": {},
            "functions": {
                "getHitDir": {
                    "returnType": "Vec2",
                    "args": [
                        {
                            "name": "entity",
                            "type": "ig.Entity",
                            "isOptional": false
                        },
                        {
                            "name": "dest",
                            "type": "Vec2",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "sc.CombatForce"
            ]
        },
        "sc.SpawnHelper.Settings": {
            "fields": {
                "align": {
                    "type": "keyof typeof ig.ENTITY_ALIGN",
                    "isOptional": true
                },
                "offset": {
                    "type": "Vec3",
                    "isOptional": true
                },
                "centralAngle": {
                    "type": "number",
                    "isOptional": true
                },
                "startAngle": {
                    "type": "number",
                    "isOptional": true
                },
                "startDist": {
                    "type": "number",
                    "isOptional": true
                },
                "startDistAdd": {
                    "type": "number",
                    "isOptional": true
                },
                "angleVary": {
                    "type": "number",
                    "isOptional": true
                },
                "count": {
                    "type": "number",
                    "isOptional": true
                },
                "duration": {
                    "type": "ig.Event.NumberExpression",
                    "isOptional": true
                },
                "clockwise": {
                    "type": "boolean",
                    "isOptional": true
                },
                "flipLeftFace": {
                    "type": "boolean",
                    "isOptional": true
                },
                "random": {
                    "type": "boolean",
                    "isOptional": true
                },
                "dir": {
                    "type": "Vec2",
                    "isOptional": true
                },
                "aimAtTarget": {
                    "type": "boolean",
                    "isOptional": true
                },
                "yScale": {
                    "type": "number",
                    "isOptional": true
                },
                "offsetArea": {
                    "type": "Vec2",
                    "isOptional": true
                },
                "uniformDir": {
                    "type": "number",
                    "isOptional": true
                },
                "delay": {
                    "type": "number",
                    "isOptional": true
                },
                "repeat": {
                    "type": "boolean",
                    "isOptional": true
                },
                "maxGroundDistance": {
                    "type": "number",
                    "isOptional": true
                },
                "terrainFilter": {
                    "type": "(keyof typeof ig.TERRAIN)[]",
                    "isOptional": true
                },
                "limitRangeOnColl": {
                    "type": "number",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.SpawnHelper.Data": {
            "fields": {
                "spawned": {
                    "type": "number",
                    "isOptional": false
                },
                "count": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.SpawnHelper": {
            "fields": {
                "align": {
                    "type": "ig.ENTITY_ALIGN",
                    "isOptional": false
                },
                "offset": {
                    "type": "Vec3",
                    "isOptional": true
                },
                "centralAngle": {
                    "type": "number",
                    "isOptional": false
                },
                "startAngle": {
                    "type": "number",
                    "isOptional": false
                },
                "angleVary": {
                    "type": "number",
                    "isOptional": false
                },
                "count": {
                    "type": "number",
                    "isOptional": false
                },
                "duration": {
                    "type": "ig.Event.NumberExpression",
                    "isOptional": false
                },
                "clockwise": {
                    "type": "boolean",
                    "isOptional": false
                },
                "random": {
                    "type": "boolean",
                    "isOptional": false
                },
                "flipLeftFace": {
                    "type": "number",
                    "isOptional": false
                },
                "dir": {
                    "type": "Vec2",
                    "isOptional": true
                },
                "offsetArea": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "circularArea": {
                    "type": "boolean",
                    "isOptional": false
                },
                "callback": {
                    "type": "sc.SpawnHelper.Callback",
                    "isOptional": false
                },
                "maxGroundDistance": {
                    "type": "number",
                    "isOptional": false
                },
                "uniformDir": {
                    "type": "number",
                    "isOptional": false
                },
                "delay": {
                    "type": "number",
                    "isOptional": false
                },
                "yScale": {
                    "type": "number",
                    "isOptional": false
                },
                "repeat": {
                    "type": "boolean",
                    "isOptional": false
                },
                "posEntity": {
                    "type": "ig.Entity",
                    "isOptional": true
                },
                "limitRangeOnColl": {
                    "type": "number",
                    "isOptional": false
                },
                "terrainFilter": {
                    "type": "ig.TERRAIN[]",
                    "isOptional": true
                }
            },
            "functions": {
                "initData": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "data",
                            "type": "sc.SpawnHelper.Data",
                            "isOptional": false
                        }
                    ]
                },
                "spawn": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "entity",
                            "type": "ig.ActorEntity",
                            "isOptional": false
                        },
                        {
                            "name": "time",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "data",
                            "type": "sc.SpawnHelper.Data",
                            "isOptional": false
                        },
                        {
                            "name": "width",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "height",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "_limitRange": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "entity",
                            "type": "ig.ActorEntity",
                            "isOptional": false
                        },
                        {
                            "name": "vec",
                            "type": "Vec2",
                            "isOptional": false
                        },
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "_getPos": {
                    "returnType": "Vec3",
                    "args": [
                        {
                            "name": "entity",
                            "type": "ig.ActorEntity",
                            "isOptional": false
                        },
                        {
                            "name": "offsetY",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "SpawnHelper",
                    "args": [
                        {
                            "name": "settings",
                            "type": "sc.SpawnHelper.Settings",
                            "isOptional": false
                        },
                        {
                            "name": "callback",
                            "type": "sc.SpawnHelper.Callback",
                            "isOptional": false
                        },
                        {
                            "name": "posEntity",
                            "type": "ig.Entity",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class"
            ]
        }
    },
    "game.feature.combat.combat-sweep": {},
    "game.feature.base.event-steps": {
        "ig.EVENT_STEP.PLAY_SOUND": {
            "fields": {
                "sound": {
                    "type": "string",
                    "isOptional": false
                },
                "position": {
                    "type": "Vec2",
                    "isOptional": true
                },
                "loop": {
                    "type": "boolean",
                    "isOptional": true
                },
                "settings": {
                    "type": "{ offset: number; startTime: number; speed: number }",
                    "isOptional": false
                },
                "name": {
                    "type": "string",
                    "isOptional": true
                },
                "speed": {
                    "type": "number",
                    "isOptional": true
                },
                "volume": {
                    "type": "number",
                    "isOptional": true
                },
                "variance": {
                    "type": "number",
                    "isOptional": true
                },
                "offset": {
                    "type": "number",
                    "isOptional": true
                },
                "startTime": {
                    "type": "number",
                    "isOptional": true
                }
            },
            "functions": {
                "init": {
                    "returnType": "PLAY_SOUND",
                    "args": [
                        {
                            "name": "settings",
                            "type": "{\n        sound: string;\n        volume?: number;\n        variance?: number;\n        position?: Vec2;\n        name?: string;\n        loop?: boolean;\n        offset?: number;\n        startTime?: number;\n        speed?: number;\n      }",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.EventStepBase"
            ]
        },
        "ig.EVENT_STEP.PLAY_SOUND.settings": {
            "fields": {
                "offset": {
                    "type": "number",
                    "isOptional": false
                },
                "startTime": {
                    "type": "number",
                    "isOptional": false
                },
                "speed": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.EVENT_STEP": {
            "fields": {
                "PLAY_SOUND": {
                    "type": "PLAY_SOUNDConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "impact.feature.base.event-steps": {
        "ig.EVENT_STEP.TELEPORT": {
            "fields": {
                "map": {
                    "type": "string",
                    "isOptional": false
                },
                "marker": {
                    "type": "string",
                    "isOptional": true
                }
            },
            "functions": {
                "init": {
                    "returnType": "TELEPORT",
                    "args": [
                        {
                            "name": "settings",
                            "type": "{ map: string; marker?: string }",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.EventStepBase"
            ]
        },
        "ig.EVENT_STEP": {
            "fields": {
                "TELEPORT": {
                    "type": "TELEPORTConstructor"
                },
                "CHANGE_VAR_STRING": {
                    "type": "CHANGE_VAR_STRING_CONSTRUCTOR"
                },
                "CHANGE_VAR_BOOL": {
                    "type": "CHANGE_VAR_BOOL_CONSTRUCTOR"
                },
                "CHANGE_VAR_NUMBER": {
                    "type": "CHANGE_VAR_NUMBER_CONSTRUCTOR"
                },
                "CHANGE_VAR_VEC2": {
                    "type": "CHANGE_VAR_VEC2_CONSTRUCTOR"
                },
                "CHANGE_VAR_VEC3": {
                    "type": "CHANGE_VAR_VEC3_CONSTRUCTOR"
                },
                "CHANGE_VAR_LANG": {
                    "type": "CHANGE_VAR_LANG_CONSTRUCTOR"
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.EVENT_STEP.ChangeVarBase.Settings": {
            "fields": {
                "varName": {
                    "type": "ig.Event.VarExpression<T>",
                    "isOptional": false
                },
                "changeType": {
                    "type": "ChangeVarBase.ChangeType",
                    "isOptional": false
                },
                "value": {
                    "type": "T",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.EVENT_STEP.ChangeVarBase": {
            "fields": {
                "varName": {
                    "type": "ig.Event.VarExpression<T>",
                    "isOptional": false
                },
                "changeType": {
                    "type": "ChangeVarBase.ChangeType",
                    "isOptional": false
                },
                "value": {
                    "type": "T",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.EVENT_STEP.Instance": {
            "fields": {},
            "functions": {
                "init": {
                    "returnType": "Instance",
                    "args": [
                        {
                            "name": "settings",
                            "type": "ChangeVarBase.Settings<Type>",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": []
        },
        "ig.EVENT_STEP.CHANGE_VAR_STRING": {
            "fields": {},
            "functions": {},
            "parents": [
                "ig.EventStepBase",
                "ChangeVarBase<string>",
                "ChangeVarBaseConstructor<CHANGE_VAR_STRING, string>"
            ]
        },
        "ig.EVENT_STEP.CHANGE_VAR_BOOL": {
            "fields": {},
            "functions": {},
            "parents": [
                "ig.EventStepBase",
                "ChangeVarBase<boolean>",
                "ChangeVarBaseConstructor<CHANGE_VAR_BOOL, boolean>"
            ]
        },
        "ig.EVENT_STEP.CHANGE_VAR_NUMBER": {
            "fields": {},
            "functions": {},
            "parents": [
                "ig.EventStepBase",
                "ChangeVarBase<number>",
                "ChangeVarBaseConstructor<CHANGE_VAR_NUMBER, number>"
            ]
        },
        "ig.EVENT_STEP.CHANGE_VAR_VEC2": {
            "fields": {},
            "functions": {},
            "parents": [
                "ig.EventStepBase",
                "ChangeVarBase<Vec2>",
                "ChangeVarBaseConstructor<CHANGE_VAR_VEC2, Vec2>"
            ]
        },
        "ig.EVENT_STEP.CHANGE_VAR_VEC3": {
            "fields": {},
            "functions": {},
            "parents": [
                "ig.EventStepBase",
                "ChangeVarBase<Vec3>",
                "ChangeVarBaseConstructor<CHANGE_VAR_VEC3, Vec3>"
            ]
        },
        "ig.EVENT_STEP.CHANGE_VAR_LANG": {
            "fields": {},
            "functions": {},
            "parents": [
                "ig.EventStepBase",
                "ChangeVarBase<ig.LangLabel.Data>",
                "ChangeVarBaseConstructor<CHANGE_VAR_LANG, ig.LangLabel.Data>"
            ]
        }
    },
    "game.feature.base.action-steps": {},
    "game.feature.auto-control.auto-control-steps": {},
    "game.feature.auto-control.auto-control": {
        "sc.AutoControl": {
            "fields": {},
            "functions": {
                "get": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "type",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "isActive": {
                    "returnType": "boolean",
                    "args": []
                },
                "setActive": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "value",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "AutoControl",
                    "args": []
                }
            },
            "parents": [
                "ig.GameAddon"
            ]
        },
        "sc": {
            "fields": {
                "AutoControl": {
                    "type": "AutoControlConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.arena.arena-steps": {},
    "game.feature.arena.arena-loadable": {},
    "game.feature.ar.ar-steps": {
        "ig.EVENT_STEP.SHOW_AR_MSG.Settings": {
            "fields": {
                "entity": {
                    "type": "{ player?: boolean }",
                    "isOptional": false
                },
                "text": {
                    "type": "ig.LangLabel",
                    "isOptional": false
                },
                "time": {
                    "type": "number",
                    "isOptional": false
                },
                "mode": {
                    "type": "sc.AR_BOX_MODE",
                    "isOptional": false
                },
                "color": {
                    "type": "keyof sc.AR_COLOR",
                    "isOptional": false
                },
                "hideOutsideOfScreen": {
                    "type": "boolean",
                    "isOptional": false
                },
                "partName": {
                    "type": "string",
                    "isOptional": true
                },
                "varFill": {
                    "type": "string",
                    "isOptional": true
                },
                "varFillMax": {
                    "type": "number",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.EVENT_STEP.SHOW_AR_MSG.Settings.entity": {
            "fields": {
                "player": {
                    "type": "boolean",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.EVENT_STEP.SHOW_AR_MSG": {
            "fields": {
                "entity": {
                    "type": "ig.EVENT_STEP.SHOW_AR_MSG.Settings['entity']",
                    "isOptional": false
                },
                "text": {
                    "type": "ig.LangLabel",
                    "isOptional": false
                },
                "time": {
                    "type": "number",
                    "isOptional": false
                },
                "mode": {
                    "type": "boolean",
                    "isOptional": false
                },
                "color": {
                    "type": "string",
                    "isOptional": false
                },
                "partName": {
                    "type": "string",
                    "isOptional": true
                },
                "varFill": {
                    "type": "string",
                    "isOptional": true
                },
                "varFillMax": {
                    "type": "number",
                    "isOptional": true
                }
            },
            "functions": {
                "init": {
                    "returnType": "SHOW_AR_MSG",
                    "args": [
                        {
                            "name": "settings",
                            "type": "ig.EVENT_STEP.SHOW_AR_MSG.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.EventStepBase"
            ]
        },
        "ig.EVENT_STEP": {
            "fields": {
                "SHOW_AR_MSG": {
                    "type": "SHOW_AR_MSGConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.ar.gui.ar-box": {
        "sc.AR_COLOR": {
            "fields": {
                "GREEN": {
                    "type": "{ rgb: string, yOff: number }",
                    "isOptional": false
                },
                "RED": {
                    "type": "{ rgb: string, yOff: number }",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.AR_COLOR.GREEN": {
            "fields": {
                "rgb": {
                    "type": "string",
                    "isOptional": false
                },
                "yOff": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.AR_COLOR.RED": {
            "fields": {
                "rgb": {
                    "type": "string",
                    "isOptional": false
                },
                "yOff": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.achievements.stat-steps": {},
    "impact.feature.gui.gui-steps": {},
    "impact.feature.event-sheet.event-sheet-steps": {},
    "impact.feature.base.action-steps": {
        "ig.ACTION_STEP.SET_SHADOW.Settings": {
            "fields": {
                "size": {
                    "type": "number",
                    "isOptional": false
                },
                "shadowType": {
                    "type": "ig.COLL_SHADOW_TYPE",
                    "isOptional": true
                },
                "shadowScaleY": {
                    "type": "number",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ACTION_STEP.SET_SHADOW": {
            "fields": {
                "size": {
                    "type": "number",
                    "isOptional": false
                },
                "shadowType": {
                    "type": "ig.COLL_SHADOW_TYPE",
                    "isOptional": true
                },
                "shadowScaleY": {
                    "type": "number",
                    "isOptional": true
                }
            },
            "functions": {
                "init": {
                    "returnType": "SET_SHADOW",
                    "args": [
                        {
                            "name": "settings",
                            "type": "SET_SHADOW.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.EffectStepBase"
            ]
        },
        "ig.ACTION_STEP": {
            "fields": {
                "SET_SHADOW": {
                    "type": "SET_SHADOW_CONSTRUCTOR"
                },
                "PLAY_SOUND": {
                    "type": "PLAY_SOUNDConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ACTION_STEP.PLAY_SOUND": {
            "fields": {
                "sound": {
                    "type": "string",
                    "isOptional": false
                },
                "global": {
                    "type": "boolean",
                    "isOptional": true
                },
                "loop": {
                    "type": "boolean",
                    "isOptional": true
                },
                "settings": {
                    "type": "{ speed: number; fadeDuration: number }",
                    "isOptional": false
                },
                "volume": {
                    "type": "number",
                    "isOptional": true
                },
                "variance": {
                    "type": "number",
                    "isOptional": true
                },
                "radius": {
                    "type": "number",
                    "isOptional": true
                },
                "speedVar": {
                    "type": "number",
                    "isOptional": true
                },
                "speedVarFactor": {
                    "type": "number",
                    "isOptional": true
                },
                "fadeDuration": {
                    "type": "number",
                    "isOptional": true
                }
            },
            "functions": {
                "init": {
                    "returnType": "PLAY_SOUND",
                    "args": [
                        {
                            "name": "settings",
                            "type": "{\n        sound: string;\n        volume?: number;\n        variance?: number;\n        global?: boolean;\n        loop?: boolean;\n        radius?: number;\n        speedVar?: number;\n        speedVarFactor?: number;\n        fadeDuration?: number;\n      }",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.ActionStepBase"
            ]
        },
        "ig.ACTION_STEP.PLAY_SOUND.settings": {
            "fields": {
                "speed": {
                    "type": "number",
                    "isOptional": false
                },
                "fadeDuration": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "impact.base.animation": {
        "ig.TileSheet": {
            "fields": {
                "width": {
                    "type": "number",
                    "isOptional": false
                },
                "height": {
                    "type": "number",
                    "isOptional": false
                },
                "offX": {
                    "type": "number",
                    "isOptional": false
                },
                "offY": {
                    "type": "number",
                    "isOptional": false
                },
                "xCount": {
                    "type": "number",
                    "isOptional": false
                },
                "image": {
                    "type": "ig.Image",
                    "isOptional": false
                }
            },
            "functions": {
                "generateHit": {
                    "returnType": "void",
                    "args": []
                },
                "getTileSrc": {
                    "returnType": "Vec2",
                    "args": [
                        {
                            "name": "dest",
                            "type": "Vec2",
                            "isOptional": false
                        },
                        {
                            "name": "tileId",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "clearCached": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "TileSheet",
                    "args": [
                        {
                            "name": "imageSrc",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "width",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "height",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "offX",
                            "type": "Nullable<number>",
                            "isOptional": true
                        },
                        {
                            "name": "offY",
                            "type": "Nullable<number>",
                            "isOptional": true
                        },
                        {
                            "name": "xCount",
                            "type": "Nullable<number>",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "ig": {
            "fields": {
                "TileSheet": {
                    "type": "TileSheetConstructor"
                },
                "Animation": {
                    "type": "AnimationConstructor"
                },
                "AnimationState": {
                    "type": "AnimationStateConstructor"
                },
                "AnimModification": {
                    "type": "AnimModificationConstructor"
                },
                "ColorOverlay": {
                    "type": "ColorOverlayConstructor"
                },
                "SingleDirAnimationSet": {
                    "type": "SingleDirAnimationSetConstructor"
                },
                "MultiDirAnimationSet": {
                    "type": "MultiDirAnimationSetConstructor"
                },
                "AnimationSheet": {
                    "type": "AnimationSheetConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.Animation.Settings": {
            "fields": {
                "sheet": {
                    "type": "ig.TileSheet | string",
                    "isOptional": false
                },
                "shapeType": {
                    "type": "keyof typeof ig.ANIM_SHAPE_TYPE",
                    "isOptional": true
                },
                "pivot": {
                    "type": "Vec2",
                    "isOptional": true
                },
                "flipX": {
                    "type": "boolean",
                    "isOptional": true
                },
                "flipY": {
                    "type": "boolean",
                    "isOptional": true
                },
                "offset": {
                    "type": "Vec3",
                    "isOptional": true
                },
                "angle": {
                    "type": "number",
                    "isOptional": true
                },
                "size": {
                    "type": "Vec3",
                    "isOptional": true
                },
                "gfxOffset": {
                    "type": "Vec2",
                    "isOptional": true
                },
                "centerPivot": {
                    "type": "boolean",
                    "isOptional": true
                },
                "guiSprites": {
                    "type": "boolean",
                    "isOptional": true
                },
                "wallY": {
                    "type": "number",
                    "isOptional": true
                },
                "aboveZ": {
                    "type": "number",
                    "isOptional": true
                },
                "renderMode": {
                    "type": "string",
                    "isOptional": true
                },
                "globalTiming": {
                    "type": "boolean",
                    "isOptional": true
                },
                "faceRotate": {
                    "type": "boolean",
                    "isOptional": true
                },
                "time": {
                    "type": "number",
                    "isOptional": true
                },
                "frames": {
                    "type": "number[]",
                    "isOptional": false
                },
                "tileOffset": {
                    "type": "number",
                    "isOptional": true
                },
                "fx": {
                    "type": "ig.SPRITE_FX.SLIDE & { type: keyof typeof ig.SPRITE_FX }[]",
                    "isOptional": true
                },
                "type": {
                    "type": "keyof typeof ig.SPRITE_FX",
                    "isOptional": false
                },
                "frameSpriteOffset": {
                    "type": "number[]",
                    "isOptional": true
                },
                "framesGfxOffset": {
                    "type": "number[]",
                    "isOptional": true
                },
                "framesAlpha": {
                    "type": "number[]",
                    "isOptional": true
                },
                "framesAngle": {
                    "type": "number[]",
                    "isOptional": true
                },
                "framesFlipX": {
                    "type": "number[]",
                    "isOptional": true
                },
                "repeat": {
                    "type": "boolean",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.Animation": {
            "fields": {
                "sheet": {
                    "type": "ig.TileSheet",
                    "isOptional": false
                },
                "shapeType": {
                    "type": "ig.ANIM_SHAPE_TYPE",
                    "isOptional": false
                },
                "frameTime": {
                    "type": "number",
                    "isOptional": false
                },
                "stop": {
                    "type": "boolean",
                    "isOptional": false
                },
                "flip": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "pivot": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "centerPivot": {
                    "type": "boolean",
                    "isOptional": false
                },
                "wallY": {
                    "type": "number",
                    "isOptional": false
                },
                "aboveZ": {
                    "type": "number",
                    "isOptional": true
                },
                "sequence": {
                    "type": "number[]",
                    "isOptional": false
                },
                "sequenceSpriteOff": {
                    "type": "number[]",
                    "isOptional": true
                },
                "framesGfxOffset": {
                    "type": "number[]",
                    "isOptional": true
                },
                "framesAlpha": {
                    "type": "number[]",
                    "isOptional": true
                },
                "framesAngle": {
                    "type": "number[]",
                    "isOptional": true
                },
                "framesFlipX": {
                    "type": "number[]",
                    "isOptional": true
                },
                "angle": {
                    "type": "number",
                    "isOptional": false
                },
                "offset": {
                    "type": "Vec3",
                    "isOptional": true
                },
                "gfxOffset": {
                    "type": "Vec2",
                    "isOptional": true
                },
                "size": {
                    "type": "Vec3",
                    "isOptional": true
                },
                "renderMode": {
                    "type": "string",
                    "isOptional": true
                },
                "guiSprites": {
                    "type": "boolean",
                    "isOptional": false
                },
                "globalTiming": {
                    "type": "boolean",
                    "isOptional": false
                },
                "fx": {
                    "type": "ig.SpriteEffectBase[]",
                    "isOptional": true
                },
                "onAnimationStart": {
                    "type": "(entity: ig.AnimatedEntity) => void",
                    "isOptional": true
                },
                "onUpdate": {
                    "type": "(entity: ig.AnimatedEntity, state: ig.AnimationState, speedFactor: number) => void",
                    "isOptional": true
                }
            },
            "functions": {
                "getDuration": {
                    "returnType": "number",
                    "args": []
                },
                "getFrameCount": {
                    "returnType": "number",
                    "args": []
                },
                "updateSprite": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "entity",
                            "type": "ig.AnimatedEntity",
                            "isOptional": false
                        },
                        {
                            "name": "cubeSprite",
                            "type": "ig.CubeSprite",
                            "isOptional": false
                        },
                        {
                            "name": "animState",
                            "type": "ig.AnimationState",
                            "isOptional": false
                        },
                        {
                            "name": "ignoreShadow",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "Animation",
                    "args": [
                        {
                            "name": "sheet",
                            "type": "ig.TileSheet",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "ig.Animation.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "ig.AnimationState": {
            "fields": {
                "animations": {
                    "type": "ig.Animation[]",
                    "isOptional": false
                },
                "followUp": {
                    "type": "string",
                    "isOptional": true
                },
                "timer": {
                    "type": "number",
                    "isOptional": false
                },
                "loopCount": {
                    "type": "number",
                    "isOptional": false
                },
                "alpha": {
                    "type": "number",
                    "isOptional": false
                },
                "angle": {
                    "type": "number",
                    "isOptional": false
                },
                "scaleX": {
                    "type": "number",
                    "isOptional": false
                },
                "scaleY": {
                    "type": "number",
                    "isOptional": false
                },
                "flipX": {
                    "type": "boolean",
                    "isOptional": false
                },
                "colorOverlays": {
                    "type": "ig.ColorOverlay[]",
                    "isOptional": false
                },
                "animMods": {
                    "type": "ig.AnimModification[]",
                    "isOptional": false
                }
            },
            "functions": {
                "reset": {
                    "returnType": "void",
                    "args": []
                },
                "shuffleTime": {
                    "returnType": "void",
                    "args": []
                },
                "hasAnimations": {
                    "returnType": "boolean",
                    "args": []
                },
                "setAnimation": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "entity",
                            "type": "ig.AnimatedEntity",
                            "isOptional": false
                        },
                        {
                            "name": "animations",
                            "type": "ig.Animation[]",
                            "isOptional": false
                        }
                    ]
                },
                "addColorOverlay": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "colorOverlay",
                            "type": "ig.ColorOverlay",
                            "isOptional": false
                        }
                    ]
                },
                "getFrame": {
                    "returnType": "number",
                    "args": []
                },
                "isStatic": {
                    "returnType": "boolean",
                    "args": []
                },
                "isRepeat": {
                    "returnType": "boolean",
                    "args": []
                },
                "hasStopped": {
                    "returnType": "boolean",
                    "args": []
                },
                "rewind": {
                    "returnType": "ig.AnimationState",
                    "args": []
                },
                "update": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "entity",
                            "type": "ig.AnimatedEntity",
                            "isOptional": false
                        },
                        {
                            "name": "speedFactor",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "updateSprite": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "entity",
                            "type": "ig.Entity",
                            "isOptional": false
                        }
                    ]
                },
                "updateSpriteColor": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "entity",
                            "type": "ig.Entity",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "AnimationState",
                    "args": []
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "ig.AnimModification": {
            "fields": {
                "entity": {
                    "type": "ig.AnimatedEntity",
                    "isOptional": false
                },
                "name": {
                    "type": "string",
                    "isOptional": false
                },
                "spriteIdx": {
                    "type": "number",
                    "isOptional": false
                },
                "tileOffset": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "remove": {
                    "returnType": "void",
                    "args": []
                },
                "onActionEndDetach": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "AnimModification",
                    "args": [
                        {
                            "name": "entity",
                            "type": "ig.AnimatedEntity",
                            "isOptional": false
                        },
                        {
                            "name": "spriteIdx",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "name",
                            "type": "string",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "ig.ColorOverlay": {
            "fields": {
                "color": {
                    "type": "ig.RGBColor",
                    "isOptional": true
                },
                "alpha": {
                    "type": "number",
                    "isOptional": false
                },
                "spriteFilter": {
                    "type": "number[]",
                    "isOptional": true
                },
                "lighter": {
                    "type": "boolean",
                    "isOptional": true
                }
            },
            "functions": {
                "clear": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "ColorOverlay",
                    "args": [
                        {
                            "name": "color",
                            "type": "ig.RGBColorData | string",
                            "isOptional": false
                        },
                        {
                            "name": "alpha",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "spriteFilter",
                            "type": "number[]",
                            "isOptional": true
                        },
                        {
                            "name": "lighter",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "ig.BaseAnimationSet": {
            "fields": {
                "animations": {
                    "type": "ig.Animation.Settings[]",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": [
                "ig.Class"
            ]
        },
        "ig.SingleDirAnimationSet": {
            "fields": {},
            "functions": {},
            "parents": [
                "ig.BaseAnimationSet"
            ]
        },
        "ig.MultiDirAnimationSet": {
            "fields": {},
            "functions": {},
            "parents": [
                "ig.BaseAnimationSet"
            ]
        },
        "ig.AnimationSheet.Sheet": {
            "fields": {
                "src": {
                    "type": "string",
                    "isOptional": false
                },
                "width": {
                    "type": "number",
                    "isOptional": false
                },
                "height": {
                    "type": "number",
                    "isOptional": false
                },
                "offY": {
                    "type": "number",
                    "isOptional": false
                },
                "offX": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.AnimationSheet": {
            "fields": {
                "name": {
                    "type": "string",
                    "isOptional": false
                },
                "sheet": {
                    "type": "ig.AnimationSheet.Sheet",
                    "isOptional": true
                },
                "frames": {
                    "type": "number[]",
                    "isOptional": true
                },
                "SUB": {
                    "type": "ig.AnimationSheet.Sub[]",
                    "isOptional": false
                },
                "anims": {
                    "type": "Array<ig.MultiDirAnimationSet | ig.SingleDirAnimationSet>",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "ig.AnimationSheet",
                    "args": [
                        {
                            "name": "pathOrData",
                            "type": "string | ig.AnimationSheet.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.JsonLoadable"
            ]
        }
    },
    "game.feature.credits.credits-steps": {},
    "game.feature.combat.combat-poi": {},
    "game.feature.combat.model.combat-condition": {
        "sc.CombatCondition": {
            "fields": {},
            "functions": {
                "check": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "entity",
                            "type": "ig.ENTITY.Combatant",
                            "isOptional": false
                        },
                        {
                            "name": "random",
                            "type": "number",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": []
        },
        "sc.COMBAT_CONDITION.RANDOM": {
            "fields": {
                "value": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "check": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "entity",
                            "type": "ig.ENTITY.Combatant",
                            "isOptional": false
                        },
                        {
                            "name": "random",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class",
                "CombatCondition"
            ]
        },
        "sc.COMBAT_CONDITION.HAS_SP": {
            "fields": {
                "min": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": [
                "ig.Class",
                "CombatCondition"
            ]
        },
        "sc.COMBAT_CONDITION": {
            "fields": {
                "RANDOM": {
                    "type": "COMBAT_CONDITION.RANDOM_CONSTRUCTOR",
                    "isOptional": false
                },
                "HAS_SP": {
                    "type": "COMBAT_CONDITION.HAS_SP_CONSTRUCTOR",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc": {
            "fields": {
                "COMBAT_CONDITION": {
                    "type": "COMBAT_CONDITION"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.combat.model.enemy-reaction": {
        "sc.EnemyReactionBase.Data": {
            "fields": {
                "type": {
                    "type": "string",
                    "isOptional": false
                },
                "action": {
                    "type": "string",
                    "isOptional": true
                },
                "postSwitchState": {
                    "type": "string",
                    "isOptional": true
                },
                "restartPrevAction": {
                    "type": "boolean",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.EnemyReactionBase": {
            "fields": {
                "name": {
                    "type": "string",
                    "isOptional": false
                },
                "type": {
                    "type": "string",
                    "isOptional": false
                },
                "action": {
                    "type": "string",
                    "isOptional": true
                },
                "postSwitchState": {
                    "type": "string",
                    "isOptional": true
                },
                "ignoreStun": {
                    "type": "boolean",
                    "isOptional": false
                },
                "restartPrevAction": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "onActivate": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "entity",
                            "type": "ig.ENTITY.Enemy",
                            "isOptional": false
                        }
                    ]
                },
                "preApply": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "entity",
                            "type": "ig.ENTITY.Enemy",
                            "isOptional": false
                        }
                    ]
                },
                "apply": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "entity",
                            "type": "ig.ENTITY.Enemy",
                            "isOptional": false
                        }
                    ]
                },
                "check": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "entity",
                            "type": "ig.ENTITY.Enemy",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "EnemyReactionBase",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "data",
                            "type": "EnemyReactionBase.Data",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "sc.ENEMY_REACTION.COLLAB.Data": {
            "fields": {
                "collabKey": {
                    "type": "string",
                    "isOptional": false
                },
                "conditions": {
                    "type": "unknown[]",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": [
                "EnemyReactionBase.Data"
            ]
        },
        "sc.ENEMY_REACTION.COLLAB": {
            "fields": {},
            "functions": {
                "init": {
                    "returnType": "COLLAB",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "data",
                            "type": "ENEMY_REACTION.COLLAB.Data",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "EnemyReactionBase"
            ]
        },
        "sc.ENEMY_REACTION": {
            "fields": {
                "COLLAB": {
                    "type": "COLLAB_CONSTRUCTOR"
                },
                "GUARD_COUNTER": {
                    "type": "GUARD_COUNTER_CONSTRUCTOR"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.ENEMY_REACTION.GUARD_COUNTER": {
            "fields": {},
            "functions": {
                "onGuardCountered": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "entity",
                            "type": "ig.ENTITY.Enemy",
                            "isOptional": false
                        },
                        {
                            "name": "guardingEntity",
                            "type": "ig.ENTITY.Combatant",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "EnemyReactionBase"
            ]
        }
    },
    "game.feature.msg.msg-steps": {},
    "game.feature.quest.quest-steps": {},
    "game.feature.msg.message-model": {
        "sc.MessageModel.Data.SideMessage": {
            "fields": {
                "char": {
                    "type": "string",
                    "isOptional": false
                },
                "expression": {
                    "type": "string",
                    "isOptional": false
                },
                "message": {
                    "type": "ig.LangLabel.Data | string",
                    "isOptional": false
                },
                "main": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.MessageModel.Data": {
            "fields": {
                "autoScript": {
                    "type": "boolean",
                    "isOptional": false
                },
                "sideMessages": {
                    "type": "sc.MessageModel.Data.SideMessage[]",
                    "isOptional": false
                },
                "sideMessageStack": {
                    "type": "sc.MessageModel.Data.SideMessage[]",
                    "isOptional": false
                },
                "displayedSideMessages": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.MessageModel.SideMessage": {
            "fields": {
                "charExpression": {
                    "type": "sc.CharacterExpression",
                    "isOptional": false
                },
                "message": {
                    "type": "ig.LangLabel.Data | string",
                    "isOptional": false
                },
                "main": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.MessageModel": {
            "fields": {
                "sideMessages": {
                    "type": "sc.MessageModel.SideMessage[]",
                    "isOptional": false
                },
                "sideMessageStack": {
                    "type": "sc.MessageModel.SideMessage[]",
                    "isOptional": false
                },
                "sideMessageDelayedStack": {
                    "type": "sc.MessageModel.SideMessage[]",
                    "isOptional": false
                },
                "sideMessageQueuing": {
                    "type": "boolean",
                    "isOptional": false
                },
                "displayedSideMessages": {
                    "type": "number",
                    "isOptional": false
                },
                "blocking": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "clearBlocking": {
                    "returnType": "void",
                    "args": []
                },
                "showMessage": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "personName",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "message",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "autoContinue",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "setExpression": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "personName",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "expression",
                            "type": "sc.CharacterExpression",
                            "isOptional": false
                        }
                    ]
                },
                "clearAll": {
                    "returnType": "void",
                    "args": []
                },
                "hasChoice": {
                    "returnType": "boolean",
                    "args": []
                }
            },
            "parents": [
                "ig.GameAddon",
                "sc.Model"
            ]
        },
        "sc": {
            "fields": {
                "MessageModel": {
                    "type": "MessageModelConstructor"
                },
                "message": {
                    "type": "sc.MessageModel"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "impact.base.event": {
        "ig.EventManager": {
            "fields": {
                "runningEventCalls": {
                    "type": "ig.EventCall[]",
                    "isOptional": false
                },
                "blockingEventCall": {
                    "type": "ig.EventCall",
                    "isOptional": false
                }
            },
            "functions": {
                "callEvent": {
                    "returnType": "ig.EventCall",
                    "args": [
                        {
                            "name": "event",
                            "type": "ig.Event",
                            "isOptional": false
                        },
                        {
                            "name": "runType",
                            "type": "ig.EventRunType",
                            "isOptional": false
                        },
                        {
                            "name": "onStart",
                            "type": "Nullable<() => void>",
                            "isOptional": true
                        },
                        {
                            "name": "onEnd",
                            "type": "Nullable<() => void>",
                            "isOptional": true
                        },
                        {
                            "name": "input",
                            "type": "unknown",
                            "isOptional": true
                        },
                        {
                            "name": "callEntity",
                            "type": "ig.Entity",
                            "isOptional": true
                        },
                        {
                            "name": "data",
                            "type": "unknown",
                            "isOptional": true
                        }
                    ]
                },
                "getBlockingEventCall": {
                    "returnType": "ig.EventCall",
                    "args": []
                },
                "update": {
                    "returnType": "void",
                    "args": []
                },
                "clear": {
                    "returnType": "void",
                    "args": []
                },
                "_startEventCall": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "event",
                            "type": "ig.EventCall",
                            "isOptional": false
                        }
                    ]
                },
                "_endEventCall": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "event",
                            "type": "ig.EventCall",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "EventManager",
                    "args": []
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "ig": {
            "fields": {
                "EventManager": {
                    "type": "EventManagerConstructor"
                },
                "EventCall": {
                    "type": "EventCallConstructor"
                },
                "EventStepBase": {
                    "type": "EventStepBaseConstructor"
                },
                "Event": {
                    "type": "EventConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.EventCall.StackEntry": {
            "fields": {
                "event": {
                    "type": "ig.Event",
                    "isOptional": false
                },
                "currentStep": {
                    "type": "Nullable<ig.EventStepBase>",
                    "isOptional": false
                },
                "stepData": {
                    "type": "Record<any, any>",
                    "isOptional": false
                },
                "vars": {
                    "type": "ReturnType<ig.Event['setupInput']>",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.EventCall": {
            "fields": {
                "runType": {
                    "type": "ig.EventRunType",
                    "isOptional": false
                },
                "done": {
                    "type": "boolean",
                    "isOptional": false
                },
                "blocked": {
                    "type": "boolean",
                    "isOptional": false
                },
                "stack": {
                    "type": "ig.EventCall.StackEntry[]",
                    "isOptional": false
                },
                "pauseParallel": {
                    "type": "boolean",
                    "isOptional": false
                },
                "runCount": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "callInLineEvent": {
                    "returnType": "ig.EventCall.StackEntry",
                    "args": [
                        {
                            "name": "event",
                            "type": "ig.Event",
                            "isOptional": false
                        },
                        {
                            "name": "callData",
                            "type": "{ runCount: number }",
                            "isOptional": false
                        }
                    ]
                },
                "setDone": {
                    "returnType": "void",
                    "args": []
                },
                "isRunning": {
                    "returnType": "boolean",
                    "args": []
                },
                "update": {
                    "returnType": "boolean",
                    "args": []
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "ig.EventStepBase.Settings": {
            "fields": {
                "type": {
                    "type": "string",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.EventStepBase": {
            "fields": {
                "_nextStep": {
                    "type": "Nullable<ig.EventStepBase>",
                    "isOptional": false
                },
                "branches": {
                    "type": "Record<string, ig.EventStepBase> | null | undefined",
                    "isOptional": false
                }
            },
            "functions": {
                "start": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "data",
                            "type": "unknown",
                            "isOptional": true
                        },
                        {
                            "name": "eventCall",
                            "type": "ig.EventCall",
                            "isOptional": true
                        }
                    ]
                },
                "run": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "data",
                            "type": "unknown",
                            "isOptional": true
                        }
                    ]
                },
                "getNext": {
                    "returnType": "Nullable<ig.EventStepBase>",
                    "args": [
                        {
                            "name": "data",
                            "type": "unknown",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": [
                "ig.StepBase"
            ]
        },
        "ig.Event.Settings": {
            "fields": {
                "name": {
                    "type": "string",
                    "isOptional": false
                },
                "steps": {
                    "type": "ig.EventStepBase.Settings[]",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.Event.VarObject": {
            "fields": {
                "indirect": {
                    "type": "string",
                    "isOptional": true
                },
                "varName": {
                    "type": "string",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.Event": {
            "fields": {
                "base": {
                    "type": "number",
                    "isOptional": false
                },
                "vary": {
                    "type": "number",
                    "isOptional": true
                },
                "name": {
                    "type": "string",
                    "isOptional": false
                },
                "rootStep": {
                    "type": "ig.EventStepBase",
                    "isOptional": false
                },
                "inputSignature": {
                    "type": "Record<\n        string,\n        {\n          _type:\n            | 'StringExpression'\n            | 'String'\n            | 'BooleanExpression'\n            | 'Boolean'\n            | 'NumberExpression'\n            | 'Number'\n            | 'Vec2'\n            | 'Vec3'\n            | 'VarName'\n            | 'Entity'\n            | 'LangLabel';\n        }\n      >",
                    "isOptional": false
                },
                "_type": {
                    "type": "| 'StringExpression'\n            | 'String'\n            | 'BooleanExpression'\n            | 'Boolean'\n            | 'NumberExpression'\n            | 'Number'\n            | 'Vec2'\n            | 'Vec3'\n            | 'VarName'\n            | 'Entity'\n            | 'LangLabel'",
                    "isOptional": false
                }
            },
            "functions": {
                "setupInput": {
                    "returnType": "Record<keyof T, any>",
                    "args": [
                        {
                            "name": "b_",
                            "type": "T",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "Event",
                    "args": [
                        {
                            "name": "settings",
                            "type": "ig.Event.Settings",
                            "isOptional": false
                        }
                    ]
                },
                "getNumberVary": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "numberVary",
                            "type": "ig.Event.NumberVary",
                            "isOptional": false
                        }
                    ]
                },
                "getVec2": {
                    "returnType": "Vec2",
                    "args": [
                        {
                            "name": "input",
                            "type": "Event.VarExpression<Vec2>",
                            "isOptional": false
                        },
                        {
                            "name": "dest",
                            "type": "Vec2",
                            "isOptional": false
                        }
                    ]
                },
                "getVec3": {
                    "returnType": "Vec3",
                    "args": [
                        {
                            "name": "input",
                            "type": "Event.VarExpression<Vec3>",
                            "isOptional": false
                        },
                        {
                            "name": "dest",
                            "type": "Vec3",
                            "isOptional": false
                        }
                    ]
                },
                "getVarName": {
                    "returnType": "string | null",
                    "args": [
                        {
                            "name": "varName",
                            "type": "string | ig.Event.VarObject",
                            "isOptional": false
                        }
                    ]
                },
                "getExpressionValue": {
                    "returnType": "T",
                    "args": [
                        {
                            "name": "expression",
                            "type": "ig.Event.VarExpression<T>",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class"
            ]
        }
    },
    "game.feature.menu.gui.quest-hub.quest-hub-misc": {
        "sc.QuestHubListEntry": {
            "fields": {
                "gfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "questLocation": {
                    "type": "sc.TextGui",
                    "isOptional": false
                },
                "levelContent": {
                    "type": "ig.ColorGui",
                    "isOptional": false
                },
                "rewards": {
                    "type": "sc.QuestHubRewards",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "QuestHubListEntry",
                    "args": [
                        {
                            "name": "questID",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "tab",
                            "type": "sc.MENU_QUEST_HUB_TABS",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.FocusGui"
            ]
        },
        "sc": {
            "fields": {
                "QuestHubListEntry": {
                    "type": "QuestHubListEntryConstructor"
                },
                "QuestHubRewards": {
                    "type": "QuestHubRewardsConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.QuestHubRewards": {
            "fields": {},
            "functions": {},
            "parents": [
                "ig.BoxGui"
            ]
        }
    },
    "game.feature.combat.model.enemy-type": {
        "sc.EnemyAiLearn": {
            "fields": {
                "knowItAll": {
                    "type": "boolean",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.ENEMY_AI_LEARN": {
            "fields": {
                "REGULAR": {
                    "type": "sc.EnemyAiLearn",
                    "isOptional": false
                },
                "IMMEDIATELY": {
                    "type": "sc.EnemyAiLearn",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc": {
            "fields": {
                "ENEMY_AI_LEARN": {
                    "type": "EnemyAiLearn"
                },
                "EnemyType": {
                    "type": "EnemyTypeConstructor"
                },
                "EnemyInfo": {
                    "type": "EnemyInfoConstructor"
                },
                "EnemyState": {
                    "type": "EnemyStateConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.EnemyType.ItemDrop": {
            "fields": {
                "item": {
                    "type": "sc.ItemID",
                    "isOptional": false
                },
                "prob": {
                    "type": "number",
                    "isOptional": false
                },
                "min": {
                    "type": "number",
                    "isOptional": false
                },
                "max": {
                    "type": "number",
                    "isOptional": false
                },
                "rank": {
                    "type": "sc.CombatRankLabel | ''",
                    "isOptional": false
                },
                "boosted": {
                    "type": "Nullable<boolean>",
                    "isOptional": true
                },
                "condition": {
                    "type": "Nullable<string>",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.EnemyType.HpBreak": {
            "fields": {
                "hp": {
                    "type": "number",
                    "isOptional": false
                },
                "healDrop": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.EnemyType.TargetDetect": {
            "fields": {
                "onVisibleRange": {
                    "type": "number",
                    "isOptional": false
                },
                "onDistance": {
                    "type": "boolean",
                    "isOptional": false
                },
                "onCloseBattle": {
                    "type": "boolean",
                    "isOptional": false
                },
                "detectDistance": {
                    "type": "number",
                    "isOptional": false
                },
                "loseDistance": {
                    "type": "number",
                    "isOptional": false
                },
                "loseTime": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.EnemyType.ElementModes": {
            "fields": {
                "current": {
                    "type": "sc.ELEMENT",
                    "isOptional": false
                },
                "modes": {
                    "type": "Record<sc.ELEMENT, Record<string, number>>",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.EnemyType": {
            "fields": {
                "aiGroup": {
                    "type": "string",
                    "isOptional": true
                },
                "aiLearnType": {
                    "type": "sc.ENEMY_AI_LEARN",
                    "isOptional": false
                },
                "enduranceScale": {
                    "type": "number",
                    "isOptional": false
                },
                "name": {
                    "type": "string",
                    "isOptional": false
                },
                "params": {
                    "type": "sc.StatChange.Params",
                    "isOptional": false
                },
                "credit": {
                    "type": "number",
                    "isOptional": false
                },
                "exp": {
                    "type": "number",
                    "isOptional": false
                },
                "level": {
                    "type": "number",
                    "isOptional": false
                },
                "maxSp": {
                    "type": "number",
                    "isOptional": false
                },
                "boss": {
                    "type": "boolean",
                    "isOptional": false
                },
                "hpBreaks": {
                    "type": "sc.EnemyType.HpBreak[]",
                    "isOptional": false
                },
                "hpBreakCond": {
                    "type": "ig.VarCondition",
                    "isOptional": false
                },
                "animSheet": {
                    "type": "ig.AnimationSheet",
                    "isOptional": false
                },
                "attribs": {
                    "type": "Record<string, unknown>",
                    "isOptional": false
                },
                "proxies": {
                    "type": "ig.Config",
                    "isOptional": false
                },
                "actions": {
                    "type": "Record<string, ig.Action>",
                    "isOptional": false
                },
                "states": {
                    "type": "Record<string, sc.EnemyState>",
                    "isOptional": false
                },
                "reactions": {
                    "type": "Record<string, EnemyReactionBase>",
                    "isOptional": false
                },
                "trackerDef": {
                    "type": "unknown",
                    "isOptional": false
                },
                "headIdx": {
                    "type": "number",
                    "isOptional": false
                },
                "healDropRate": {
                    "type": "number",
                    "isOptional": false
                },
                "itemDrops": {
                    "type": "sc.EnemyType.ItemDrop[]",
                    "isOptional": false
                },
                "targetDetect": {
                    "type": "sc.EnemyType.TargetDetect",
                    "isOptional": false
                },
                "bossLabel": {
                    "type": "ig.LangLabel.Data | string",
                    "isOptional": false
                },
                "boostedLevel": {
                    "type": "number",
                    "isOptional": false
                },
                "size": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "cache": {
                    "type": "Record<string, EnemyType>",
                    "isOptional": false
                }
            },
            "functions": {
                "onload": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "data",
                            "type": "unknown",
                            "isOptional": false
                        }
                    ]
                },
                "onCacheCleared": {
                    "returnType": "void",
                    "args": []
                },
                "initEntity": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "enemy",
                            "type": "ig.ENTITY.Enemy",
                            "isOptional": false
                        }
                    ]
                },
                "updateParams": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "enemy",
                            "type": "ig.ENTITY.Enemy",
                            "isOptional": false
                        }
                    ]
                },
                "onEntityKill": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "entity",
                            "type": "ig.ActorEntity",
                            "isOptional": false
                        }
                    ]
                },
                "getAppearAction": {
                    "returnType": "Nullable<ig.Action>",
                    "args": [
                        {
                            "name": "enemy",
                            "type": "ig.ENTITY.Enemy",
                            "isOptional": false
                        }
                    ]
                },
                "update": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "enemy",
                            "type": "ig.ENTITY.Enemy",
                            "isOptional": false
                        }
                    ]
                },
                "checkReactions": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "enemy",
                            "type": "ig.ENTITY.Enemy",
                            "isOptional": false
                        }
                    ]
                },
                "applyCurrentReaction": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "enemy",
                            "type": "ig.ENTITY.Enemy",
                            "isOptional": false
                        }
                    ]
                },
                "updateAction": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "enemy",
                            "type": "ig.ENTITY.Enemy",
                            "isOptional": false
                        }
                    ]
                },
                "startChoice": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "enemy",
                            "type": "ig.ENTITY.Enemy",
                            "isOptional": false
                        },
                        {
                            "name": "enemyReaction",
                            "type": "sc.EnemyReactionBase",
                            "isOptional": false
                        }
                    ]
                },
                "updateTarget": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "enemy",
                            "type": "ig.ENTITY.Enemy",
                            "isOptional": false
                        }
                    ]
                },
                "reselectTarget": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "enemy",
                            "type": "ig.ENTITY.Enemy",
                            "isOptional": false
                        },
                        {
                            "name": "notifyArea",
                            "type": "boolean",
                            "isOptional": false
                        },
                        {
                            "name": "keepAction",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "fixed",
                            "type": "Nullable<boolean>",
                            "isOptional": true
                        }
                    ]
                },
                "assignTarget": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "enemy",
                            "type": "ig.ENTITY.Enemy",
                            "isOptional": false
                        },
                        {
                            "name": "target",
                            "type": "ig.ENTITY.Combatant",
                            "isOptional": false
                        },
                        {
                            "name": "notifyArea",
                            "type": "boolean",
                            "isOptional": false
                        },
                        {
                            "name": "keepAction",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "fixed",
                            "type": "Nullable<boolean>",
                            "isOptional": true
                        }
                    ]
                },
                "damageUpdate": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "enemy",
                            "type": "ig.ENTITY.Enemy",
                            "isOptional": false
                        },
                        {
                            "name": "combatant",
                            "type": "sc.GetCombatantRoot",
                            "isOptional": false
                        }
                    ]
                },
                "onNavigationFailed": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "enemy",
                            "type": "ig.ENTITY.Enemy",
                            "isOptional": false
                        },
                        {
                            "name": "count",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "onStunEnd": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "enemy",
                            "type": "ig.ENTITY.Enemy",
                            "isOptional": false
                        }
                    ]
                },
                "postActionUpdate": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "enemy",
                            "type": "ig.ENTITY.Enemy",
                            "isOptional": false
                        }
                    ]
                },
                "switchState": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "enemy",
                            "type": "ig.ENTITY.Enemy",
                            "isOptional": false
                        },
                        {
                            "name": "state",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "switchStateConfig": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "enemy",
                            "type": "ig.ENTITY.Enemy",
                            "isOptional": false
                        },
                        {
                            "name": "state",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "isReadyToFight": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "enemy",
                            "type": "ig.ENTITY.Enemy",
                            "isOptional": false
                        }
                    ]
                },
                "resolveHpBreak": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "dmgMod",
                            "type": "Nullable<ig.ENTITY.Combatant.HitProperties>",
                            "isOptional": false
                        },
                        {
                            "name": "enemy",
                            "type": "ig.ENTITY.Enemy",
                            "isOptional": false
                        },
                        {
                            "name": "combatant",
                            "type": "sc.BasicCombatant",
                            "isOptional": false
                        },
                        {
                            "name": "damage",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "dropsOverride",
                            "type": "ig.ENTITY.Enemy",
                            "isOptional": true
                        }
                    ]
                },
                "resolveDefeat": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "enemy",
                            "type": "ig.ENTITY.Enemy",
                            "isOptional": false
                        }
                    ]
                },
                "resolveItemDrops": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "enemyEntity",
                            "type": "ig.ENTITY.Enemy",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "EnemyType",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.JsonLoadable"
            ]
        },
        "sc.EnemyInfo.Settings": {
            "fields": {
                "type": {
                    "type": "string",
                    "isOptional": false
                },
                "group": {
                    "type": "string",
                    "isOptional": true
                },
                "party": {
                    "type": "keyof typeof sc.COMBATANT_PARTY",
                    "isOptional": true
                },
                "level": {
                    "type": "number",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.EnemyInfo": {
            "fields": {
                "settings": {
                    "type": "EnemyInfo.Settings",
                    "isOptional": false
                },
                "enemyType": {
                    "type": "EnemyType",
                    "isOptional": false
                }
            },
            "functions": {
                "getSettings": {
                    "returnType": "EnemyInfo.Settings",
                    "args": []
                },
                "clearCached": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "EnemyInfo",
                    "args": [
                        {
                            "name": "settings",
                            "type": "EnemyInfo.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "sc.EnemyState": {
            "fields": {
                "name": {
                    "type": "string",
                    "isOptional": false
                },
                "entityConfig": {
                    "type": "ig.ActorConfig",
                    "isOptional": false
                }
            },
            "functions": {
                "selectAction": {
                    "returnType": "Nullable<unknown>",
                    "args": [
                        {
                            "name": "enemy",
                            "type": "ig.ENTITY.Enemy",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "EnemyState",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "b_",
                            "type": "unknown",
                            "isOptional": false
                        },
                        {
                            "name": "d_",
                            "type": "unknown",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class"
            ]
        }
    },
    "impact.base.action": {
        "ig.ActionStepBase": {
            "fields": {
                "_nextStep": {
                    "type": "Nullable<ig.ActionStepBase>",
                    "isOptional": false
                },
                "branches": {
                    "type": "Nullable<Record<string, ig.ActionStepBase>>",
                    "isOptional": false
                }
            },
            "functions": {
                "start": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "target",
                            "type": "ig.ActorEntity",
                            "isOptional": false
                        }
                    ]
                },
                "run": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "target",
                            "type": "ig.ActorEntity",
                            "isOptional": false
                        }
                    ]
                },
                "getNext": {
                    "returnType": "Nullable<ig.ActionStepBase>",
                    "args": [
                        {
                            "name": "target",
                            "type": "ig.ActorEntity",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.StepBase"
            ]
        },
        "ig": {
            "fields": {
                "ActionStepBase": {
                    "type": "ActionStepBaseConstructor"
                },
                "Action": {
                    "type": "ActionConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.Action": {
            "fields": {
                "name": {
                    "type": "string",
                    "isOptional": false
                },
                "parallelMove": {
                    "type": "boolean",
                    "isOptional": false
                },
                "repeating": {
                    "type": "boolean",
                    "isOptional": false
                },
                "hint": {
                    "type": "string",
                    "isOptional": true
                }
            },
            "functions": {
                "init": {
                    "returnType": "Action",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "steps",
                            "type": "any[]",
                            "isOptional": false
                        },
                        {
                            "name": "parallelMove",
                            "type": "Nullable<boolean>",
                            "isOptional": true
                        },
                        {
                            "name": "repeating",
                            "type": "Nullable<boolean>",
                            "isOptional": true
                        }
                    ]
                },
                "getVec3": {
                    "returnType": "Vec3",
                    "args": [
                        {
                            "name": "value",
                            "type": "Vec3",
                            "isOptional": false
                        },
                        {
                            "name": "actor",
                            "type": "ig.ActorEntity",
                            "isOptional": false
                        },
                        {
                            "name": "dest",
                            "type": "Vec3",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class"
            ]
        }
    },
    "game.feature.combat.combat-charge": {
        "sc.CombatCharge": {
            "fields": {
                "fx": {
                    "type": "ig.ENTITY.Effect",
                    "isOptional": false
                },
                "darkness": {
                    "type": "ig.DarknessHandle",
                    "isOptional": false
                },
                "soundHandle": {
                    "type": "ig.SoundHandle",
                    "isOptional": false
                },
                "entity": {
                    "type": "ig.Entity",
                    "isOptional": false
                },
                "stereo": {
                    "type": "boolean",
                    "isOptional": false
                },
                "slowmo": {
                    "type": "boolean",
                    "isOptional": false
                },
                "camera": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "charge": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "element",
                            "type": "sc.ELEMENT",
                            "isOptional": false
                        },
                        {
                            "name": "chargeStage",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "showCombatArt",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "stop": {
                    "returnType": "void",
                    "args": []
                },
                "onEntityKillDetach": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "CombatCharge",
                    "args": [
                        {
                            "name": "entity",
                            "type": "unknown",
                            "isOptional": false
                        },
                        {
                            "name": "stereo",
                            "type": "boolean",
                            "isOptional": false
                        },
                        {
                            "name": "slowmo",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "camera",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class",
                "sc.Combat.ActionAttached"
            ]
        },
        "sc": {
            "fields": {
                "CombatCharge": {
                    "type": "CombatChargeConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.combat.entities.combat-proxy": {
        "sc.CombatProxyEntity.Settings.Data": {
            "fields": {
                "startAnim": {
                    "type": "string",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.CombatProxyEntity.Settings": {
            "fields": {
                "data": {
                    "type": "Settings.Data",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.CombatProxyEntity": {
            "fields": {
                "hp": {
                    "type": "number",
                    "isOptional": false
                },
                "maxHp": {
                    "type": "number",
                    "isOptional": false
                },
                "combatant": {
                    "type": "sc.BasicCombatant",
                    "isOptional": false
                },
                "sourceEntity": {
                    "type": "sc.BasicCombatant",
                    "isOptional": false
                },
                "party": {
                    "type": "sc.COMBATANT_PARTY",
                    "isOptional": false
                },
                "animSheet": {
                    "type": "ig.AnimationSheet",
                    "isOptional": false
                }
            },
            "functions": {
                "initAnimations": {
                    "returnType": "void",
                    "args": []
                },
                "onCollabEndDetach": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "collab",
                            "type": "sc.EnemyCollab",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "CombatProxyEntity",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "CombatProxyEntity.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "sc.BasicCombatant"
            ]
        },
        "sc": {
            "fields": {
                "CombatProxyEntity": {
                    "type": "CombatProxyEntityConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.puzzle.entities.ferro": {
        "ig.ENTITY.FerroSpot.Settings": {
            "fields": {
                "source": {
                    "type": "boolean",
                    "isOptional": false
                },
                "variable": {
                    "type": "string",
                    "isOptional": false
                },
                "activeCondition": {
                    "type": "string",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": [
                "ig.Entity.Settings"
            ]
        },
        "ig.ENTITY.FerroSpot": {
            "fields": {
                "state": {
                    "type": "number",
                    "isOptional": false
                },
                "reached": {
                    "type": "boolean",
                    "isOptional": false
                },
                "source": {
                    "type": "boolean",
                    "isOptional": false
                },
                "ferro": {
                    "type": "sc.FerroEntity",
                    "isOptional": false
                },
                "searched": {
                    "type": "boolean",
                    "isOptional": false
                },
                "effects": {
                    "type": "{ sheet: ig.EffectSheet; handle: Nullable<ig.ENTITY.Effect> }",
                    "isOptional": false
                },
                "_wm": {
                    "type": "ig.Config",
                    "isOptional": false
                },
                "variable": {
                    "type": "string",
                    "isOptional": false
                }
            },
            "functions": {
                "spawnFerro": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "spawnEffects",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "isActive": {
                    "returnType": "boolean",
                    "args": []
                },
                "showPermaFx": {
                    "returnType": "void",
                    "args": []
                },
                "clearPermaFx": {
                    "returnType": "void",
                    "args": []
                },
                "setOff": {
                    "returnType": "void",
                    "args": []
                },
                "setCarry": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "spawnEffects",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "setStandby": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "spawnEffects",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "setRespawn": {
                    "returnType": "void",
                    "args": []
                },
                "varsChanged": {
                    "returnType": "void",
                    "args": []
                },
                "checkNonSourceInactive": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "FerroSpot",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "ig.ENTITY.FerroSpot.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.AnimatedEntity"
            ]
        },
        "ig.ENTITY.FerroSpot.effects": {
            "fields": {
                "sheet": {
                    "type": "ig.EffectSheet",
                    "isOptional": false
                },
                "handle": {
                    "type": "Nullable<ig.ENTITY.Effect>",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ENTITY": {
            "fields": {
                "FerroSpot": {
                    "type": "FerroSpotConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.FerroEntity.Settings": {
            "fields": {
                "spot": {
                    "type": "ig.ENTITY.FerroSpot",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": [
                "ig.Entity.Settings"
            ]
        },
        "sc.FerroEntity.State": {
            "fields": {
                "noInterrupt": {
                    "type": "boolean",
                    "isOptional": true
                },
                "noMerge": {
                    "type": "boolean",
                    "isOptional": true
                },
                "noBarrierStop": {
                    "type": "boolean",
                    "isOptional": true
                },
                "anims": {
                    "type": "Record<string, string>",
                    "isOptional": true
                },
                "elementReact": {
                    "type": "sc.ELEMENT[]",
                    "isOptional": true
                }
            },
            "functions": {
                "start": {
                    "returnType": "void | boolean",
                    "args": [
                        {
                            "name": "entity",
                            "type": "sc.FerroEntity",
                            "isOptional": false
                        },
                        {
                            "name": "vel",
                            "type": "Vec2",
                            "isOptional": false
                        },
                        {
                            "name": "combatant",
                            "type": "sc.BasicCombatant",
                            "isOptional": false
                        }
                    ]
                },
                "update": {
                    "returnType": "void | boolean",
                    "args": []
                },
                "onQuickStop": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "entity",
                            "type": "sc.FerroEntity",
                            "isOptional": false
                        }
                    ]
                },
                "breakIce": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "entity",
                            "type": "sc.FerroEntity",
                            "isOptional": false
                        }
                    ]
                },
                "onTouchGround": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "entity",
                            "type": "sc.FerroEntity",
                            "isOptional": false
                        },
                        {
                            "name": "num",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "explode": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "entity",
                            "type": "sc.FerroEntity",
                            "isOptional": false
                        }
                    ]
                },
                "ballHit": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "entity",
                            "type": "sc.FerroEntity",
                            "isOptional": false
                        },
                        {
                            "name": "vel",
                            "type": "Vec2",
                            "isOptional": false
                        },
                        {
                            "name": "entity1",
                            "type": "ig.Entity",
                            "isOptional": false
                        },
                        {
                            "name": "element",
                            "type": "sc.ELEMENT",
                            "isOptional": false
                        }
                    ]
                },
                "onMoveTrace": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "entity",
                            "type": "sc.FerroEntity",
                            "isOptional": false
                        },
                        {
                            "name": "entity1",
                            "type": "ig.Entity",
                            "isOptional": false
                        }
                    ]
                },
                "iceBreak": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "entity",
                            "type": "sc.FerroEntity",
                            "isOptional": false
                        }
                    ]
                },
                "onAttackHit": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "entity",
                            "type": "sc.FerroEntity",
                            "isOptional": false
                        }
                    ]
                },
                "ballHitFilter": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "entity",
                            "type": "sc.FerroEntity",
                            "isOptional": false
                        }
                    ]
                },
                "onOtherBallHit": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "entity",
                            "type": "sc.FerroEntity",
                            "isOptional": false
                        }
                    ]
                },
                "onCollideWith": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "entity",
                            "type": "sc.FerroEntity",
                            "isOptional": false
                        }
                    ]
                },
                "steam": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "entity",
                            "type": "sc.FerroEntity",
                            "isOptional": false
                        },
                        {
                            "name": "vel",
                            "type": "Vec2",
                            "isOptional": false
                        },
                        {
                            "name": "combatant",
                            "type": "sc.BasicCombatant",
                            "isOptional": false
                        }
                    ]
                },
                "shootFromWall": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "entity",
                            "type": "sc.FerroEntity",
                            "isOptional": false
                        },
                        {
                            "name": "vel",
                            "type": "Vec2",
                            "isOptional": false
                        },
                        {
                            "name": "combatant",
                            "type": "sc.BasicCombatant",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": []
        },
        "sc.FerroEntity.States": {
            "fields": {
                "IDLE": {
                    "type": "sc.FerroEntity.State",
                    "isOptional": false
                },
                "RESPAWN": {
                    "type": "sc.FerroEntity.State",
                    "isOptional": false
                },
                "DELETE": {
                    "type": "sc.FerroEntity.State",
                    "isOptional": false
                },
                "GATE_ABSORB": {
                    "type": "sc.FerroEntity.State",
                    "isOptional": false
                },
                "BARRIER_BREAK": {
                    "type": "sc.FerroEntity.State",
                    "isOptional": false
                },
                "NEUTRAL": {
                    "type": "sc.FerroEntity.State",
                    "isOptional": false
                },
                "BOUNCE_BACK": {
                    "type": "sc.FerroEntity.State",
                    "isOptional": false
                },
                "BOUNCE_BACK_BORDER": {
                    "type": "sc.FerroEntity.State",
                    "isOptional": false
                },
                "BOUNCE_BACK_SMALL": {
                    "type": "sc.FerroEntity.State",
                    "isOptional": false
                },
                "HEAT": {
                    "type": "sc.FerroEntity.State",
                    "isOptional": false
                },
                "COLD": {
                    "type": "sc.FerroEntity.State",
                    "isOptional": false
                },
                "SHOCK": {
                    "type": "sc.FerroEntity.State",
                    "isOptional": false
                },
                "WAVE": {
                    "type": "sc.FerroEntity.State",
                    "isOptional": false
                },
                "BOMB_FLY": {
                    "type": "sc.FerroEntity.State",
                    "isOptional": false
                },
                "ICEDISK": {
                    "type": "sc.FerroEntity.State",
                    "isOptional": false
                },
                "ICEDISK_SLIDE": {
                    "type": "sc.FerroEntity.State",
                    "isOptional": false
                },
                "WAVE_COMPRESSOR": {
                    "type": "sc.FerroEntity.State",
                    "isOptional": false
                },
                "SHOCK_COMPRESSOR": {
                    "type": "sc.FerroEntity.State",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.FerroEntity.Panel": {
            "fields": {},
            "functions": {
                "onBubbleBurst": {
                    "returnType": "void",
                    "args": []
                }
            },
            "parents": [
                "ig.Entity"
            ]
        },
        "sc.FerroEntity": {
            "fields": {
                "state": {
                    "type": "sc.FerroEntity.State",
                    "isOptional": false
                },
                "absorbState": {
                    "type": "Nullable<sc.FerroEntity.State>",
                    "isOptional": false
                },
                "timer": {
                    "type": "number",
                    "isOptional": false
                },
                "ignoreTimer": {
                    "type": "number",
                    "isOptional": false
                },
                "startZ": {
                    "type": "number",
                    "isOptional": false
                },
                "teleportBall": {
                    "type": "Nullable<ig.ENTITY.Ball>",
                    "isOptional": false
                },
                "panel": {
                    "type": "sc.FerroEntity.Panel",
                    "isOptional": false
                },
                "mergeTimer": {
                    "type": "number",
                    "isOptional": false
                },
                "mergeEntity": {
                    "type": "ig.Entity",
                    "isOptional": false
                },
                "mergeStartPos": {
                    "type": "Vec3",
                    "isOptional": false
                },
                "attackInfo": {
                    "type": "Nullable<sc.AttackInfo>",
                    "isOptional": false
                },
                "savedDir": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "element": {
                    "type": "Nullable<sc.ELEMENT>",
                    "isOptional": false
                },
                "combatant": {
                    "type": "Nullable<ig.ENTITY.Combatant>",
                    "isOptional": false
                },
                "collisionList": {
                    "type": "ig.Entity[]",
                    "isOptional": false
                },
                "collReleaseTimer": {
                    "type": "number",
                    "isOptional": false
                },
                "collReleaseTimeList": {
                    "type": "number[]",
                    "isOptional": false
                },
                "fastMode": {
                    "type": "boolean",
                    "isOptional": false
                },
                "speedFactor": {
                    "type": "number",
                    "isOptional": false
                },
                "phaseMode": {
                    "type": "boolean",
                    "isOptional": false
                },
                "phaseTraveled": {
                    "type": "number",
                    "isOptional": false
                },
                "wallKillTimer": {
                    "type": "number",
                    "isOptional": false
                },
                "enterWall": {
                    "type": "{ timer: number; dir: Vec2 }",
                    "isOptional": false
                },
                "slidingWall": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "blockCheck": {
                    "type": "number",
                    "isOptional": false
                },
                "turnSoundTimer": {
                    "type": "number",
                    "isOptional": false
                },
                "wallBounces": {
                    "type": "number",
                    "isOptional": false
                },
                "startCollType": {
                    "type": "ig.COLLTYPE",
                    "isOptional": false
                },
                "lastSpot": {
                    "type": "Nullable<ig.ENTITY.FerroSpot>",
                    "isOptional": false
                },
                "effects": {
                    "type": "Record<\n        'sheet' | 'bomb' | 'bubble' | 'handle' | 'hitHandle' | 'perma' | 'trail',\n        Nullable<ig.EffectSheet>\n      >",
                    "isOptional": false
                },
                "_wm": {
                    "type": "ig.Config",
                    "isOptional": false
                }
            },
            "functions": {
                "remove": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "absorb",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "respawn": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "spot",
                            "type": "ig.ENTITY.FerroSpot",
                            "isOptional": true
                        }
                    ]
                },
                "isRespawning": {
                    "returnType": "boolean",
                    "args": []
                },
                "assignSpot": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "spot",
                            "type": "ig.ENTITY.FerroSpot",
                            "isOptional": false
                        }
                    ]
                },
                "resetColl": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "dontResetAttackInfo",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "getAbsorbAnim": {
                    "returnType": "string",
                    "args": [
                        {
                            "name": "anim",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "handleSurrounding": {
                    "returnType": "void",
                    "args": []
                },
                "isCloseInEntity": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "entity",
                            "type": "ig.Entity",
                            "isOptional": false
                        }
                    ]
                },
                "updateStartZ": {
                    "returnType": "void",
                    "args": []
                },
                "setState": {
                    "returnType": "void | boolean",
                    "args": [
                        {
                            "name": "state",
                            "type": "sc.FerroEntity.State",
                            "isOptional": false
                        },
                        {
                            "name": "vel",
                            "type": "Vec2",
                            "isOptional": false
                        },
                        {
                            "name": "combatant",
                            "type": "sc.BasicCombatant",
                            "isOptional": false
                        }
                    ]
                },
                "setAbsorbState": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "absorbState",
                            "type": "sc.FerroEntity.State",
                            "isOptional": false
                        },
                        {
                            "name": "vel",
                            "type": "Nullable<Vec2>",
                            "isOptional": false
                        },
                        {
                            "name": "panel",
                            "type": "sc.FerroEntity.Panel",
                            "isOptional": false
                        }
                    ]
                },
                "setMergeEntity": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "mergeEntity",
                            "type": "ig.Entity",
                            "isOptional": false
                        }
                    ]
                },
                "clearAbsorbState": {
                    "returnType": "void",
                    "args": []
                },
                "overlapActivateCheck": {
                    "returnType": "void",
                    "args": []
                },
                "killCloseRegenDestruct": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "radius",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "exception",
                            "type": "ig.Entity",
                            "isOptional": true
                        }
                    ]
                },
                "onPhysicsSquish": {
                    "returnType": "void",
                    "args": []
                },
                "onTouchGround": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "num",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "handleMovementTrace": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "coll",
                            "type": "ig.CollEntry",
                            "isOptional": false
                        }
                    ]
                },
                "setTeleportBall": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "teleportBall",
                            "type": "ig.ENTITY.Ball",
                            "isOptional": false
                        }
                    ]
                },
                "clearTeleportBall": {
                    "returnType": "void",
                    "args": []
                },
                "onEntityKillDetach": {
                    "returnType": "void",
                    "args": []
                },
                "doTeleport": {
                    "returnType": "void",
                    "args": []
                },
                "onTeleportStart": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "waveTeleporter",
                            "type": "ig.ENTITY.WaveTeleport",
                            "isOptional": false
                        }
                    ]
                },
                "getTeleportZOffset": {
                    "returnType": "number",
                    "args": []
                },
                "getElement": {
                    "returnType": "sc.ELEMENT",
                    "args": []
                },
                "getCombatant": {
                    "returnType": "ig.ENTITY.Player",
                    "args": []
                },
                "getCombatantRoot": {
                    "returnType": "ig.ENTITY.Player",
                    "args": []
                },
                "getAttackInfo": {
                    "returnType": "sc.AttackInfo",
                    "args": []
                },
                "isWaterBubble": {
                    "returnType": "boolean",
                    "args": []
                },
                "isIceDisk": {
                    "returnType": "boolean",
                    "args": []
                },
                "steam": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "vel",
                            "type": "Vec2",
                            "isOptional": false
                        },
                        {
                            "name": "combatant",
                            "type": "sc.BasicCombatant",
                            "isOptional": false
                        }
                    ]
                },
                "isCompressor": {
                    "returnType": "boolean",
                    "args": []
                },
                "consume": {
                    "returnType": "void",
                    "args": []
                },
                "onCompressorMoveEnd": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "respawnOrSetIdle",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "_getAssistFactor": {
                    "returnType": "number",
                    "args": []
                },
                "isBallAdjust": {
                    "returnType": "boolean",
                    "args": []
                },
                "doBallAdjust": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "entity",
                            "type": "ig.Entity",
                            "isOptional": false
                        },
                        {
                            "name": "dest",
                            "type": "Vec2",
                            "isOptional": false
                        },
                        {
                            "name": "destSize",
                            "type": "Vec3",
                            "isOptional": false
                        }
                    ]
                },
                "isBallDestroyer": {
                    "returnType": "boolean",
                    "args": []
                },
                "shootFromWall": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "vel",
                            "type": "Vec2",
                            "isOptional": false
                        },
                        {
                            "name": "combatant",
                            "type": "sc.BasicCombatant",
                            "isOptional": true
                        }
                    ]
                },
                "init": {
                    "returnType": "FerroEntity",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "sc.FerroEntity.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": []
        },
        "sc.FerroEntity.enterWall": {
            "fields": {
                "timer": {
                    "type": "number",
                    "isOptional": false
                },
                "dir": {
                    "type": "Vec2",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc": {
            "fields": {
                "FerroEntity": {
                    "type": "FerroEntityConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "impact.feature.rumble.rumble": {
        "ig.Rumble": {
            "fields": {
                "rumbles": {
                    "type": "ig.Rumble.RumbleHandle[]",
                    "isOptional": false
                },
                "namedRumbles": {
                    "type": "Record<string, ig.Rumble.RumbleHandle>",
                    "isOptional": false
                },
                "offset": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "RumbleHandle": {
                    "type": "ig.Rumble.RumbleHandleConstructor",
                    "isOptional": false
                },
                "SHAKE_POWER": {
                    "type": "ig.Rumble.SHAKE_POWER",
                    "isOptional": false
                },
                "SHAKE_DURATION": {
                    "type": "ig.Rumble.SHAKE_DURATION",
                    "isOptional": false
                }
            },
            "functions": {
                "onPostUpdate": {
                    "returnType": "void",
                    "args": []
                },
                "onReset": {
                    "returnType": "void",
                    "args": []
                },
                "addRumble": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "rumble",
                            "type": "ig.Rumble.RumbleHandle",
                            "isOptional": false
                        }
                    ]
                },
                "removeRumble": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "rumble",
                            "type": "ig.Rumble.RumbleHandle",
                            "isOptional": false
                        }
                    ]
                },
                "getRumble": {
                    "returnType": "ig.Rumble.RumbleHandle | undefined",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "Rumble",
                    "args": []
                }
            },
            "parents": [
                "ig.GameAddon"
            ]
        },
        "ig": {
            "fields": {
                "Rumble": {
                    "type": "RumbleConstructor"
                },
                "rumble": {
                    "type": "Rumble"
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.Rumble.RumbleHandle": {
            "fields": {
                "type": {
                    "type": "number",
                    "isOptional": false
                },
                "name": {
                    "type": "Nullable<string | boolean>",
                    "isOptional": false
                },
                "power": {
                    "type": "number",
                    "isOptional": false
                },
                "shakeDuration": {
                    "type": "number",
                    "isOptional": false
                },
                "time": {
                    "type": "number",
                    "isOptional": false
                },
                "fade": {
                    "type": "boolean",
                    "isOptional": false
                },
                "offset": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "_target": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "_start": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "_temp": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "_timer": {
                    "type": "number",
                    "isOptional": false
                },
                "_duration": {
                    "type": "number",
                    "isOptional": false
                },
                "_shakeTimer": {
                    "type": "number",
                    "isOptional": false
                },
                "ignoreSlowDown": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "onEntityKillDetach": {
                    "returnType": "void",
                    "args": []
                },
                "update": {
                    "returnType": "void",
                    "args": []
                },
                "_updatePosition": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "power",
                            "type": "Vec2",
                            "isOptional": false
                        }
                    ]
                },
                "_lerp": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "target",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "start",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "alpha",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "stop": {
                    "returnType": "void",
                    "args": []
                },
                "isDone": {
                    "returnType": "boolean",
                    "args": []
                },
                "set": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "power",
                            "type": "keyof typeof ig.Rumble.SHAKE_POWER",
                            "isOptional": false
                        },
                        {
                            "name": "speed",
                            "type": "keyof typeof ig.Rumble.SHAKE_DURATION",
                            "isOptional": false
                        },
                        {
                            "name": "duration",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "fade",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "init": {
                    "returnType": "RumbleHandle",
                    "args": [
                        {
                            "name": "type",
                            "type": "keyof typeof ig.RUMBLE_TYPE",
                            "isOptional": false
                        },
                        {
                            "name": "power",
                            "type": "keyof typeof ig.Rumble.SHAKE_POWER",
                            "isOptional": false
                        },
                        {
                            "name": "speed",
                            "type": "keyof typeof ig.Rumble.SHAKE_DURATION",
                            "isOptional": false
                        },
                        {
                            "name": "duration",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "fade",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "name",
                            "type": "Nullable<string | boolean>",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "ig.Rumble.SHAKE_POWER": {
            "fields": {
                "WEAKESTEST": {
                    "type": "number",
                    "isOptional": false
                },
                "WEAKEST": {
                    "type": "number",
                    "isOptional": false
                },
                "WEAKER": {
                    "type": "number",
                    "isOptional": false
                },
                "WEAK": {
                    "type": "number",
                    "isOptional": false
                },
                "MEDIUM": {
                    "type": "number",
                    "isOptional": false
                },
                "STRONG": {
                    "type": "number",
                    "isOptional": false
                },
                "STRONGER": {
                    "type": "number",
                    "isOptional": false
                },
                "STRONGEST": {
                    "type": "number",
                    "isOptional": false
                },
                "MEGA": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.Rumble.SHAKE_DURATION": {
            "fields": {
                "SLOWEST": {
                    "type": "number",
                    "isOptional": false
                },
                "SLOWER": {
                    "type": "number",
                    "isOptional": false
                },
                "SLOW": {
                    "type": "number",
                    "isOptional": false
                },
                "NORMAL": {
                    "type": "number",
                    "isOptional": false
                },
                "FAST": {
                    "type": "number",
                    "isOptional": false
                },
                "FASTER": {
                    "type": "number",
                    "isOptional": false
                },
                "FASTEST": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "impact.base.dom": {},
    "game.feature.combat.combat-shield": {
        "sc.CombatShield": {
            "fields": {},
            "functions": {
                "isActive": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "combatant",
                            "type": "sc.PlayerBaseEntity",
                            "isOptional": false
                        },
                        {
                            "name": "attackingEntity",
                            "type": "sc.BasicCombatant.DamagingEntity",
                            "isOptional": false
                        },
                        {
                            "name": "attackInfo",
                            "type": "sc.AttackInfo",
                            "isOptional": false
                        },
                        {
                            "name": "receivingPart",
                            "type": "Nullable<sc.BasicCombatant.DamagingEntity>",
                            "isOptional": false
                        },
                        {
                            "name": "isPerfect",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "sc": {
            "fields": {
                "CombatShield": {
                    "type": "CombatShieldConstructor"
                },
                "CombatantShieldConnection": {
                    "type": "CombatantShieldConnectionConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.CombatantShieldConnection": {
            "fields": {
                "perfectGuardTime": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "resetPerfectGuardTime": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "CombatantShieldConnection",
                    "args": [
                        {
                            "name": "combatant",
                            "type": "ig.ENTITY.Combatant",
                            "isOptional": false
                        },
                        {
                            "name": "shield",
                            "type": "sc.CombatShield",
                            "isOptional": false
                        },
                        {
                            "name": "perfectGuardTime",
                            "type": "Nullable<number>",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "sc.COMBAT_SHIELDS.DIRECTIONAL": {
            "fields": {},
            "functions": {},
            "parents": [
                "sc.CombatShield"
            ]
        },
        "sc.COMBAT_SHIELDS": {
            "fields": {
                "DIRECIONAL": {
                    "type": "DIRECTIONAL_CONSTRUCTOR"
                },
                "PLAYER": {
                    "type": "PLAYER_CONSTRUCTOR"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.COMBAT_SHIELDS.PLAYER": {
            "fields": {
                "noShieldDamage": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": [
                "sc.COMBAT_SHIELDS.DIRECTIONAL"
            ]
        }
    },
    "game.feature.combat.combat": {
        "sc.AttackFrequency": {
            "fields": {
                "gap": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.ATTACK_FREQUENCY": {
            "fields": {
                "SPAMM": {
                    "type": "sc.AttackFrequency",
                    "isOptional": false
                },
                "OFTEN": {
                    "type": "sc.AttackFrequency",
                    "isOptional": false
                },
                "NORMAL": {
                    "type": "sc.AttackFrequency",
                    "isOptional": false
                },
                "SOMETIMES": {
                    "type": "sc.AttackFrequency",
                    "isOptional": false
                },
                "RARE": {
                    "type": "sc.AttackFrequency",
                    "isOptional": false
                },
                "VERY_RARE": {
                    "type": "sc.AttackFrequency",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc": {
            "fields": {
                "ATTACK_FREQUENCY": {
                    "type": "ATTACK_FREQUENCY"
                },
                "DRAMATIC_EFFECT": {
                    "type": "DRAMATIC_EFFECT"
                },
                "COMBAT_MSG_TYPE": {
                    "type": "COMBAT_MSG_TYPE"
                },
                "MIN_KILLS": {
                    "type": "number"
                },
                "Combat": {
                    "type": "CombatConstructor"
                },
                "combat": {
                    "type": "Combat"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.DramaticEffect": {
            "fields": {
                "timeFactor": {
                    "type": "number",
                    "isOptional": false
                },
                "wait": {
                    "type": "number",
                    "isOptional": false
                },
                "blurDuration": {
                    "type": "number",
                    "isOptional": false
                },
                "blurType": {
                    "type": "'NONE' | 'LIGHT'",
                    "isOptional": true
                },
                "clearTime": {
                    "type": "number",
                    "isOptional": false
                },
                "zoom": {
                    "type": "number",
                    "isOptional": false
                },
                "label": {
                    "type": "string",
                    "isOptional": true
                },
                "alwaysFocus": {
                    "type": "boolean",
                    "isOptional": true
                },
                "speedlines": {
                    "type": "boolean",
                    "isOptional": true
                },
                "break": {
                    "type": "boolean",
                    "isOptional": true
                },
                "camera": {
                    "type": "number",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.DRAMATIC_EFFECT": {
            "fields": {
                "HP_BREAK_ZOOM": {
                    "type": "sc.DramaticEffect",
                    "isOptional": false
                },
                "LAST_ENEMY_ZOOM": {
                    "type": "sc.DramaticEffect",
                    "isOptional": false
                },
                "BOSS_ZOOM": {
                    "type": "sc.DramaticEffect",
                    "isOptional": false
                },
                "BREAK_NONE": {
                    "type": "sc.DramaticEffect",
                    "isOptional": false
                },
                "BREAK_NO_TEXT": {
                    "type": "sc.DramaticEffect",
                    "isOptional": false
                },
                "BREAK_LIGHT": {
                    "type": "sc.DramaticEffect",
                    "isOptional": false
                },
                "BREAK": {
                    "type": "sc.DramaticEffect",
                    "isOptional": false
                },
                "BREAK_ALWAYS": {
                    "type": "sc.DramaticEffect",
                    "isOptional": false
                },
                "BREAK_BIG": {
                    "type": "sc.DramaticEffect",
                    "isOptional": false
                },
                "BREAK_WIDE": {
                    "type": "sc.DramaticEffect",
                    "isOptional": false
                },
                "BREAK_WIDE_NOSLOW": {
                    "type": "sc.DramaticEffect",
                    "isOptional": false
                },
                "OVERLOAD": {
                    "type": "sc.DramaticEffect",
                    "isOptional": false
                },
                "GUARD_COUNTER": {
                    "type": "sc.DramaticEffect",
                    "isOptional": false
                },
                "GUARD_BREAK": {
                    "type": "sc.DramaticEffect",
                    "isOptional": false
                },
                "RANK_UP": {
                    "type": "sc.DramaticEffect",
                    "isOptional": false
                },
                "S_RANK": {
                    "type": "sc.DramaticEffect",
                    "isOptional": false
                },
                "PVP_KO": {
                    "type": "sc.DramaticEffect",
                    "isOptional": false
                },
                "PVP_FINAL_KO": {
                    "type": "sc.DramaticEffect",
                    "isOptional": false
                },
                "ARENA_FINAL_KO": {
                    "type": "sc.DramaticEffect",
                    "isOptional": false
                },
                "ONCE_MORE": {
                    "type": "sc.DramaticEffect",
                    "isOptional": false
                },
                "ELEMENT_SHIELD": {
                    "type": "sc.DramaticEffect",
                    "isOptional": false
                },
                "PERFECT_DASH": {
                    "type": "sc.DramaticEffect",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.CombatMsgType": {
            "fields": {
                "icon": {
                    "type": "string",
                    "isOptional": false
                },
                "msg": {
                    "type": "string",
                    "isOptional": false
                },
                "keepPos": {
                    "type": "boolean",
                    "isOptional": false
                },
                "duration": {
                    "type": "number",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.COMBAT_MSG_TYPE": {
            "fields": {
                "STUN_CANCEL": {
                    "type": "CombatMsgType",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.Combat.ActionAttached": {
            "fields": {},
            "functions": {
                "onActionEndDetach": {
                    "returnType": "void",
                    "args": []
                }
            },
            "parents": []
        },
        "sc.Combat.Listener": {
            "fields": {},
            "functions": {
                "onCombatEvent": {
                    "returnType": "Listener",
                    "args": [
                        {
                            "name": "combatant",
                            "type": "ig.ENTITY.Combatant",
                            "isOptional": false
                        },
                        {
                            "name": "type",
                            "type": "sc.COMBAT_EVENT",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": []
        },
        "sc.Combat": {
            "fields": {
                "listeners": {
                    "type": "sc.Combat.Listener[]",
                    "isOptional": false
                },
                "actionToken": {
                    "type": "number[]",
                    "isOptional": false
                },
                "freeLineCommands": {
                    "type": "{ entity: ig.ENTITY.Combatant; time: number }[]",
                    "isOptional": false
                },
                "entity": {
                    "type": "ig.ENTITY.Combatant",
                    "isOptional": false
                },
                "time": {
                    "type": "number",
                    "isOptional": false
                },
                "activeCombatants": {
                    "type": "Record<sc.COMBATANT_PARTY, ig.ENTITY.Combatant[]>",
                    "isOptional": false
                },
                "forces": {
                    "type": "sc.CombatForce[]",
                    "isOptional": false
                },
                "active": {
                    "type": "boolean",
                    "isOptional": false
                },
                "speed": {
                    "type": "number",
                    "isOptional": false
                },
                "recentlyAttacked": {
                    "type": "ig.ENTITY.Enemy[]",
                    "isOptional": false
                },
                "playerStartedCombat": {
                    "type": "boolean",
                    "isOptional": false
                },
                "collabs": {
                    "type": "sc.EnemyCollab[]",
                    "isOptional": false
                },
                "hideDamageNumbers": {
                    "type": "boolean",
                    "isOptional": false
                },
                "effects": {
                    "type": "{\n        hit: ig.EffectSheet;\n        guard: ig.EffectSheet;\n        combat: ig.EffectSheet;\n        combatant: ig.EffectSheet;\n        throw: ig.EffectSheet;\n        mode: ig.EffectSheet;\n        heal: ig.EffectSheet;\n        cooldownHandle: ig.EffectSheet; // never actually used and is set to null\n      }",
                    "isOptional": false
                },
                "cooldownTick": {
                    "type": "{\n        sounds: { below: number; sound: ig.Sound }[];\n        hasCooldown: boolean;\n        currentSound: number;\n        endSound: ig.Sound;\n        handle: Nullable<ig.SoundHandle>;\n      }",
                    "isOptional": false
                },
                "stats": {
                    "type": "{\n        killStreak: number;\n        killedEnemies: string[];\n        prevRank: number;\n      }",
                    "isOptional": false
                },
                "finalDramaticEffect": {
                    "type": "Nullable<sc.DramaticEffect>",
                    "isOptional": false
                },
                "respawnBlocker": {
                    "type": "ig.CollEntry[]",
                    "isOptional": false
                },
                "enemyDataList": {
                    "type": "Record<string, sc.EnemyType>",
                    "isOptional": false
                },
                "postUpdateOrder": {
                    "type": "number",
                    "isOptional": false
                },
                "enemies": {
                    "type": "number",
                    "isOptional": false
                },
                "reports": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "_unlockAllEnemies": {
                    "returnType": "void",
                    "args": []
                },
                "setCombatSpeed": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "speed",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "getTotalEnemiesFound": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "percentage",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "category",
                            "type": "string",
                            "isOptional": true
                        }
                    ]
                },
                "getTotalEnemyReportsFound": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "percentage",
                            "type": "boolean | undefined",
                            "isOptional": false
                        },
                        {
                            "name": "category",
                            "type": "string | undefined",
                            "isOptional": false
                        },
                        {
                            "name": "saveInto",
                            "type": "{ enemies: number; reports: number }",
                            "isOptional": false
                        }
                    ]
                },
                "getEnemyMenuOffset": {
                    "returnType": "Nullable<Vec2>",
                    "args": [
                        {
                            "name": "enemyType",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "isEnemyAnalyzable": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "enemyType",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "addActiveCombatant": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "combatant",
                            "type": "ig.ENTITY.Combatant",
                            "isOptional": false
                        }
                    ]
                },
                "removeActiveCombatant": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "combatant",
                            "type": "ig.ENTITY.Combatant",
                            "isOptional": false
                        }
                    ]
                },
                "changeCombatantParty": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "combatant",
                            "type": "ig.ENTITY.Combatant",
                            "isOptional": false
                        },
                        {
                            "name": "party",
                            "type": "sc.COMBATANT_PARTY",
                            "isOptional": false
                        }
                    ]
                },
                "areSpawnersCleared": {
                    "returnType": "boolean",
                    "args": []
                },
                "getActiveCombatantCount": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "party",
                            "type": "sc.COMBATANT_PARTY",
                            "isOptional": false
                        },
                        {
                            "name": "enemyName",
                            "type": "string",
                            "isOptional": true
                        }
                    ]
                },
                "getActiveCombatants": {
                    "returnType": "ig.ENTITY.Combatant[]",
                    "args": [
                        {
                            "name": "party",
                            "type": "sc.COMBATANT_PARTY",
                            "isOptional": false
                        },
                        {
                            "name": "onScreen",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "isDamageIgnore": {
                    "returnType": "boolean",
                    "args": []
                },
                "getEnemyTarget": {
                    "returnType": "number",
                    "args": []
                },
                "_addPartyMember": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "list",
                            "type": "sc.PlayerBaseEntity[]",
                            "isOptional": false
                        },
                        {
                            "name": "partyMember",
                            "type": "sc.PartyMemberEntity",
                            "isOptional": false
                        },
                        {
                            "name": "targeting",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "getPlayerTarget": {
                    "returnType": "ig.ENTITY.Combatant",
                    "args": [
                        {
                            "name": "entity",
                            "type": "ig.Entity",
                            "isOptional": false
                        }
                    ]
                },
                "getActiveEnemiesNames": {
                    "returnType": "string[]",
                    "args": []
                },
                "getEnemyName": {
                    "returnType": "string",
                    "args": [
                        {
                            "name": "enemyId",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "getEnemyCategory": {
                    "returnType": "sc.ENEMY_CATEGORY",
                    "args": [
                        {
                            "name": "enemyId",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "canShowBoosted": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "enemyType",
                            "type": "sc.EnemyType",
                            "isOptional": false
                        }
                    ]
                },
                "canShowBoostedEntry": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "enemyName",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "isBoss",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "getEnemyLevel": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "enemyId",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "getEnemyArea": {
                    "returnType": "string",
                    "args": [
                        {
                            "name": "enemyId",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "getEnemyDrops": {
                    "returnType": "sc.EnemyType.ItemDrop[]",
                    "args": [
                        {
                            "name": "enemyId",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "setScreenEnemiesTarget": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "combatant",
                            "type": "sc.BasicCombatant",
                            "isOptional": false
                        }
                    ]
                },
                "removeEnemies": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "enemyName",
                            "type": "Optional<string>",
                            "isOptional": false
                        },
                        {
                            "name": "exclude",
                            "type": "ig.ENTITY.Enemy",
                            "isOptional": false
                        },
                        {
                            "name": "skipRumble",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "forceEvenIfNoParams",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "setFinalDramaticEffect": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "effect",
                            "type": "sc.DramaticEffect",
                            "isOptional": false
                        }
                    ]
                },
                "onCombatantDeathHit": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "attacker",
                            "type": "ig.ENTITY.Combatant",
                            "isOptional": false
                        },
                        {
                            "name": "victim",
                            "type": "ig.ENTITY.Combatant",
                            "isOptional": false
                        }
                    ]
                },
                "showCombatantLabel": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "entity",
                            "type": "ig.ENTITY.Combatant",
                            "isOptional": false
                        },
                        {
                            "name": "msg",
                            "type": "sc.CombatMsgType",
                            "isOptional": false
                        }
                    ]
                },
                "showCombatMessage": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "entity",
                            "type": "ig.ENTITY.Combatant",
                            "isOptional": false
                        },
                        {
                            "name": "text",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "hasCollabs": {
                    "returnType": "boolean",
                    "args": []
                },
                "doDramaticEffect": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "player",
                            "type": "ig.ENTITY.Player",
                            "isOptional": false
                        },
                        {
                            "name": "enemy",
                            "type": "ig.ENTITY.Enemy",
                            "isOptional": false
                        },
                        {
                            "name": "effect",
                            "type": "sc.DramaticEffect",
                            "isOptional": false
                        },
                        {
                            "name": "allSlowMotion",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "sendEnemyMessage": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "combatant",
                            "type": "ig.ENTITY.Combatant",
                            "isOptional": false
                        },
                        {
                            "name": "key",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "sendGlobalEnemyEvent": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "combatant",
                            "type": "ig.ENTITY.Combatant",
                            "isOptional": false
                        },
                        {
                            "name": "type",
                            "type": "sc.COMBAT_ENEMY_EVENT",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "sc.CombatEnemyEvent.Settings",
                            "isOptional": false
                        }
                    ]
                },
                "onPostUpdate": {
                    "returnType": "void",
                    "args": []
                },
                "onReset": {
                    "returnType": "void",
                    "args": []
                },
                "onLevelLoadStart": {
                    "returnType": "void",
                    "args": []
                },
                "addCombatForce": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "force",
                            "type": "sc.CombatForce",
                            "isOptional": false
                        }
                    ]
                },
                "setActive": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "active",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "forceEnd": {
                    "returnType": "void",
                    "args": []
                },
                "addCombatListener": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "listener",
                            "type": "sc.Combat.Listener",
                            "isOptional": false
                        }
                    ]
                },
                "removeCombatListener": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "listener",
                            "type": "sc.Combat.Listener",
                            "isOptional": false
                        }
                    ]
                },
                "gatherCollaborators": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "collab",
                            "type": "sc.EnemyCollab",
                            "isOptional": false
                        },
                        {
                            "name": "collabKey",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "label",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "min",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "max",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "acceptStunned",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "getNearbyThreat": {
                    "returnType": "Nullable<sc.BasicCombatant>",
                    "args": [
                        {
                            "name": "combatant",
                            "type": "ig.ENTITY.Combatant",
                            "isOptional": false
                        },
                        {
                            "name": "radius",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "viewAngle",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "combatCondition",
                            "type": "sc.CombatCondition",
                            "isOptional": true
                        }
                    ]
                },
                "getPartyHpFactor": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "party",
                            "type": "sc.COMBATANT_PARTY",
                            "isOptional": false
                        }
                    ]
                },
                "getAssistDamageFactor": {
                    "returnType": "number",
                    "args": []
                },
                "getAssistAttackFrequency": {
                    "returnType": "number",
                    "args": []
                },
                "notifyCombatantDefeated": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "combatant",
                            "type": "ig.ENTITY.Combatant",
                            "isOptional": false
                        },
                        {
                            "name": "resolveDefeat",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "notifyArena",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "updateCombatCompletionData": {
                    "returnType": "void",
                    "args": []
                },
                "getMultiToken": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "namesArr",
                            "type": "number[]",
                            "isOptional": false
                        },
                        {
                            "name": "timesArr",
                            "type": "number[]",
                            "isOptional": false
                        }
                    ]
                },
                "getActionToken": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "time",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "getGlobalDmgFactor": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "party",
                            "type": "sc.COMBATANT_PARTY",
                            "isOptional": false
                        }
                    ]
                },
                "initFrequencyTimers": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "enemy",
                            "type": "ig.ENTITY.Enemy",
                            "isOptional": false
                        }
                    ]
                },
                "checkFrequency": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "enemy",
                            "type": "ig.ENTITY.Enemy",
                            "isOptional": false
                        },
                        {
                            "name": "attackFrequency",
                            "type": "keyof typeof sc.ATTACK_FREQUENCY",
                            "isOptional": false
                        }
                    ]
                },
                "submitFrequency": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "party",
                            "type": "sc.COMBATANT_PARTY",
                            "isOptional": false
                        },
                        {
                            "name": "attackFrequency",
                            "type": "keyof typeof sc.ATTACK_FREQUENCY",
                            "isOptional": false
                        },
                        {
                            "name": "dontSetActionToken",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "_getTimerFrequencyFactor": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "enemy",
                            "type": "ig.ENTITY.Enemy",
                            "isOptional": false
                        },
                        {
                            "name": "activeEnemyCombatants",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "activeAllayCombatants",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "_getTokenFrequencyFactor": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "enemy",
                            "type": "ig.ENTITY.Enemy",
                            "isOptional": false
                        },
                        {
                            "name": "activeEnemyCombatants",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "activeAllayCombatants",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "addFreeLineCommand": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "entity",
                            "type": "ig.ENTITY.Combatant",
                            "isOptional": false
                        },
                        {
                            "name": "time",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "isBlockingFreeLine": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "entity",
                            "type": "ig.Entity",
                            "isOptional": false
                        }
                    ]
                },
                "showHitEffect": {
                    "returnType": "ig.ENTITY.Effect",
                    "args": [
                        {
                            "name": "entity",
                            "type": "ig.Entity",
                            "isOptional": false
                        },
                        {
                            "name": "hitPos",
                            "type": "Vec3",
                            "isOptional": false
                        },
                        {
                            "name": "hitDegree",
                            "type": "sc.ATTACK_TYPE",
                            "isOptional": false
                        },
                        {
                            "name": "hitElement",
                            "type": "sc.ELEMENT",
                            "isOptional": false
                        },
                        {
                            "name": "shielded",
                            "type": "boolean",
                            "isOptional": false
                        },
                        {
                            "name": "critical",
                            "type": "boolean",
                            "isOptional": false
                        },
                        {
                            "name": "ignoreSounds",
                            "type": "boolean",
                            "isOptional": false
                        },
                        {
                            "name": "spriteFilter",
                            "type": "number[]",
                            "isOptional": true
                        }
                    ]
                },
                "showPerfectDashEffect": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "target",
                            "type": "ig.ActorEntity",
                            "isOptional": false
                        }
                    ]
                },
                "showHealEffect": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "target",
                            "type": "ig.Entity",
                            "isOptional": false
                        }
                    ]
                },
                "showCharge": {
                    "returnType": "ig.ENTITY.Effect",
                    "args": [
                        {
                            "name": "target",
                            "type": "ig.Entity",
                            "isOptional": false
                        },
                        {
                            "name": "chargeLevelEffectName",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "element",
                            "type": "sc.ELEMENT",
                            "isOptional": true
                        }
                    ]
                },
                "showThrowEffect": {
                    "returnType": "ig.ENTITY.Effect",
                    "args": [
                        {
                            "name": "target",
                            "type": "ig.Entity",
                            "isOptional": false
                        },
                        {
                            "name": "element",
                            "type": "sc.ELEMENT",
                            "isOptional": false
                        },
                        {
                            "name": "charged",
                            "type": "boolean",
                            "isOptional": false
                        },
                        {
                            "name": "suffix",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "showModeChange": {
                    "returnType": "ig.ENTITY.Effect",
                    "args": [
                        {
                            "name": "combatant",
                            "type": "ig.ENTITY.Combatant",
                            "isOptional": false
                        },
                        {
                            "name": "element",
                            "type": "sc.ELEMENT",
                            "isOptional": false
                        }
                    ]
                },
                "showModeAura": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "combatant",
                            "type": "ig.ENTITY.Combatant",
                            "isOptional": false
                        },
                        {
                            "name": "element",
                            "type": "sc.ELEMENT",
                            "isOptional": false
                        }
                    ]
                },
                "clearModeAura": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "combatant",
                            "type": "ig.ENTITY.Combatant",
                            "isOptional": false
                        }
                    ]
                },
                "showModeDash": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "combatant",
                            "type": "ig.ENTITY.Combatant",
                            "isOptional": false
                        },
                        {
                            "name": "element",
                            "type": "sc.ELEMENT",
                            "isOptional": false
                        }
                    ]
                },
                "addRespawnBlocker": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "entity",
                            "type": "ig.Entity",
                            "isOptional": false
                        }
                    ]
                },
                "isRespawnBlocked": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "coll",
                            "type": "ig.CollEntry",
                            "isOptional": false
                        }
                    ]
                },
                "notifyNearbyEnemiesOfTarget": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "except",
                            "type": "ig.Entity",
                            "isOptional": false
                        },
                        {
                            "name": "radius",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "isInCombat": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "combatant",
                            "type": "ig.ENTITY.Combatant",
                            "isOptional": false
                        }
                    ]
                },
                "isPlayerPartyInCombat": {
                    "returnType": "boolean",
                    "args": []
                },
                "getEnemyAiExp": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "enemy",
                            "type": "ig.ENTITY.Enemy",
                            "isOptional": false
                        },
                        {
                            "name": "multiplier",
                            "type": "number",
                            "isOptional": true
                        }
                    ]
                },
                "getKillCount": {
                    "returnType": "void",
                    "args": []
                },
                "getElementMode": {
                    "returnType": "sc.ELEMENT",
                    "args": [
                        {
                            "name": "combatant",
                            "type": "ig.ENTITY.Combatant",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.GameAddon",
                "sc.Model",
                "ig.Vars.Accessor",
                "sc.Model.Observer"
            ]
        },
        "sc.Combat.effects": {
            "fields": {
                "hit": {
                    "type": "ig.EffectSheet",
                    "isOptional": false
                },
                "guard": {
                    "type": "ig.EffectSheet",
                    "isOptional": false
                },
                "combat": {
                    "type": "ig.EffectSheet",
                    "isOptional": false
                },
                "combatant": {
                    "type": "ig.EffectSheet",
                    "isOptional": false
                },
                "throw": {
                    "type": "ig.EffectSheet",
                    "isOptional": false
                },
                "mode": {
                    "type": "ig.EffectSheet",
                    "isOptional": false
                },
                "heal": {
                    "type": "ig.EffectSheet",
                    "isOptional": false
                },
                "cooldownHandle": {
                    "type": "ig.EffectSheet",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.Combat.cooldownTick": {
            "fields": {
                "sounds": {
                    "type": "{ below: number; sound: ig.Sound }[]",
                    "isOptional": false
                },
                "below": {
                    "type": "number",
                    "isOptional": false
                },
                "sound": {
                    "type": "ig.Sound",
                    "isOptional": false
                },
                "hasCooldown": {
                    "type": "boolean",
                    "isOptional": false
                },
                "currentSound": {
                    "type": "number",
                    "isOptional": false
                },
                "endSound": {
                    "type": "ig.Sound",
                    "isOptional": false
                },
                "handle": {
                    "type": "Nullable<ig.SoundHandle>",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.Combat.stats": {
            "fields": {
                "killStreak": {
                    "type": "number",
                    "isOptional": false
                },
                "killedEnemies": {
                    "type": "string[]",
                    "isOptional": false
                },
                "prevRank": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.combat.entities.combatant": {
        "sc.CombatFlyLevel": {
            "fields": {
                "vel": {
                    "type": "number",
                    "isOptional": false
                },
                "stun": {
                    "type": "number",
                    "isOptional": false
                },
                "jump": {
                    "type": "number",
                    "isOptional": false
                },
                "bounciness": {
                    "type": "number",
                    "isOptional": true
                },
                "airFriction": {
                    "type": "number",
                    "isOptional": true
                },
                "far": {
                    "type": "boolean",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "sc": {
            "fields": {
                "COMBAT_FLY_LEVEL": {
                    "type": "Record<string, CombatFlyLevel>"
                },
                "BasicCombatant": {
                    "type": "BasicCombatantConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.GetCombatant": {
            "fields": {},
            "functions": {
                "getCombatant": {
                    "returnType": "sc.BasicCombatant",
                    "args": []
                }
            },
            "parents": []
        },
        "sc.GetCombatantRoot": {
            "fields": {},
            "functions": {
                "getCombatantRoot": {
                    "returnType": "ig.ENTITY.Combatant",
                    "args": []
                }
            },
            "parents": []
        },
        "sc.BasicCombatant.Combo": {
            "fields": {
                "hitCombatants": {
                    "type": "sc.BasicCombatant[]",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.BasicCombatant.DamagingEntity": {
            "fields": {},
            "functions": {
                "getHitCenter": {
                    "returnType": "Vec3",
                    "args": [
                        {
                            "name": "entity",
                            "type": "ig.Entity",
                            "isOptional": false
                        },
                        {
                            "name": "dest",
                            "type": "Vec3",
                            "isOptional": false
                        }
                    ]
                },
                "getHitVel": {
                    "returnType": "Vec2",
                    "args": [
                        {
                            "name": "entity",
                            "type": "ig.Entity",
                            "isOptional": false
                        },
                        {
                            "name": "dest",
                            "type": "Vec2",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "sc.GetCombatant",
                "sc.GetCombatantRoot"
            ]
        },
        "sc.BasicCombatant": {
            "fields": {
                "combo": {
                    "type": "sc.BasicCombatant.Combo",
                    "isOptional": false
                },
                "tmpTarget": {
                    "type": "sc.BasicCombatant",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": [
                "sc.ActorEntity",
                "sc.GetCombatant",
                "sc.GetCombatantRoot"
            ]
        },
        "ig.ENTITY.Combatant.HitProperties": {
            "fields": {
                "damageResult": {
                    "type": "number",
                    "isOptional": false
                },
                "attackType": {
                    "type": "sc.ATTACK_TYPE",
                    "isOptional": true
                },
                "flyLevel": {
                    "type": "unknown",
                    "isOptional": true
                },
                "hitStable": {
                    "type": "unknown",
                    "isOptional": true
                },
                "blockedFactor": {
                    "type": "unknown",
                    "isOptional": true
                },
                "guardedHits": {
                    "type": "unknown",
                    "isOptional": true
                },
                "weakness": {
                    "type": "boolean",
                    "isOptional": false
                },
                "alignFace": {
                    "type": "boolean",
                    "isOptional": false
                },
                "ignoreHit": {
                    "type": "boolean",
                    "isOptional": false
                },
                "damageFactor": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ENTITY.Combatant": {
            "fields": {
                "params": {
                    "type": "sc.CombatParams",
                    "isOptional": false
                },
                "isCombatant": {
                    "type": "true",
                    "isOptional": false
                },
                "party": {
                    "type": "sc.COMBATANT_PARTY",
                    "isOptional": false
                },
                "damageTimer": {
                    "type": "number",
                    "isOptional": false
                },
                "defeatNotified": {
                    "type": "boolean",
                    "isOptional": false
                },
                "dying": {
                    "type": "sc.DYING_STATE",
                    "isOptional": false
                },
                "skipRumble": {
                    "type": "boolean",
                    "isOptional": false
                },
                "invincibleTimer": {
                    "type": "number",
                    "isOptional": false
                },
                "shieldsConnections": {
                    "type": "sc.CombatantShieldConnection[]",
                    "isOptional": false
                },
                "effects": {
                    "type": "Record<string, ig.EffectSheet>",
                    "isOptional": false
                }
            },
            "functions": {
                "setRespawnPoint": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "pos",
                            "type": "Vec3",
                            "isOptional": false
                        }
                    ]
                },
                "isDefeated": {
                    "returnType": "boolean",
                    "args": []
                },
                "setTarget": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "combatant",
                            "type": "sc.BasicCombatant",
                            "isOptional": false
                        },
                        {
                            "name": "fixed",
                            "type": "Nullable<boolean>",
                            "isOptional": true
                        }
                    ]
                },
                "onEnemyEvent": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "combatant",
                            "type": "ig.ENTITY.Combatant",
                            "isOptional": false
                        },
                        {
                            "name": "type",
                            "type": "sc.CombatEnemyEvent",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "Nullable<sc.CombatEnemyEvent.Settings>",
                            "isOptional": true
                        }
                    ]
                },
                "sendEnemyEvent": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "type",
                            "type": "sc.CombatEnemyEvent",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "sc.CombatEnemyEvent.Settings",
                            "isOptional": false
                        }
                    ]
                },
                "onPreDamageModification": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "modifications",
                            "type": "unknown",
                            "isOptional": false
                        },
                        {
                            "name": "damagingEntity",
                            "type": "sc.BasicCombatant.DamagingEntity",
                            "isOptional": false
                        },
                        {
                            "name": "attackInfo",
                            "type": "sc.AttackInfo",
                            "isOptional": false
                        },
                        {
                            "name": "partEntity",
                            "type": "Nullable<sc.BasicCombatant.DamagingEntity>",
                            "isOptional": false
                        },
                        {
                            "name": "damageResult",
                            "type": "sc.CombatParams.DamageResult",
                            "isOptional": false
                        },
                        {
                            "name": "shieldResult",
                            "type": "sc.SHIELD_RESULT",
                            "isOptional": false
                        }
                    ]
                },
                "_onDeathHit": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "attacker",
                            "type": "ig.ENTITY.Combatant",
                            "isOptional": false
                        }
                    ]
                },
                "heal": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "healInfo",
                            "type": "sc.HealInfoType",
                            "isOptional": false
                        },
                        {
                            "name": "hideNumbers",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "instantDefeat": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "skipRumble",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "forceEvenIfNoParams",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "resetStunData": {
                    "returnType": "void",
                    "args": []
                },
                "onHeal": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "healInfo",
                            "type": "sc.HealInfoType",
                            "isOptional": false
                        },
                        {
                            "name": "amount",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "ig.ENTITY.Combatant",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "ig.Entity.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "sc.BasicCombatant"
            ]
        },
        "ig.ENTITY": {
            "fields": {
                "Combatant": {
                    "type": "CombatantConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.combat.entities.enemy": {
        "ig.ENTITY.Enemy.Settings": {
            "fields": {
                "enemyInfo": {
                    "type": "sc.EnemyInfo.Settings",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": [
                "ig.Entity.Settings"
            ]
        },
        "ig.ENTITY.Enemy.Level": {
            "fields": {
                "override": {
                    "type": "number | null",
                    "isOptional": false
                },
                "setting": {
                    "type": "number | null",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ENTITY.Enemy": {
            "fields": {
                "aggression": {
                    "type": "sc.ENEMY_AGGRESSION",
                    "isOptional": false
                },
                "enemyName": {
                    "type": "string",
                    "isOptional": false
                },
                "enemyType": {
                    "type": "sc.EnemyType",
                    "isOptional": false
                },
                "enemyGroup": {
                    "type": "string",
                    "isOptional": false
                },
                "defeatVarIncrease": {
                    "type": "Nullable<string>",
                    "isOptional": false
                },
                "enemyTypeInitialized": {
                    "type": "boolean",
                    "isOptional": false
                },
                "dropHealOrb": {
                    "type": "number",
                    "isOptional": false
                },
                "hpAttached": {
                    "type": "{ enemy: Nullable<ig.ENTITY.Enemy>; value: number }",
                    "isOptional": false
                },
                "spawnPoint": {
                    "type": "Vec3",
                    "isOptional": false
                },
                "currentState": {
                    "type": "string",
                    "isOptional": false
                },
                "postStun": {
                    "type": "{ choice: Nullable<sc.EnemyReactionBase>; collab: Nullable<sc.EnemyCollab> }",
                    "isOptional": false
                },
                "nextState": {
                    "type": "Nullable<string>",
                    "isOptional": false
                },
                "nextTimerChange": {
                    "type": "Record<string, number>",
                    "isOptional": false
                },
                "stateTimers": {
                    "type": "Record<string, number>",
                    "isOptional": false
                },
                "trackers": {
                    "type": "Record<string, sc.EnemyTracker>",
                    "isOptional": false
                },
                "deferredPerformedConds": {
                    "type": "sc.CombatCondition[]",
                    "isOptional": false
                },
                "targetLoseTimer": {
                    "type": "number",
                    "isOptional": false
                },
                "reactions": {
                    "type": "{\n        enabled: string[];\n        current: Nullable<string>;\n        running: Nullable<sc.EnemyReactionBase>;\n        restartAction: Nullable<ig.Action>;\n      }",
                    "isOptional": false
                },
                "dodge": {
                    "type": "{\n        count: number;\n        timer: number;\n        blocked: number;\n        cunterReactTime: number;\n        counterCooldown: number;\n        counterCooldownMax: number;\n      }",
                    "isOptional": false
                },
                "annotate": {
                    "type": "{\n        active: number;\n        passive: number;\n        weapon: number;\n        element: number;\n        extra: Nullable<number>;\n      }",
                    "isOptional": false
                },
                "hpBreakReached": {
                    "type": "number",
                    "isOptional": false
                },
                "lastPoICheck": {
                    "type": "Nullable<sc.BasicCombatant>",
                    "isOptional": false
                },
                "targetFixed": {
                    "type": "boolean",
                    "isOptional": false
                },
                "collaboration": {
                    "type": "Nullable<sc.EnemyCollab>",
                    "isOptional": false
                },
                "collabAttribs": {
                    "type": "Nullable<sc.EnemyCollab.CollabAttribs>",
                    "isOptional": false
                },
                "elementModes": {
                    "type": "sc.EnemyType.ElementModes",
                    "isOptional": false
                },
                "storedEnemies": {
                    "type": "ig.ENTITY.Enemy[]",
                    "isOptional": false
                },
                "ownerEnemy": {
                    "type": "Nullable<ig.ENTITY.Enemy>",
                    "isOptional": false
                },
                "cameraZFocus": {
                    "type": "number",
                    "isOptional": false
                },
                "startEffect": {
                    "type": "ig.EffectHandle",
                    "isOptional": false
                },
                "targetOnSpawn": {
                    "type": "boolean",
                    "isOptional": false
                },
                "boosterState": {
                    "type": "sc.ENEMY_BOOSTER_STATE",
                    "isOptional": false
                },
                "level": {
                    "type": "Enemy.Level",
                    "isOptional": false
                },
                "visibility": {
                    "type": "{ analyzable: boolean; hpBar: sc.ENEMY_HP_BAR }",
                    "isOptional": false
                },
                "_wm": {
                    "type": "ig.Config",
                    "isOptional": false
                }
            },
            "functions": {
                "setElementMode": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "element",
                            "type": "sc.ELEMENT",
                            "isOptional": false
                        },
                        {
                            "name": "noEffects",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "connectHpToEnemies": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "enemies",
                            "type": "ig.ENTITY.Enemy[]",
                            "isOptional": false
                        }
                    ]
                },
                "setLevelOverride": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "newLevel",
                            "type": "Nullable<number>",
                            "isOptional": true
                        }
                    ]
                },
                "getLevel": {
                    "returnType": "number",
                    "args": []
                },
                "storeEnemy": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "enemy",
                            "type": "ig.ENTITY.Enemy",
                            "isOptional": false
                        }
                    ]
                },
                "onStoredRelease": {
                    "returnType": "boolean | void",
                    "args": []
                },
                "onMagnetStart": {
                    "returnType": "boolean",
                    "args": []
                },
                "onMagnetEnd": {
                    "returnType": "void",
                    "args": []
                },
                "isBoss": {
                    "returnType": "boolean",
                    "args": []
                },
                "getHeadIdx": {
                    "returnType": "number",
                    "args": []
                },
                "onHideRequest": {
                    "returnType": "void",
                    "args": []
                },
                "setCounterCooldown": {
                    "returnType": "void",
                    "args": []
                },
                "onFallBehavior": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "terrain",
                            "type": "ig.TERRAIN",
                            "isOptional": false
                        }
                    ]
                },
                "postActionUpdate": {
                    "returnType": "void",
                    "args": []
                },
                "onStunEnd": {
                    "returnType": "void",
                    "args": []
                },
                "changeState": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "state",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "immediate",
                            "type": "Nullable<boolean>",
                            "isOptional": true
                        },
                        {
                            "name": "switchStateConfig",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "_delegateDamage": {
                    "returnType": "void",
                    "args": []
                },
                "onInstantDamage": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "damage",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "hitProperties",
                            "type": "ig.ENTITY.Combatant.HitProperties",
                            "isOptional": false
                        }
                    ]
                },
                "_checkHitReactions": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "hitProperties",
                            "type": "ig.ENTITY.Combatant.HitProperties",
                            "isOptional": false
                        },
                        {
                            "name": "damagingEntity",
                            "type": "sc.BasicCombatant.DamagingEntity",
                            "isOptional": false
                        },
                        {
                            "name": "attackInfo",
                            "type": "sc.AttackInfo",
                            "isOptional": false
                        },
                        {
                            "name": "strict",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "collabReady": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "collabKey",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "doCollabReaction": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "collabKey",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "getEnemyAction": {
                    "returnType": "ig.Action",
                    "args": [
                        {
                            "name": "action",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "doEnemyAction": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "actionName",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "noStateReset",
                            "type": "boolean",
                            "isOptional": false
                        },
                        {
                            "name": "inline",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "onNavigationFailed": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "count",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "onDefeat": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "noResolve",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "enableReactions": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "reactions",
                            "type": "string[]",
                            "isOptional": false
                        }
                    ]
                },
                "enableReaction": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "reaction",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "disableReaction": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "reaction",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "ig.ENTITY.Enemy",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "ig.ENTITY.Enemy.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.ENTITY.Combatant"
            ]
        },
        "ig.ENTITY.Enemy.hpAttached": {
            "fields": {
                "enemy": {
                    "type": "Nullable<ig.ENTITY.Enemy>",
                    "isOptional": false
                },
                "value": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ENTITY.Enemy.postStun": {
            "fields": {
                "choice": {
                    "type": "Nullable<sc.EnemyReactionBase>",
                    "isOptional": false
                },
                "collab": {
                    "type": "Nullable<sc.EnemyCollab>",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ENTITY.Enemy.reactions": {
            "fields": {
                "enabled": {
                    "type": "string[]",
                    "isOptional": false
                },
                "current": {
                    "type": "Nullable<string>",
                    "isOptional": false
                },
                "running": {
                    "type": "Nullable<sc.EnemyReactionBase>",
                    "isOptional": false
                },
                "restartAction": {
                    "type": "Nullable<ig.Action>",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ENTITY.Enemy.dodge": {
            "fields": {
                "count": {
                    "type": "number",
                    "isOptional": false
                },
                "timer": {
                    "type": "number",
                    "isOptional": false
                },
                "blocked": {
                    "type": "number",
                    "isOptional": false
                },
                "cunterReactTime": {
                    "type": "number",
                    "isOptional": false
                },
                "counterCooldown": {
                    "type": "number",
                    "isOptional": false
                },
                "counterCooldownMax": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ENTITY.Enemy.annotate": {
            "fields": {
                "active": {
                    "type": "number",
                    "isOptional": false
                },
                "passive": {
                    "type": "number",
                    "isOptional": false
                },
                "weapon": {
                    "type": "number",
                    "isOptional": false
                },
                "element": {
                    "type": "number",
                    "isOptional": false
                },
                "extra": {
                    "type": "Nullable<number>",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ENTITY.Enemy.visibility": {
            "fields": {
                "analyzable": {
                    "type": "boolean",
                    "isOptional": false
                },
                "hpBar": {
                    "type": "sc.ENEMY_HP_BAR",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ENTITY": {
            "fields": {
                "Enemy": {
                    "type": "EnemyConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.combat.entities.hit-number": {
        "sc.HitNumberEntityBase": {
            "fields": {},
            "functions": {
                "init": {
                    "returnType": "HitNumberEntityBase",
                    "args": []
                }
            },
            "parents": [
                "ig.Entity"
            ]
        },
        "sc": {
            "fields": {
                "HitNumberEntityBase": {
                    "type": "HitNumberEntityBaseConstructor"
                },
                "HitNumberTools": {
                    "type": "HitNumberTools"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.HitNumberTools.PlaceHitNumberReturn": {
            "fields": {
                "xMin": {
                    "type": "number",
                    "isOptional": false
                },
                "yMin": {
                    "type": "number",
                    "isOptional": false
                },
                "xMax": {
                    "type": "number",
                    "isOptional": false
                },
                "yMax": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.HitNumberTools": {
            "fields": {},
            "functions": {
                "placeHitNumber": {
                    "returnType": "sc.HitNumberTools.PlaceHitNumberReturn",
                    "args": [
                        {
                            "name": "coll",
                            "type": "ig.CollEntry",
                            "isOptional": false
                        },
                        {
                            "name": "offX",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "offY",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "dontRandomize",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "updateBlocker": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "minMax",
                            "type": "sc.HitNumberTools.PlaceHitNumberReturn",
                            "isOptional": false
                        },
                        {
                            "name": "coll",
                            "type": "ig.CollEntry",
                            "isOptional": false
                        },
                        {
                            "name": "offX",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "offY",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": []
        },
        "ig.ENTITY.HitNumber.Settings": {
            "fields": {},
            "functions": {},
            "parents": [
                "ig.Entity.Settings"
            ]
        },
        "ig.ENTITY.HitNumber": {
            "fields": {},
            "functions": {
                "init": {
                    "returnType": "HitNumber",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "ig.ENTITY.HitNumber.Settings",
                            "isOptional": false
                        }
                    ]
                },
                "spawnHealingNumber": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "pos",
                            "type": "Vec3",
                            "isOptional": false
                        },
                        {
                            "name": "entity",
                            "type": "ig.Entity",
                            "isOptional": false
                        },
                        {
                            "name": "healAmount",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "sc.HitNumberEntityBase"
            ]
        },
        "ig.ENTITY": {
            "fields": {
                "HitNumber": {
                    "type": "HitNumberConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.npc.entities.sc-actor": {
        "sc.ACTOR_SOUND_BASE": {
            "fields": {
                "jump": {
                    "type": "ig.Sound",
                    "isOptional": true
                },
                "land": {
                    "type": "ig.Sound",
                    "isOptional": true
                },
                "step1": {
                    "type": "ig.Sound",
                    "isOptional": true
                },
                "step2": {
                    "type": "ig.Sound",
                    "isOptional": true
                },
                "stepFx": {
                    "type": "string",
                    "isOptional": true
                },
                "stepFaceAlign": {
                    "type": "boolean",
                    "isOptional": true
                },
                "cancelOnChange": {
                    "type": "boolean",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "sc": {
            "fields": {
                "ACTOR_SOUND": {
                    "type": "{\n            none: {\n                [ig.TERRAIN.NORMAL]: ACTOR_SOUND_BASE\n            }\n            default: {\n                [ig.TERRAIN.NORMAL]: ACTOR_SOUND_BASE\n                [ig.TERRAIN.CARDBOARD]: ACTOR_SOUND_BASE\n                [ig.TERRAIN.EARTH]: ACTOR_SOUND_BASE\n                [ig.TERRAIN.GRASS]: ACTOR_SOUND_BASE\n                [ig.TERRAIN.WOOD]: ACTOR_SOUND_BASE\n                [ig.TERRAIN.STONE]: ACTOR_SOUND_BASE\n                [ig.TERRAIN.METALSOLID]: ACTOR_SOUND_BASE\n                [ig.TERRAIN.METAL_HOLLOW]: ACTOR_SOUND_BASE\n                [ig.TERRAIN.SNOW]: ACTOR_SOUND_BASE\n                [ig.TERRAIN.ICE]: ACTOR_SOUND_BASE\n                [ig.TERRAIN.SAND]: ACTOR_SOUND_BASE\n                [ig.TERRAIN.QUICKSAND]: ACTOR_SOUND_BASE\n                [ig.TERRAIN.SHALLOW_WATER]: ACTOR_SOUND_BASE\n                [ig.TERRAIN.LASER]: ACTOR_SOUND_BASE\n                [ig.TERRAIN.CRYSTAL]: ACTOR_SOUND_BASE\n                [ig.TERRAIN.BEACH_SAND]: ACTOR_SOUND_BASE\n                [ig.TERRAIN.BEACH_WATER]: ACTOR_SOUND_BASE\n            }\n            defaultQuiet: {\n                [ig.TERRAIN.NORMAL]: ACTOR_SOUND_BASE\n            }\n            giantMashine: {\n                [ig.TERRAIN.NORMAL]: ACTOR_SOUND_BASE\n            }\n            colDngBoss: {\n                [ig.TERRAIN.NORMAL]: ACTOR_SOUND_BASE\n            }\n            slime: {\n                [ig.TERRAIN.NORMAL]: ACTOR_SOUND_BASE\n            }\n        }"
                },
                "none": {
                    "type": "{\n                [ig.TERRAIN.NORMAL]: ACTOR_SOUND_BASE\n            }",
                    "isOptional": false
                },
                "default": {
                    "type": "{\n                [ig.TERRAIN.NORMAL]: ACTOR_SOUND_BASE\n                [ig.TERRAIN.CARDBOARD]: ACTOR_SOUND_BASE\n                [ig.TERRAIN.EARTH]: ACTOR_SOUND_BASE\n                [ig.TERRAIN.GRASS]: ACTOR_SOUND_BASE\n                [ig.TERRAIN.WOOD]: ACTOR_SOUND_BASE\n                [ig.TERRAIN.STONE]: ACTOR_SOUND_BASE\n                [ig.TERRAIN.METALSOLID]: ACTOR_SOUND_BASE\n                [ig.TERRAIN.METAL_HOLLOW]: ACTOR_SOUND_BASE\n                [ig.TERRAIN.SNOW]: ACTOR_SOUND_BASE\n                [ig.TERRAIN.ICE]: ACTOR_SOUND_BASE\n                [ig.TERRAIN.SAND]: ACTOR_SOUND_BASE\n                [ig.TERRAIN.QUICKSAND]: ACTOR_SOUND_BASE\n                [ig.TERRAIN.SHALLOW_WATER]: ACTOR_SOUND_BASE\n                [ig.TERRAIN.LASER]: ACTOR_SOUND_BASE\n                [ig.TERRAIN.CRYSTAL]: ACTOR_SOUND_BASE\n                [ig.TERRAIN.BEACH_SAND]: ACTOR_SOUND_BASE\n                [ig.TERRAIN.BEACH_WATER]: ACTOR_SOUND_BASE\n            }",
                    "isOptional": false
                },
                "defaultQuiet": {
                    "type": "{\n                [ig.TERRAIN.NORMAL]: ACTOR_SOUND_BASE\n            }",
                    "isOptional": false
                },
                "giantMashine": {
                    "type": "{\n                [ig.TERRAIN.NORMAL]: ACTOR_SOUND_BASE\n            }",
                    "isOptional": false
                },
                "colDngBoss": {
                    "type": "{\n                [ig.TERRAIN.NORMAL]: ACTOR_SOUND_BASE\n            }",
                    "isOptional": false
                },
                "slime": {
                    "type": "{\n                [ig.TERRAIN.NORMAL]: ACTOR_SOUND_BASE\n            }",
                    "isOptional": false
                },
                "ActorEntity": {
                    "type": "ActorEntityConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.none": {
            "fields": {
                "[ig.TERRAIN.NORMAL]": {
                    "type": "ACTOR_SOUND_BASE",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.default": {
            "fields": {
                "[ig.TERRAIN.NORMAL]": {
                    "type": "ACTOR_SOUND_BASE",
                    "isOptional": false
                },
                "[ig.TERRAIN.CARDBOARD]": {
                    "type": "ACTOR_SOUND_BASE",
                    "isOptional": false
                },
                "[ig.TERRAIN.EARTH]": {
                    "type": "ACTOR_SOUND_BASE",
                    "isOptional": false
                },
                "[ig.TERRAIN.GRASS]": {
                    "type": "ACTOR_SOUND_BASE",
                    "isOptional": false
                },
                "[ig.TERRAIN.WOOD]": {
                    "type": "ACTOR_SOUND_BASE",
                    "isOptional": false
                },
                "[ig.TERRAIN.STONE]": {
                    "type": "ACTOR_SOUND_BASE",
                    "isOptional": false
                },
                "[ig.TERRAIN.METALSOLID]": {
                    "type": "ACTOR_SOUND_BASE",
                    "isOptional": false
                },
                "[ig.TERRAIN.METAL_HOLLOW]": {
                    "type": "ACTOR_SOUND_BASE",
                    "isOptional": false
                },
                "[ig.TERRAIN.SNOW]": {
                    "type": "ACTOR_SOUND_BASE",
                    "isOptional": false
                },
                "[ig.TERRAIN.ICE]": {
                    "type": "ACTOR_SOUND_BASE",
                    "isOptional": false
                },
                "[ig.TERRAIN.SAND]": {
                    "type": "ACTOR_SOUND_BASE",
                    "isOptional": false
                },
                "[ig.TERRAIN.QUICKSAND]": {
                    "type": "ACTOR_SOUND_BASE",
                    "isOptional": false
                },
                "[ig.TERRAIN.SHALLOW_WATER]": {
                    "type": "ACTOR_SOUND_BASE",
                    "isOptional": false
                },
                "[ig.TERRAIN.LASER]": {
                    "type": "ACTOR_SOUND_BASE",
                    "isOptional": false
                },
                "[ig.TERRAIN.CRYSTAL]": {
                    "type": "ACTOR_SOUND_BASE",
                    "isOptional": false
                },
                "[ig.TERRAIN.BEACH_SAND]": {
                    "type": "ACTOR_SOUND_BASE",
                    "isOptional": false
                },
                "[ig.TERRAIN.BEACH_WATER]": {
                    "type": "ACTOR_SOUND_BASE",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.defaultQuiet": {
            "fields": {
                "[ig.TERRAIN.NORMAL]": {
                    "type": "ACTOR_SOUND_BASE",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.giantMashine": {
            "fields": {
                "[ig.TERRAIN.NORMAL]": {
                    "type": "ACTOR_SOUND_BASE",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.colDngBoss": {
            "fields": {
                "[ig.TERRAIN.NORMAL]": {
                    "type": "ACTOR_SOUND_BASE",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.slime": {
            "fields": {
                "[ig.TERRAIN.NORMAL]": {
                    "type": "ACTOR_SOUND_BASE",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.ActorEntity": {
            "fields": {
                "soundType": {
                    "type": "'default'",
                    "isOptional": false
                },
                "dustType": {
                    "type": "sc.ACTOR_DUST",
                    "isOptional": false
                },
                "stepFx": {
                    "type": "{ frames: number[], lastFrame: number, effects: ig.EffectSheet, prevTerrain: Nullable<ig.TERRAIN>, prevEffect: Nullable<ig.ENTITY.Effect> }",
                    "isOptional": false
                },
                "nav": {
                    "type": "{ path: ig.NavPath, failTimer: number, lastFailCount: number }",
                    "isOptional": false
                },
                "tooHighToFall": {
                    "type": "boolean",
                    "isOptional": false
                },
                "stepStats": {
                    "type": "{ terrain: ig.TERRAIN, centerTerrain: number }",
                    "isOptional": false
                },
                "influencer": {
                    "type": "ig.Influencer",
                    "isOptional": false
                }
            },
            "functions": {
                "onTerrainUpdate": {
                    "returnType": "void",
                    "args": []
                },
                "onMoveEffect": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "type",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "onJump": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "addedHeight",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "ignoreSounds",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "onNavigationFailed": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "failTimer",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "sc.ActorEntity",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "ig.Entity.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.ActorEntity"
            ]
        },
        "sc.ActorEntity.stepFx": {
            "fields": {
                "frames": {
                    "type": "number[]",
                    "isOptional": false
                },
                "lastFrame": {
                    "type": "number",
                    "isOptional": false
                },
                "effects": {
                    "type": "ig.EffectSheet",
                    "isOptional": false
                },
                "prevTerrain": {
                    "type": "Nullable<ig.TERRAIN>",
                    "isOptional": false
                },
                "prevEffect": {
                    "type": "Nullable<ig.ENTITY.Effect>",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.ActorEntity.nav": {
            "fields": {
                "path": {
                    "type": "ig.NavPath",
                    "isOptional": false
                },
                "failTimer": {
                    "type": "number",
                    "isOptional": false
                },
                "lastFailCount": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.ActorEntity.stepStats": {
            "fields": {
                "terrain": {
                    "type": "ig.TERRAIN",
                    "isOptional": false
                },
                "centerTerrain": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.player.entities.player-base": {
        "sc.PlayerBaseEntity.Guard": {
            "fields": {
                "damage": {
                    "type": "number",
                    "isOptional": false
                },
                "timer": {
                    "type": "number",
                    "isOptional": false
                },
                "fxSheet": {
                    "type": "ig.EffectSheet",
                    "isOptional": false
                },
                "fxHandle": {
                    "type": "ig.ENTITY.Effect",
                    "isOptional": false
                },
                "currentKey": {
                    "type": "string",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.PlayerBaseEntity": {
            "fields": {
                "configs": {
                    "type": "{\n        normal: ig.ActorConfig;\n        aiming: ig.ActorConfig;\n      }",
                    "isOptional": false
                },
                "maxJumpHeight": {
                    "type": "number",
                    "isOptional": false
                },
                "guard": {
                    "type": "PlayerBaseEntity.Guard",
                    "isOptional": false
                }
            },
            "functions": {
                "damageShield": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "damage",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "PlayerBaseEntity",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "ig.Entity.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.ENTITY.Combatant"
            ]
        },
        "sc.PlayerBaseEntity.configs": {
            "fields": {
                "normal": {
                    "type": "ig.ActorConfig",
                    "isOptional": false
                },
                "aiming": {
                    "type": "ig.ActorConfig",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc": {
            "fields": {
                "PlayerBaseEntity": {
                    "type": "PlayerBaseEntityConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.player.player-steps": {
        "ig.EVENT_STEP.RESET_SKILL_TREE.Settings": {
            "fields": {
                "element": {
                    "type": "keyof typeof sc.ELEMENT",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.EVENT_STEP.RESET_SKILL_TREE": {
            "fields": {
                "element": {
                    "type": "sc.ELEMENT",
                    "isOptional": false
                },
                "_wm": {
                    "type": "ig.Config",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "RESET_SKILL_TREE",
                    "args": [
                        {
                            "name": "settings",
                            "type": "ig.EVENT_STEP.RESET_SKILL_TREE.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.EventStepBase"
            ]
        },
        "ig.EVENT_STEP": {
            "fields": {
                "RESET_SKILL_TREE": {
                    "type": "RESET_SKILL_TREEConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ACTION_STEP.SET_PLAYER_INVINCIBLE": {
            "fields": {
                "factor": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "run": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "target",
                            "type": "ig.ENTITY.Player",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ActionStepBase"
            ]
        },
        "ig.ACTION_STEP": {
            "fields": {
                "SET_PLAYER_INVINCIBLE": {
                    "type": "SET_PLAYER_INVINCIBLE_CONSTRUCTOR"
                },
                "SHOW_FOOD_ICON": {
                    "type": "SHOW_FOOD_ICON_CONSTRUCTOR"
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ACTION_STEP.SHOW_FOOD_ICON.Settings": {
            "fields": {
                "icon": {
                    "type": "keyof typeof sc.FOOD_SPRITE",
                    "isOptional": false
                },
                "offset": {
                    "type": "Nullable<Vec2>",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ACTION_STEP.SHOW_FOOD_ICON": {
            "fields": {
                "icon": {
                    "type": "number",
                    "isOptional": false
                },
                "offset": {
                    "type": "Nullable<Vec2>",
                    "isOptional": true
                }
            },
            "functions": {
                "start": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "target",
                            "type": "ig.ENTITY.Combatant",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "SHOW_FOOD_ICON",
                    "args": [
                        {
                            "name": "settings",
                            "type": "SHOW_FOOD_ICON.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ActionStepBase"
            ]
        },
        "ig.ACTION_STEP.SET_PLAYER_ACTION_BLOCK.BlockData": {
            "fields": {
                "action": {
                    "type": "number",
                    "isOptional": false
                },
                "dash": {
                    "type": "number",
                    "isOptional": false
                },
                "charge": {
                    "type": "number",
                    "isOptional": false
                },
                "reaim": {
                    "type": "number",
                    "isOptional": false
                },
                "move": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "impact.base.actor-entity": {
        "ig": {
            "fields": {
                "ACTOR_RUN_THRESHOLD": {
                    "type": "number"
                },
                "ActorConfig": {
                    "type": "ActorConfigConstructor"
                },
                "ActorEntity": {
                    "type": "ActorEntityConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ActorConfig": {
            "fields": {
                "empty": {
                    "type": "boolean",
                    "isOptional": false
                },
                "data": {
                    "type": "Record<string, unknown>",
                    "isOptional": false
                },
                "original": {
                    "type": "unknown",
                    "isOptional": false
                }
            },
            "functions": {
                "clearOverwrite": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "ActorConfig",
                    "args": [
                        {
                            "name": "data",
                            "type": "unknown",
                            "isOptional": false
                        },
                        {
                            "name": "parentConfig",
                            "type": "unknown",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "ig.ActorEntity.WalkAnims": {
            "fields": {
                "idle": {
                    "type": "string",
                    "isOptional": false
                },
                "preMove": {
                    "type": "string",
                    "isOptional": true
                },
                "move": {
                    "type": "string",
                    "isOptional": true
                },
                "moveRev": {
                    "type": "string",
                    "isOptional": true
                },
                "moveLeft": {
                    "type": "string",
                    "isOptional": true
                },
                "run": {
                    "type": "string",
                    "isOptional": true
                },
                "runRev": {
                    "type": "string",
                    "isOptional": true
                },
                "runLeft": {
                    "type": "string",
                    "isOptional": true
                },
                "brake": {
                    "type": "string",
                    "isOptional": true
                },
                "preIdle": {
                    "type": "string",
                    "isOptional": true
                },
                "jump": {
                    "type": "string",
                    "isOptional": true
                },
                "fall": {
                    "type": "string",
                    "isOptional": true
                },
                "hover": {
                    "type": "string",
                    "isOptional": true
                },
                "preHoverMove": {
                    "type": "string",
                    "isOptional": true
                },
                "hoverMove": {
                    "type": "string",
                    "isOptional": true
                },
                "hoverMoveRev": {
                    "type": "string",
                    "isOptional": true
                },
                "land": {
                    "type": "string",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ActorEntity": {
            "fields": {
                "face": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "animationFixed": {
                    "type": "boolean",
                    "isOptional": false
                },
                "walkAnims": {
                    "type": "ActorEntity.WalkAnims",
                    "isOptional": false
                },
                "stepTimer": {
                    "type": "number",
                    "isOptional": false
                },
                "stepSync": {
                    "type": "number",
                    "isOptional": false
                },
                "stepData": {
                    "type": "Record<string, any>",
                    "isOptional": false
                },
                "defaultConfig": {
                    "type": "ig.ActorConfig",
                    "isOptional": false
                },
                "jumpingEnabled": {
                    "type": "boolean",
                    "isOptional": false
                },
                "jumping": {
                    "type": "boolean",
                    "isOptional": false
                },
                "floatJump": {
                    "type": "number",
                    "isOptional": false
                },
                "preJumpStats": {
                    "type": "{ maxVel: number, accelSpeed: number, zGravityFactor: number }",
                    "isOptional": false
                },
                "FACE4": {
                    "type": "typeof ActorEntity$FACE4",
                    "isOptional": false
                },
                "FACE8": {
                    "type": "typeof ActorEntity$FACE8",
                    "isOptional": false
                }
            },
            "functions": {
                "setDefaultConfig": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "config",
                            "type": "ig.ActorConfig",
                            "isOptional": false
                        }
                    ]
                },
                "setAttribute": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "value",
                            "type": "unknown",
                            "isOptional": false
                        }
                    ]
                },
                "getAttribute": {
                    "returnType": "unknown",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "getTarget": {
                    "returnType": "Nullable<ig.ActorEntity>",
                    "args": []
                },
                "setAction": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "action",
                            "type": "ig.Action",
                            "isOptional": false
                        },
                        {
                            "name": "keepState",
                            "type": "Nullable<boolean>",
                            "isOptional": true
                        },
                        {
                            "name": "noStateReset",
                            "type": "Nullable<boolean>",
                            "isOptional": true
                        }
                    ]
                },
                "cancelJump": {
                    "returnType": "void",
                    "args": []
                },
                "setWalkAnims": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "config",
                            "type": "string | ig.ActorEntity.WalkAnims",
                            "isOptional": false
                        }
                    ]
                },
                "storeWalkAnims": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "config",
                            "type": "ig.ActorEntity.WalkAnims",
                            "isOptional": false
                        }
                    ]
                },
                "doJump": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "zVel",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "callbackHeight",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "maxVel",
                            "type": "number",
                            "isOptional": true
                        },
                        {
                            "name": "accelSpeed",
                            "type": "Nullable<number>",
                            "isOptional": true
                        },
                        {
                            "name": "ignoreSounds",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "doFloatJump": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "floatJump",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "jumping",
                            "type": "boolean | number",
                            "isOptional": false
                        },
                        {
                            "name": "maxVel",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "ig.ActorEntity",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "ig.Entity.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.AnimatedEntity"
            ]
        },
        "ig.ActorEntity.preJumpStats": {
            "fields": {
                "maxVel": {
                    "type": "number",
                    "isOptional": false
                },
                "accelSpeed": {
                    "type": "number",
                    "isOptional": false
                },
                "zGravityFactor": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "impact.feature.influencer.influencer": {
        "sc.INFLUENCE_PUSH": {
            "fields": {
                "PULL": {
                    "type": "ig.InfluenceEntry.InfluencePush",
                    "isOptional": false
                },
                "PUSH": {
                    "type": "ig.InfluenceEntry.InfluencePush",
                    "isOptional": false
                },
                "DIR": {
                    "type": "ig.InfluenceEntry.InfluencePush",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc": {
            "fields": {
                "INFLUENCE_PUSH": {
                    "type": "INFLUENCE_PUSH"
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.Influencer": {
            "fields": {
                "entity": {
                    "type": "ig.Entity",
                    "isOptional": false
                },
                "entries": {
                    "type": "ig.InfluenceEntry[]",
                    "isOptional": false
                },
                "callbacks": {
                    "type": "unknown[]",
                    "isOptional": false
                }
            },
            "functions": {
                "onUpdate": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "Influencer",
                    "args": [
                        {
                            "name": "entity",
                            "type": "ig.Entity",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "ig": {
            "fields": {
                "Influencer": {
                    "type": "InfluencerConstructor"
                },
                "InfluenceEntry": {
                    "type": "InfluenceEntryConstructor"
                },
                "InfluenceConnection": {
                    "type": "InfluenceConnectionConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.InfluenceEntry.StateEnum": {
            "fields": {
                "NORMAL": {
                    "type": "0",
                    "isOptional": false
                },
                "FADE_OUT": {
                    "type": "1",
                    "isOptional": false
                },
                "REMOVED": {
                    "type": "2",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.InfluenceEntry.PushType": {
            "fields": {
                "type": {
                    "type": "InfluencePush",
                    "isOptional": false
                },
                "range": {
                    "type": "number",
                    "isOptional": false
                },
                "fadeRange": {
                    "type": "number",
                    "isOptional": false
                },
                "speed": {
                    "type": "number",
                    "isOptional": false
                },
                "vec": {
                    "type": "Vec2",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.InfluenceEntry": {
            "fields": {
                "fadeTimer": {
                    "type": "ig.WeightTimer",
                    "isOptional": false
                },
                "timeScale": {
                    "type": "number",
                    "isOptional": false
                },
                "slowmoScale": {
                    "type": "number",
                    "isOptional": false
                },
                "logicTimeScale": {
                    "type": "number",
                    "isOptional": false
                },
                "moveXYScale": {
                    "type": "number",
                    "isOptional": false
                },
                "groundSinkZ": {
                    "type": "number",
                    "isOptional": false
                },
                "updateInfluencer": {
                    "type": "Nullable<ig.Influencer>",
                    "isOptional": false
                },
                "state": {
                    "type": "ig.InfluenceEntry.State",
                    "isOptional": false
                },
                "push": {
                    "type": "Nullable<ig.InfluenceEntry.PushType>",
                    "isOptional": false
                }
            },
            "functions": {
                "setPushType": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "type",
                            "type": "ig.InfluenceEntry.InfluencePush",
                            "isOptional": false
                        },
                        {
                            "name": "range",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "fadeRange",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "speed",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "setPushEntityCenter": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "entity",
                            "type": "ig.Entity",
                            "isOptional": false
                        }
                    ]
                },
                "setPushCenter": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "destVec",
                            "type": "Vec2",
                            "isOptional": false
                        }
                    ]
                },
                "getPush": {
                    "returnType": "Vec2",
                    "args": [
                        {
                            "name": "coll",
                            "type": "ig.CollEntry",
                            "isOptional": false
                        },
                        {
                            "name": "factor",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "setFadeOut": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "duration",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "getFactor": {
                    "returnType": "number",
                    "args": []
                },
                "init": {
                    "returnType": "InfluenceEntry",
                    "args": []
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "ig.InfluenceConnection": {
            "fields": {
                "influencer": {
                    "type": "ig.Influencer",
                    "isOptional": false
                },
                "influenceEntry": {
                    "type": "ig.InfluenceEntry",
                    "isOptional": false
                }
            },
            "functions": {
                "updateImmediately": {
                    "returnType": "void",
                    "args": []
                },
                "clear": {
                    "returnType": "void",
                    "args": []
                },
                "onActionEndDetach": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "InfluenceConnection",
                    "args": [
                        {
                            "name": "influencer",
                            "type": "ig.Influencer",
                            "isOptional": false
                        },
                        {
                            "name": "influenceEntry",
                            "type": "ig.InfluenceEntry",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class"
            ]
        }
    },
    "impact.feature.slow-motion.slow-motion": {
        "ig.SlowMotion": {
            "fields": {
                "slowMotions": {
                    "type": "ig.SlowMotionHandle[]",
                    "isOptional": false
                },
                "namedSlowMotions": {
                    "type": "Record<string, ig.SlowMotionHandle>",
                    "isOptional": false
                },
                "postUpdateOrder": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "forceUpdate": {
                    "returnType": "void",
                    "args": []
                },
                "update": {
                    "returnType": "void",
                    "args": []
                },
                "hasSlowMotion": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "getNonInvertSlowDown": {
                    "returnType": "number",
                    "args": []
                },
                "onPostUpdate": {
                    "returnType": "void",
                    "args": []
                },
                "onLevelLoadStart": {
                    "returnType": "void",
                    "args": []
                },
                "onReset": {
                    "returnType": "void",
                    "args": []
                },
                "add": {
                    "returnType": "ig.SlowMotionHandle",
                    "args": [
                        {
                            "name": "factor",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "timer",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "name",
                            "type": "Nullable<string>",
                            "isOptional": true
                        }
                    ]
                },
                "clearNamed": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "time",
                            "type": "number",
                            "isOptional": true
                        }
                    ]
                },
                "init": {
                    "returnType": "SlowMotion",
                    "args": []
                }
            },
            "parents": [
                "ig.GameAddon"
            ]
        },
        "ig": {
            "fields": {
                "SlowMotion": {
                    "type": "SlowMotionConstructor"
                },
                "slowMotion": {
                    "type": "SlowMotion"
                },
                "SlowMotionHandle": {
                    "type": "SlowMotionHandleConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.SlowMotionHandle": {
            "fields": {
                "factor": {
                    "type": "number",
                    "isOptional": false
                },
                "transitionTime": {
                    "type": "number",
                    "isOptional": false
                },
                "name": {
                    "type": "Nullable<string>",
                    "isOptional": true
                },
                "timer": {
                    "type": "number",
                    "isOptional": false
                },
                "cleared": {
                    "type": "boolean",
                    "isOptional": false
                },
                "inverers": {
                    "type": "ig.InfluenceConnection[]",
                    "isOptional": false
                }
            },
            "functions": {
                "clear": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "time",
                            "type": "number",
                            "isOptional": true
                        }
                    ]
                },
                "update": {
                    "returnType": "boolean",
                    "args": []
                },
                "addInverseEntity": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "entity",
                            "type": "sc.ActorEntity",
                            "isOptional": false
                        }
                    ]
                },
                "getFactor": {
                    "returnType": "number",
                    "args": []
                },
                "onActionEndDetach": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "SlowMotionHandle",
                    "args": [
                        {
                            "name": "factor",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "timer",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "name",
                            "type": "Nullable<string>",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class"
            ]
        }
    },
    "game.feature.player.player-config": {
        "sc": {
            "fields": {
                "PLAYER_SP_COST": {
                    "type": "number[]"
                },
                "PlayerConfig": {
                    "type": "PlayerConfigConstructor"
                },
                "PlayerAction": {
                    "type": "PlayerActionConstructor"
                },
                "PlayerSubConfig": {
                    "type": "PlayerSubConfigConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.PlayerConfig.Stat": {
            "fields": {
                "base": {
                    "type": "number",
                    "isOptional": false
                },
                "increase": {
                    "type": "number",
                    "isOptional": false
                },
                "variance": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.PlayerConfig.Stats": {
            "fields": {
                "hp": {
                    "type": "Stat",
                    "isOptional": false
                },
                "attack": {
                    "type": "Stat",
                    "isOptional": false
                },
                "defense": {
                    "type": "Stat",
                    "isOptional": false
                },
                "focus": {
                    "type": "Stat",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.PlayerConfig.AutoEquipEntry": {
            "fields": {
                "level": {
                    "type": "number",
                    "isOptional": false
                },
                "HEAD": {
                    "type": "number",
                    "isOptional": false
                },
                "LEFT_ARM": {
                    "type": "number",
                    "isOptional": false
                },
                "RIGHT_ARM": {
                    "type": "number",
                    "isOptional": false
                },
                "TORSO": {
                    "type": "number",
                    "isOptional": false
                },
                "FEET": {
                    "type": "number",
                    "isOptional": false
                },
                "condition": {
                    "type": "ig.VarCondition",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.PlayerConfig": {
            "fields": {
                "name": {
                    "type": "string",
                    "isOptional": false
                },
                "clazz": {
                    "type": "string",
                    "isOptional": false
                },
                "character": {
                    "type": "sc.Character",
                    "isOptional": false
                },
                "combatStyle": {
                    "type": "unknown",
                    "isOptional": false
                },
                "animSheet": {
                    "type": "ig.AnimationSheet",
                    "isOptional": false
                },
                "proxies": {
                    "type": "Record<string, sc.ProxySpawnerBase>",
                    "isOptional": false
                },
                "headIdx": {
                    "type": "number",
                    "isOptional": false
                },
                "stats": {
                    "type": "PlayerConfig.Stats",
                    "isOptional": false
                },
                "autoequip": {
                    "type": "PlayerConfig.AutoEquip",
                    "isOptional": false
                },
                "baseConfig": {
                    "type": "sc.PlayerSubConfig",
                    "isOptional": false
                },
                "elementConfigs": {
                    "type": "Record<sc.ELEMENT, sc.PlayerSubConfig>",
                    "isOptional": false
                },
                "skillRanking": {
                    "type": "string[]",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "sc.PlayerConfig",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "getElementBall": {
                    "returnType": "sc.ProxySpawnerBase",
                    "args": [
                        {
                            "name": "combatant",
                            "type": "sc.PlayerBaseEntity",
                            "isOptional": false
                        },
                        {
                            "name": "element",
                            "type": "sc.ELEMENT",
                            "isOptional": false
                        },
                        {
                            "name": "charged",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.JsonLoadable"
            ]
        },
        "sc.PlayerAction": {
            "fields": {
                "action": {
                    "type": "ig.Action",
                    "isOptional": false
                },
                "key": {
                    "type": "string",
                    "isOptional": false
                },
                "name": {
                    "type": "ig.LangLabel",
                    "isOptional": true
                },
                "description": {
                    "type": "ig.LangLabel",
                    "isOptional": true
                },
                "dmgType": {
                    "type": "Nullable<sc.ACTION_DMG_TYPE>",
                    "isOptional": true
                },
                "stunType": {
                    "type": "sc.ACTION_STUN_TYPE | false",
                    "isOptional": true
                },
                "icon": {
                    "type": "ig.Image",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": [
                "ig.Class"
            ]
        },
        "sc.PlayerSubConfig.Factor": {
            "fields": {
                "hp": {
                    "type": "number",
                    "isOptional": false
                },
                "attack": {
                    "type": "number",
                    "isOptional": false
                },
                "defense": {
                    "type": "number",
                    "isOptional": false
                },
                "focus": {
                    "type": "number",
                    "isOptional": false
                },
                "elemFactor": {
                    "type": "number[]",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.PlayerSubConfig": {
            "fields": {
                "paramFactors": {
                    "type": "PlayerSubConfig.Factor",
                    "isOptional": true
                },
                "skillFactors": {
                    "type": "PlayerSubConfig.Factor",
                    "isOptional": false
                },
                "actions": {
                    "type": "Record<string, sc.PlayerAction>",
                    "isOptional": false
                },
                "baseParams": {
                    "type": "sc.CombatParams.BaseParams",
                    "isOptional": false
                },
                "modifiers": {
                    "type": "sc.ModifierList",
                    "isOptional": false
                },
                "activeActions": {
                    "type": "Record<number, sc.PlayerAction>",
                    "isOptional": false
                }
            },
            "functions": {
                "preSkillInit": {
                    "returnType": "void",
                    "args": []
                },
                "update": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "config",
                            "type": "sc.CombatParams.BaseParams",
                            "isOptional": false
                        },
                        {
                            "name": "modifiers",
                            "type": "sc.ModifierList",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class"
            ]
        }
    },
    "game.feature.party.entities.party-member-entity": {
        "sc.PartyMemberEntity.State": {
            "fields": {},
            "functions": {
                "start": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "entity",
                            "type": "sc.PartyMemberEntity",
                            "isOptional": false
                        },
                        {
                            "name": "player",
                            "type": "ig.ENTITY.Player",
                            "isOptional": false
                        },
                        {
                            "name": "targetStats",
                            "type": "sc.PartyMemberEntity.TargetStats",
                            "isOptional": false
                        },
                        {
                            "name": "stateData",
                            "type": "sc.PartyMemberEntity.StateData",
                            "isOptional": false
                        }
                    ]
                },
                "update": {
                    "returnType": "void | sc.PartyMemberEntity.State",
                    "args": [
                        {
                            "name": "entity",
                            "type": "sc.PartyMemberEntity",
                            "isOptional": false
                        },
                        {
                            "name": "player",
                            "type": "ig.ENTITY.Player",
                            "isOptional": false
                        },
                        {
                            "name": "targetStats",
                            "type": "sc.PartyMemberEntity.TargetStats",
                            "isOptional": false
                        },
                        {
                            "name": "stateData",
                            "type": "sc.PartyMemberEntity.StateData",
                            "isOptional": false
                        }
                    ]
                },
                "startThrow": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "entity",
                            "type": "sc.PartyMemberEntity",
                            "isOptional": false
                        },
                        {
                            "name": "targetStats",
                            "type": "sc.PartyMemberEntity.TargetStats",
                            "isOptional": false
                        },
                        {
                            "name": "stateData",
                            "type": "sc.PartyMemberEntity.StateData",
                            "isOptional": false
                        }
                    ]
                },
                "startAttack": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "entity",
                            "type": "sc.PartyMemberEntity",
                            "isOptional": false
                        },
                        {
                            "name": "targetStats",
                            "type": "sc.PartyMemberEntity.TargetStats",
                            "isOptional": false
                        },
                        {
                            "name": "stateData",
                            "type": "sc.PartyMemberEntity.StateData",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": []
        },
        "sc.PartyMemberEntity.States": {
            "fields": {
                "IDLE": {
                    "type": "State",
                    "isOptional": false
                },
                "STAY_AWAY": {
                    "type": "State",
                    "isOptional": false
                },
                "BACKOFF": {
                    "type": "State",
                    "isOptional": false
                },
                "ROTATE": {
                    "type": "State",
                    "isOptional": false
                },
                "FOLLOW": {
                    "type": "State",
                    "isOptional": false
                },
                "COMBAT_IDLE": {
                    "type": "State",
                    "isOptional": false
                },
                "COMBAT_SIDEWAYS": {
                    "type": "State",
                    "isOptional": false
                },
                "COMBAT_HEALING": {
                    "type": "State",
                    "isOptional": false
                },
                "COMBAT_THROWING": {
                    "type": "State",
                    "isOptional": false
                },
                "COMBAT_ADJUST": {
                    "type": "State",
                    "isOptional": false
                },
                "PERMA_PUNCH": {
                    "type": "State",
                    "isOptional": false
                },
                "MELEE": {
                    "type": "State",
                    "isOptional": false
                },
                "DODGE": {
                    "type": "State",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.PartyMemberEntity.TargetStats": {
            "fields": {
                "distVec": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "distance": {
                    "type": "number",
                    "isOptional": false
                },
                "outOfScreenTime": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.PartyMemberEntity.StateData": {
            "fields": {
                "faceRotateTimer": {
                    "type": "number",
                    "isOptional": true
                },
                "attackCount": {
                    "type": "number",
                    "isOptional": true
                },
                "healingStart": {
                    "type": "boolean",
                    "isOptional": true
                },
                "doInit": {
                    "type": "boolean",
                    "isOptional": true
                },
                "directionMove": {
                    "type": "boolean",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.PartyMemberEntity.CombatArt": {
            "fields": {
                "actionKey": {
                    "type": "string",
                    "isOptional": false
                },
                "idx": {
                    "type": "number",
                    "isOptional": false
                },
                "distant": {
                    "type": "boolean",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.PartyMemberEntity.CombatArts": {
            "fields": {
                "ATTACK": {
                    "type": "CombatArt",
                    "isOptional": false
                },
                "THROW": {
                    "type": "CombatArt",
                    "isOptional": false
                },
                "GUARD": {
                    "type": "CombatArt",
                    "isOptional": false
                },
                "DASH": {
                    "type": "CombatArt",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.PartyMemberEntity.Settings": {
            "fields": {
                "partyMemberName": {
                    "type": "string",
                    "isOptional": false
                },
                "posOffset": {
                    "type": "Vec2",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": [
                "ig.Entity.Settings"
            ]
        },
        "sc.PartyMemberEntity": {
            "fields": {
                "model": {
                    "type": "sc.PartyMemberModel",
                    "isOptional": false
                },
                "posOffset": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "navTarget": {
                    "type": "Nullable<number>",
                    "isOptional": false
                },
                "state": {
                    "type": "sc.PartyMemberEntity.State",
                    "isOptional": false
                },
                "inCombat": {
                    "type": "boolean",
                    "isOptional": false
                },
                "targetStats": {
                    "type": "sc.PartyMemberEntity.TargetStats",
                    "isOptional": false
                },
                "stateData": {
                    "type": "sc.PartyMemberEntity.StateData",
                    "isOptional": false
                },
                "timer": {
                    "type": "Record<'action' | 'move' | 'attack' | 'noAttackTime' | 'dodge', number>",
                    "isOptional": false
                },
                "throwDirData": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "currentCombatArt": {
                    "type": "Nullable<sc.PartyMemberEntity.CombatArt>",
                    "isOptional": false
                },
                "charging": {
                    "type": "Record<'max' | 'current' | 'timer', number>",
                    "isOptional": false
                }
            },
            "functions": {
                "updateDefaultConfig": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "aiming",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "onInstantDamage": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "damage",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "leaveParty": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "instant",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "resetAttackTimer": {
                    "returnType": "void",
                    "args": []
                },
                "startCombat": {
                    "returnType": "void",
                    "args": []
                },
                "endCombat": {
                    "returnType": "void",
                    "args": []
                },
                "startCombatArtCharging": {
                    "returnType": "void",
                    "args": []
                },
                "doCombatArtCharge": {
                    "returnType": "void",
                    "args": []
                },
                "cancelCharge": {
                    "returnType": "void",
                    "args": []
                },
                "doCombatArt": {
                    "returnType": "void",
                    "args": []
                },
                "setActionBlocked": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "blockData",
                            "type": "ig.ACTION_STEP.SET_PLAYER_ACTION_BLOCK.BlockData",
                            "isOptional": false
                        }
                    ]
                },
                "hasValidTarget": {
                    "returnType": "boolean",
                    "args": []
                },
                "selectTarget": {
                    "returnType": "void",
                    "args": []
                },
                "reselectTarget": {
                    "returnType": "void",
                    "args": []
                },
                "hasElement": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "element",
                            "type": "sc.ELEMENT",
                            "isOptional": false
                        }
                    ]
                },
                "getBestElement": {
                    "returnType": "sc.ELEMENT",
                    "args": []
                },
                "consumeSandwich": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "sandwitchTier",
                            "type": "0 | 1 | 2",
                            "isOptional": false
                        }
                    ]
                },
                "updateElement": {
                    "returnType": "void",
                    "args": []
                },
                "updateModelStats": {
                    "returnType": "void",
                    "args": []
                },
                "selectCombatArt": {
                    "returnType": "void",
                    "args": []
                },
                "changeState": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "state",
                            "type": "sc.PartyMemberEntity.State",
                            "isOptional": false
                        }
                    ]
                },
                "isControlBlocked": {
                    "returnType": "boolean",
                    "args": []
                },
                "getDodgeProbability": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "enemy",
                            "type": "ig.ENTITY.Enemy",
                            "isOptional": false
                        }
                    ]
                },
                "goToCombat": {
                    "returnType": "boolean",
                    "args": []
                },
                "resetPos": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "noEffects",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "setNavTarget": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "target",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "PartyMemberEntity",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "sc.PartyMemberEntity.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "sc.PlayerBaseEntity",
                "sc.Model.Observer"
            ]
        },
        "sc": {
            "fields": {
                "PartyMemberEntity": {
                    "type": "PartyMemberEntityConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.combat.combat-stun": {},
    "game.feature.combat.entities.ball": {
        "sc.PROXY_TYPE": {
            "fields": {
                "BALL": {
                    "type": "typeof sc.BallInfo"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.BallInfo": {
            "fields": {
                "data": {
                    "type": "any",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "BallInfo",
                    "args": [
                        {
                            "name": "data",
                            "type": "any",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "sc.ProxySpawnerBase"
            ]
        },
        "sc": {
            "fields": {
                "BallInfo": {
                    "type": "BallInfo"
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ENTITY.Ball.Settings": {
            "fields": {},
            "functions": {},
            "parents": [
                "ig.Entity.Settings"
            ]
        },
        "ig.ENTITY.Ball": {
            "fields": {
                "attackInfo": {
                    "type": "sc.AttackInfo",
                    "isOptional": false
                },
                "remainingHits": {
                    "type": "number",
                    "isOptional": false
                },
                "timer": {
                    "type": "number",
                    "isOptional": false
                },
                "speed": {
                    "type": "number",
                    "isOptional": false
                },
                "speedFactor": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "changeSpeed": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "speed",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "applySpeedFactor",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "destroy": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "Ball",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "Ball.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.ENTITY.Projectile"
            ]
        },
        "ig.ENTITY": {
            "fields": {
                "Ball": {
                    "type": "BallConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.combat.entities.projectile": {
        "ig.ENTITY.Projectile.Settings": {
            "fields": {},
            "functions": {},
            "parents": [
                "ig.Entity.Settings"
            ]
        },
        "ig.ENTITY.Projectile": {
            "fields": {},
            "functions": {
                "getHitCenter": {
                    "returnType": "Vec3",
                    "args": [
                        {
                            "name": "entity",
                            "type": "ig.Entity",
                            "isOptional": false
                        },
                        {
                            "name": "dest",
                            "type": "Vec3",
                            "isOptional": true
                        }
                    ]
                },
                "getElement": {
                    "returnType": "sc.ELEMENT",
                    "args": []
                },
                "getCombatantRoot": {
                    "returnType": "ig.ENTITY.Combatant",
                    "args": []
                },
                "init": {
                    "returnType": "Projectile",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "ig.ENTITY.Projectile.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.AnimatedEntity"
            ]
        },
        "ig.ENTITY": {
            "fields": {
                "Projectile": {
                    "type": "ProjectileConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.combat.model.combat-params": {
        "sc": {
            "fields": {
                "ELEMENT_MAX": {
                    "type": "number"
                },
                "ELEMENT_COUNTER": {
                    "type": "Record<ELEMENT, ELEMENT>"
                },
                "SP_REGEN_SPEED": {
                    "type": "{ [maxSp: number]: number }"
                },
                "SP_REGEN_FACTOR": {
                    "type": "number"
                },
                "HP_LOW_WARNING": {
                    "type": "number"
                },
                "CombatParams": {
                    "type": "CombatParamsConstructor"
                },
                "AttackInfo": {
                    "type": "AttackInfoConstructor"
                },
                "HealInfo": {
                    "type": "HealInfoConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.CombatParams.Params": {
            "fields": {
                "hp": {
                    "type": "number",
                    "isOptional": false
                },
                "attack": {
                    "type": "number",
                    "isOptional": false
                },
                "defense": {
                    "type": "number",
                    "isOptional": false
                },
                "focus": {
                    "type": "number",
                    "isOptional": false
                },
                "elemFactor": {
                    "type": "number[]",
                    "isOptional": false
                },
                "statusInflict": {
                    "type": "number[]",
                    "isOptional": false
                },
                "statusEffect": {
                    "type": "number[]",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.CombatParams.BaseParams": {
            "fields": {},
            "functions": {},
            "parents": [
                "Params"
            ]
        },
        "sc.CombatParams.DamageResult": {
            "fields": {
                "damage": {
                    "type": "number",
                    "isOptional": false
                },
                "defReduced": {
                    "type": "number",
                    "isOptional": false
                },
                "offensiveFactor": {
                    "type": "number",
                    "isOptional": false
                },
                "baseOffensiveFactor": {
                    "type": "number",
                    "isOptional": false
                },
                "elementalDef": {
                    "type": "number",
                    "isOptional": false
                },
                "defensiveFactor": {
                    "type": "number",
                    "isOptional": false
                },
                "critical": {
                    "type": "number",
                    "isOptional": false
                },
                "status": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.CombatParams": {
            "fields": {
                "combatant": {
                    "type": "ig.ENTITY.Combatant",
                    "isOptional": false
                },
                "baseParams": {
                    "type": "sc.CombatParams.BaseParams",
                    "isOptional": false
                },
                "modifiers": {
                    "type": "Record<keyof sc.MODIFIERS, number>",
                    "isOptional": false
                },
                "buffs": {
                    "type": "sc.StatChange[]",
                    "isOptional": false
                },
                "currentHp": {
                    "type": "number",
                    "isOptional": false
                },
                "maxSp": {
                    "type": "number",
                    "isOptional": false
                },
                "currentSp": {
                    "type": "number",
                    "isOptional": false
                },
                "spHoldTimer": {
                    "type": "number",
                    "isOptional": false
                },
                "currentItemBuffs": {
                    "type": "number",
                    "isOptional": false
                },
                "tmpElemFactor": {
                    "type": "number[]",
                    "isOptional": false
                },
                "tmpStatusInflict": {
                    "type": "number[]",
                    "isOptional": false
                },
                "damageFactor": {
                    "type": "number",
                    "isOptional": false
                },
                "ballFactor": {
                    "type": "number",
                    "isOptional": false
                },
                "defeated": {
                    "type": "boolean",
                    "isOptional": false
                },
                "statusStates": {
                    "type": "sc.CombatStatusBase[]",
                    "isOptional": false
                },
                "hpRegTime": {
                    "type": "number",
                    "isOptional": false
                },
                "hpHealTimer": {
                    "type": "number",
                    "isOptional": false
                },
                "criticalDmgFactor": {
                    "type": "number",
                    "isOptional": false
                },
                "lockedBy": {
                    "type": "ig.ActorEntity[]",
                    "isOptional": false
                },
                "stats": {
                    "type": "Record<string, number>",
                    "isOptional": false
                }
            },
            "functions": {
                "getStat": {
                    "returnType": "sc.CombatParams.Params[K]",
                    "args": [
                        {
                            "name": "key",
                            "type": "K",
                            "isOptional": false
                        },
                        {
                            "name": "noHack",
                            "type": "Nullable<boolean>",
                            "isOptional": true
                        }
                    ]
                },
                "getModifier": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "modifier",
                            "type": "keyof sc.MODIFIERS",
                            "isOptional": false
                        }
                    ]
                },
                "revive": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "hpFactor",
                            "type": "number",
                            "isOptional": true
                        }
                    ]
                },
                "setCombatant": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "combatant",
                            "type": "ig.ENTITY.Combatant",
                            "isOptional": false
                        }
                    ]
                },
                "setModifiers": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "modifiers",
                            "type": "sc.ModifierList",
                            "isOptional": false
                        }
                    ]
                },
                "reset": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "maxSp",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "setMaxSp": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "maxSp",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "setBaseParams": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "baseParams",
                            "type": "sc.CombatParams.BaseParams",
                            "isOptional": false
                        }
                    ]
                },
                "getDamage": {
                    "returnType": "CombatParams.DamageResult",
                    "args": [
                        {
                            "name": "attackInfo",
                            "type": "sc.AttackInfo",
                            "isOptional": false
                        },
                        {
                            "name": "damageFactorMod",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "combatant",
                            "type": "ig.ENTITY.Combatant",
                            "isOptional": false
                        },
                        {
                            "name": "shieldResult",
                            "type": "sc.SHIELD_RESULT",
                            "isOptional": true
                        },
                        {
                            "name": "hitIgnore",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "getHealAmount": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "healInfo",
                            "type": "sc.HealInfoType",
                            "isOptional": false
                        }
                    ]
                },
                "setCritical": {
                    "returnType": "void",
                    "args": []
                },
                "increaseHp": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "amount",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "getHpFactor": {
                    "returnType": "number",
                    "args": []
                },
                "addSp": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "spAdd",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "maxSp",
                            "type": "number",
                            "isOptional": true
                        }
                    ]
                },
                "setRelativeSp": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "factor",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "consumeSp": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "sp",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "setRelativeHp": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "ratio",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "getSp": {
                    "returnType": "number",
                    "args": []
                },
                "getRelativeSp": {
                    "returnType": "number",
                    "args": []
                },
                "notifySpConsume": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "sp",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "isDefeated": {
                    "returnType": "boolean",
                    "args": []
                },
                "addItemBuf": {
                    "returnType": "true",
                    "args": [
                        {
                            "name": "stats",
                            "type": "sc.StatChange.StatName[]",
                            "isOptional": false
                        },
                        {
                            "name": "duration",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "itemId",
                            "type": "sc.ItemID",
                            "isOptional": false
                        }
                    ]
                },
                "setDefeated": {
                    "returnType": "void",
                    "args": []
                },
                "addBuff": {
                    "returnType": "true",
                    "args": [
                        {
                            "name": "buff",
                            "type": "sc.StatChange",
                            "isOptional": false
                        }
                    ]
                },
                "removeBuff": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "buff",
                            "type": "sc.StatChange",
                            "isOptional": false
                        }
                    ]
                },
                "removeAllBuffs": {
                    "returnType": "void",
                    "args": []
                },
                "update": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "inCombat",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "CombatParams",
                    "args": [
                        {
                            "name": "stats",
                            "type": "sc.StatChange.Params",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class",
                "sc.Model"
            ]
        },
        "sc.AttackInfo": {
            "fields": {
                "type": {
                    "type": "sc.ATTACK_TYPE",
                    "isOptional": false
                },
                "attackerParams": {
                    "type": "sc.CombatParams",
                    "isOptional": false
                },
                "ballDamage": {
                    "type": "boolean",
                    "isOptional": false
                },
                "damageFactor": {
                    "type": "number",
                    "isOptional": false
                },
                "defenseFactor": {
                    "type": "number",
                    "isOptional": false
                },
                "statusInflict": {
                    "type": "number",
                    "isOptional": false
                },
                "element": {
                    "type": "sc.ELEMENT",
                    "isOptional": false
                },
                "critFactor": {
                    "type": "number",
                    "isOptional": false
                },
                "spFactor": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "hasHint": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "hint",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "sc.HealInfo.Settings": {
            "fields": {
                "value": {
                    "type": "number",
                    "isOptional": false
                },
                "absolute": {
                    "type": "boolean",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.HealInfo": {
            "fields": {
                "healerParams": {
                    "type": "sc.CombatParams",
                    "isOptional": false
                },
                "value": {
                    "type": "number",
                    "isOptional": false
                },
                "absolute": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "clone": {
                    "returnType": "sc.HealInfo",
                    "args": []
                },
                "init": {
                    "returnType": "sc.HealInfo",
                    "args": [
                        {
                            "name": "params",
                            "type": "sc.CombatParams",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "HealInfo.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class"
            ]
        }
    },
    "game.feature.combat.model.proxy": {
        "sc.ProxySpawnerBase": {
            "fields": {},
            "functions": {
                "spawn": {
                    "returnType": "sc.CombatProxyEntity | ig.ENTITY.Ball | void",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "entity",
                            "type": "sc.BasicCombatant",
                            "isOptional": false
                        },
                        {
                            "name": "dir",
                            "type": "Vec2",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "sc": {
            "fields": {
                "ProxySpawnerBase": {
                    "type": "ProxySpawnerBaseConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "impact.base.coll-entry": {
        "ig.CollEntry.Shadow": {
            "fields": {
                "type": {
                    "type": "ig.COLL_SHADOW_TYPE",
                    "isOptional": false
                },
                "size": {
                    "type": "number",
                    "isOptional": false
                },
                "scaleY": {
                    "type": "number",
                    "isOptional": false
                },
                "offset": {
                    "type": "Vec2",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.CollEntry": {
            "fields": {
                "entity": {
                    "type": "ig.Entity",
                    "isOptional": false
                },
                "_active": {
                    "type": "boolean",
                    "isOptional": false
                },
                "_inCollisionMap": {
                    "type": "boolean",
                    "isOptional": false
                },
                "_killed": {
                    "type": "boolean",
                    "isOptional": false
                },
                "type": {
                    "type": "COLLTYPE",
                    "isOptional": false
                },
                "shape": {
                    "type": "ig.COLLSHAPE",
                    "isOptional": false
                },
                "heightShape": {
                    "type": "ig.COLL_HEIGHT_SHAPE",
                    "isOptional": false
                },
                "size": {
                    "type": "Vec3",
                    "isOptional": false
                },
                "alwaysRender": {
                    "type": "boolean",
                    "isOptional": false
                },
                "ignoreCollision": {
                    "type": "boolean",
                    "isOptional": false
                },
                "groundSlip": {
                    "type": "boolean",
                    "isOptional": false
                },
                "edgeSlipInward": {
                    "type": "boolean",
                    "isOptional": false
                },
                "weight": {
                    "type": "number",
                    "isOptional": false
                },
                "friction": {
                    "type": "{ ground: number; air: number; terrain: number; ignoreTerrain: boolean }",
                    "isOptional": false
                },
                "accelSpeed": {
                    "type": "number",
                    "isOptional": false
                },
                "maxVel": {
                    "type": "number",
                    "isOptional": false
                },
                "maxZVel": {
                    "type": "number",
                    "isOptional": false
                },
                "relativeVel": {
                    "type": "number",
                    "isOptional": false
                },
                "bounciness": {
                    "type": "number",
                    "isOptional": false
                },
                "zBounciness": {
                    "type": "number",
                    "isOptional": false
                },
                "minBounceBelocity": {
                    "type": "number",
                    "isOptional": false
                },
                "zGravityFactor": {
                    "type": "number",
                    "isOptional": false
                },
                "float": {
                    "type": "{ height: number; variance: number; maxSpeed: number; accel: number }",
                    "isOptional": false
                },
                "pos": {
                    "type": "Vec3",
                    "isOptional": false
                },
                "level": {
                    "type": "string",
                    "isOptional": false
                },
                "baseZPos": {
                    "type": "number",
                    "isOptional": false
                },
                "shadow": {
                    "type": "CollEntry.Shadow",
                    "isOptional": false
                },
                "vel": {
                    "type": "Vec3",
                    "isOptional": false
                },
                "pushVel": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "accelDir": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "parentColl": {
                    "type": "ig.CollEntry",
                    "isOptional": true
                },
                "totalBlockTimer": {
                    "type": "number",
                    "isOptional": false
                },
                "partlyBlockTimer": {
                    "type": "number",
                    "isOptional": false
                },
                "updated": {
                    "type": "number",
                    "isOptional": false
                },
                "_collData": {
                    "type": "{\n        collided: boolean;\n        frameVel: Vec3;\n        blockDir: Vec2;\n        slipped: boolean;\n        zBaseUncertain: boolean;\n        zPush: boolean;\n        skipPhysics: boolean;\n        forceMoveFrameVel: boolean;\n        groundEntry: ig.CollEntry | false;\n        groundEntryOffset: Vec2;\n        overlapEntryFactor: number;\n        noSlipping: boolean;\n        holeInfo: {\n          mapRes: number;\n          mapDir: Vec2;\n          entryDir: Vec2;\n          entryZ: number;\n          entryDist: number;\n          entryDanger: boolean;\n        };\n      }",
                    "isOptional": false
                }
            },
            "functions": {
                "setType": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "type",
                            "type": "ig.COLLTYPE",
                            "isOptional": false
                        }
                    ]
                },
                "setSize": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "setPadding": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "getCenter": {
                    "returnType": "Vec2",
                    "args": [
                        {
                            "name": "target",
                            "type": "Vec2",
                            "isOptional": true
                        }
                    ]
                },
                "trace": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "res",
                            "type": "ig.Physics.TraceResult",
                            "isOptional": false
                        },
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "vx",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "vy",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "width",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "height",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "zHeight",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "collType",
                            "type": "ig.COLLTYPE",
                            "isOptional": false
                        },
                        {
                            "name": "entryException",
                            "type": "Nullable<ig.CollEntry>",
                            "isOptional": true
                        },
                        {
                            "name": "collisionList",
                            "type": "Nullable<ig.CollEntry[]>",
                            "isOptional": true
                        },
                        {
                            "name": "onGround",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "getOverlapCenterCords": {
                    "returnType": "Vec3",
                    "args": [
                        {
                            "name": "v1",
                            "type": "Vec3",
                            "isOptional": false
                        },
                        {
                            "name": "output",
                            "type": "Vec3",
                            "isOptional": true
                        }
                    ]
                },
                "init": {
                    "returnType": "CollEntry",
                    "args": [
                        {
                            "name": "entity",
                            "type": "ig.Entity",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "ig.CollEntry.friction": {
            "fields": {
                "ground": {
                    "type": "number",
                    "isOptional": false
                },
                "air": {
                    "type": "number",
                    "isOptional": false
                },
                "terrain": {
                    "type": "number",
                    "isOptional": false
                },
                "ignoreTerrain": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.CollEntry.float": {
            "fields": {
                "height": {
                    "type": "number",
                    "isOptional": false
                },
                "variance": {
                    "type": "number",
                    "isOptional": false
                },
                "maxSpeed": {
                    "type": "number",
                    "isOptional": false
                },
                "accel": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.CollEntry._collData": {
            "fields": {
                "collided": {
                    "type": "boolean",
                    "isOptional": false
                },
                "frameVel": {
                    "type": "Vec3",
                    "isOptional": false
                },
                "blockDir": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "slipped": {
                    "type": "boolean",
                    "isOptional": false
                },
                "zBaseUncertain": {
                    "type": "boolean",
                    "isOptional": false
                },
                "zPush": {
                    "type": "boolean",
                    "isOptional": false
                },
                "skipPhysics": {
                    "type": "boolean",
                    "isOptional": false
                },
                "forceMoveFrameVel": {
                    "type": "boolean",
                    "isOptional": false
                },
                "groundEntry": {
                    "type": "ig.CollEntry | false",
                    "isOptional": false
                },
                "groundEntryOffset": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "overlapEntryFactor": {
                    "type": "number",
                    "isOptional": false
                },
                "noSlipping": {
                    "type": "boolean",
                    "isOptional": false
                },
                "holeInfo": {
                    "type": "{\n          mapRes: number;\n          mapDir: Vec2;\n          entryDir: Vec2;\n          entryZ: number;\n          entryDist: number;\n          entryDanger: boolean;\n        }",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.CollEntry._collData.holeInfo": {
            "fields": {
                "mapRes": {
                    "type": "number",
                    "isOptional": false
                },
                "mapDir": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "entryDir": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "entryZ": {
                    "type": "number",
                    "isOptional": false
                },
                "entryDist": {
                    "type": "number",
                    "isOptional": false
                },
                "entryDanger": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig": {
            "fields": {
                "CollEntry": {
                    "type": "CollEntryConstructor"
                },
                "CollTools": {
                    "type": "CollTools"
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.CollTools": {
            "fields": {},
            "functions": {
                "isInScreen": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "entity",
                            "type": "ig.Entity",
                            "isOptional": false
                        },
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": true
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": true
                        }
                    ]
                },
                "getDistVec2": {
                    "returnType": "Vec2",
                    "args": [
                        {
                            "name": "coll1",
                            "type": "CollEntry",
                            "isOptional": false
                        },
                        {
                            "name": "coll2",
                            "type": "CollEntry",
                            "isOptional": false
                        },
                        {
                            "name": "dest",
                            "type": "Vec2",
                            "isOptional": false
                        }
                    ]
                },
                "isPostMoveOverHole": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "coll",
                            "type": "ig.CollEntry",
                            "isOptional": false
                        },
                        {
                            "name": "boo",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "hasWallCollide": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "coll",
                            "type": "ig.CollEntry",
                            "isOptional": false
                        },
                        {
                            "name": "maxAngle",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": []
        }
    },
    "game.feature.combat.model.ball-behavior": {},
    "game.feature.puzzle.entities.walls": {
        "ig.ENTITY.WallBase.Settings": {
            "fields": {
                "size": {
                    "type": "Vec2",
                    "isOptional": true
                },
                "noNavMapBlock": {
                    "type": "boolean",
                    "isOptional": true
                },
                "collType": {
                    "type": "keyof typeof sc.WALL_COLL_TYPES",
                    "isOptional": true
                },
                "wallZHeight": {
                    "type": "number",
                    "isOptional": true
                },
                "condition": {
                    "type": "string",
                    "isOptional": true
                },
                "skipRender": {
                    "type": "boolean",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": [
                "ig.Entity.Settings"
            ]
        },
        "ig.ENTITY.WallBase": {
            "fields": {
                "condition": {
                    "type": "ig.VarCondition",
                    "isOptional": false
                },
                "active": {
                    "type": "boolean",
                    "isOptional": false
                },
                "wallCollType": {
                    "type": "keyof typeof sc.WALL_COLL_TYPES",
                    "isOptional": false
                },
                "wallZHeight": {
                    "type": "number",
                    "isOptional": false
                },
                "wallBlockers": {
                    "type": "ig.ENTITY.WallBlocker[]",
                    "isOptional": false
                },
                "skipRender": {
                    "type": "boolean",
                    "isOptional": false
                },
                "noNavMapBlock": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "updateWallBlockers": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "WallBase",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "WallBase.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Entity"
            ]
        },
        "ig.ENTITY": {
            "fields": {
                "WallBase": {
                    "type": "WallBaseConstructor"
                },
                "WallHorizontal": {
                    "type": "WallBaseConstructor"
                },
                "WallVertical": {
                    "type": "WallBaseConstructor"
                },
                "WallBlocker": {
                    "type": "WallBlockerConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ENTITY.WallHorizontal.Settings": {
            "fields": {
                "leftEnd": {
                    "type": "keyof typeof sc.WALL_HORIZONTAL_ENDS",
                    "isOptional": false
                },
                "rightEnd": {
                    "type": "keyof typeof sc.WALL_HORIZONTAL_ENDS",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": [
                "ig.ENTITY.WallBase.Settings"
            ]
        },
        "ig.ENTITY.WallHorizontal": {
            "fields": {},
            "functions": {
                "init": {
                    "returnType": "WallHorizontal",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "WallHorizontal.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.ENTITY.WallBase"
            ]
        },
        "ig.ENTITY.WallVertical.Settings": {
            "fields": {
                "topEnd": {
                    "type": "keyof typeof sc.WALL_VERTICAL_ENDS",
                    "isOptional": false
                },
                "bottomEnd": {
                    "type": "keyof typeof sc.WALL_VERTICAL_ENDS",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": [
                "ig.ENTITY.WallBase.Settings"
            ]
        },
        "ig.ENTITY.WallVertical": {
            "fields": {},
            "functions": {
                "init": {
                    "returnType": "WallVertical",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "WallVertical.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.ENTITY.WallBase"
            ]
        },
        "ig.ENTITY.WallBlocker.Settings": {
            "fields": {
                "collType": {
                    "type": "keyof typeof sc.WALL_COLL_TYPES",
                    "isOptional": false
                },
                "noNavMapBlock": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": [
                "ig.Entity.Settings"
            ]
        },
        "ig.ENTITY.WallBlocker": {
            "fields": {
                "maxHeight": {
                    "type": "number",
                    "isOptional": false
                },
                "colorGfx": {
                    "type": "ig.DoubleColor",
                    "isOptional": false
                },
                "maxAplha": {
                    "type": "number",
                    "isOptional": false
                },
                "timer": {
                    "type": "number",
                    "isOptional": false
                },
                "MOVE_TIMER": {
                    "type": "number",
                    "isOptional": false
                },
                "GLOW_TIMER": {
                    "type": "number",
                    "isOptional": false
                },
                "skipRender": {
                    "type": "boolean",
                    "isOptional": false
                },
                "navBlocker": {
                    "type": "unknown",
                    "isOptional": false
                },
                "noNavMapBlock": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "setActive": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "isBaseActive",
                            "type": "boolean",
                            "isOptional": false
                        },
                        {
                            "name": "isActive",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "WallBlocker",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "WallBlocker.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Entity"
            ]
        }
    },
    "game.feature.puzzle.entities.ol-platform": {
        "ig.ENTITY.OLPlatform.State": {
            "fields": {
                "condition": {
                    "type": "ig.VarCondition",
                    "isOptional": false
                },
                "pos": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "maps": {
                    "type": "[ig.ChunkedMap]",
                    "isOptional": false
                },
                "spline": {
                    "type": "KeySpline",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ENTITY.OLPlatform": {
            "fields": {
                "terrain": {
                    "type": "ig.TERRAIN",
                    "isOptional": false
                },
                "maps": {
                    "type": "[ig.ChunkedMap]",
                    "isOptional": false
                },
                "startPos": {
                    "type": "Vec3",
                    "isOptional": false
                },
                "states": {
                    "type": "ig.ENTITY.OLPlatform.State[]",
                    "isOptional": false
                },
                "speed": {
                    "type": "number",
                    "isOptional": false
                },
                "staticSpeed": {
                    "type": "boolean",
                    "isOptional": false
                },
                "squishRespawn": {
                    "type": "boolean",
                    "isOptional": false
                },
                "usePositionalSound": {
                    "type": "boolean",
                    "isOptional": false
                },
                "sound": {
                    "type": "{ move: ig.Sound }",
                    "isOptional": false
                },
                "_lastPos": {
                    "type": "Vec3",
                    "isOptional": false
                },
                "timer": {
                    "type": "ig.WeightTimer",
                    "isOptional": false
                },
                "currentState": {
                    "type": "ig.ENTITY.OLPlatform.State",
                    "isOptional": false
                },
                "spritesInitialized": {
                    "type": "boolean",
                    "isOptional": false
                },
                "navBlocker": {
                    "type": "ig.NavBlocker",
                    "isOptional": false
                },
                "quickNavUpdate": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "updateState": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "immediately",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "varsChanged": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "OLPlatform",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "ig.ENTITY.OLPlatform.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Entity"
            ]
        },
        "ig.ENTITY.OLPlatform.sound": {
            "fields": {
                "move": {
                    "type": "ig.Sound",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ENTITY": {
            "fields": {
                "OLPlatform": {
                    "type": "OLPlatformConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.puzzle.entities.switch": {
        "ig.ENTITY.Switch": {
            "fields": {
                "variable": {
                    "type": "string",
                    "isOptional": false
                },
                "isOn": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "Switch",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "ig.ENTITY.Switch.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.AnimatedEntity"
            ]
        },
        "ig.ENTITY": {
            "fields": {
                "Switch": {
                    "type": "SwitchConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.puzzle.entities.multi-hit-switch": {
        "sc.MULTI_HIT_SWITCH_TYPE_BASE": {
            "fields": {
                "size": {
                    "type": "Vec3",
                    "isOptional": false
                },
                "padding": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "activeZHeight": {
                    "type": "number",
                    "isOptional": false
                },
                "hitCount": {
                    "type": "number",
                    "isOptional": false
                },
                "decreaseDelay": {
                    "type": "number",
                    "isOptional": false
                },
                "decreaseRepeat": {
                    "type": "number",
                    "isOptional": false
                },
                "useStyleSheet": {
                    "type": "boolean",
                    "isOptional": false
                },
                "anims": {
                    "type": "any",
                    "isOptional": false
                }
            },
            "functions": {
                "hitCondition": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "a_",
                            "type": "unknown",
                            "isOptional": false
                        },
                        {
                            "name": "b_",
                            "type": "unknown",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": []
        },
        "sc": {
            "fields": {
                "MULTI_HIT_SWITCH_TYPE": {
                    "type": "{\n            default: MULTI_HIT_SWITCH_TYPE_BASE\n            arSwitch: MULTI_HIT_SWITCH_TYPE_BASE\n            old: MULTI_HIT_SWITCH_TYPE_BASE\n        }"
                },
                "default": {
                    "type": "MULTI_HIT_SWITCH_TYPE_BASE",
                    "isOptional": false
                },
                "arSwitch": {
                    "type": "MULTI_HIT_SWITCH_TYPE_BASE",
                    "isOptional": false
                },
                "old": {
                    "type": "MULTI_HIT_SWITCH_TYPE_BASE",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ENTITY.MultiHitSwitch.Settings": {
            "fields": {
                "switchType": {
                    "type": "keyof typeof sc.MULTI_HIT_SWITCH_TYPE",
                    "isOptional": false
                },
                "variable": {
                    "type": "string",
                    "isOptional": true
                },
                "addValue": {
                    "type": "string",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ENTITY.MultiHitSwitch": {
            "fields": {
                "hitCondition": {
                    "type": "string",
                    "isOptional": false
                },
                "ballDestroyer": {
                    "type": "boolean",
                    "isOptional": false
                },
                "activeZHeight": {
                    "type": "number",
                    "isOptional": false
                },
                "variable": {
                    "type": "string",
                    "isOptional": false
                },
                "isOn": {
                    "type": "boolean",
                    "isOptional": false
                },
                "hitsToActive": {
                    "type": "number",
                    "isOptional": false
                },
                "currentHits": {
                    "type": "number",
                    "isOptional": false
                },
                "decreaseDelay": {
                    "type": "number",
                    "isOptional": false
                },
                "decreaseRepeat": {
                    "type": "number",
                    "isOptional": false
                },
                "timerUntilDecrease": {
                    "type": "number",
                    "isOptional": false
                },
                "timerDecreaseStep": {
                    "type": "number",
                    "isOptional": false
                },
                "hitSound": {
                    "type": "ig.Sound",
                    "isOptional": false
                },
                "countSound": {
                    "type": "ig.Sound",
                    "isOptional": false
                },
                "activateSound": {
                    "type": "ig.Sound",
                    "isOptional": false
                },
                "addValue": {
                    "type": "string",
                    "isOptional": true
                }
            },
            "functions": {
                "init": {
                    "returnType": "MultiHitSwitch",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "ig.ENTITY.MultiHitSwitch.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.AnimatedEntity"
            ]
        },
        "ig.ENTITY": {
            "fields": {
                "MultiHitSwitch": {
                    "type": "MultiHitSwitchConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.player.entities.player": {
        "ig.ENTITY.Player.PlayerState": {
            "fields": {
                "startState": {
                    "type": "number",
                    "isOptional": false
                },
                "guarding": {
                    "type": "boolean",
                    "isOptional": false
                },
                "applyCharge": {
                    "type": "boolean",
                    "isOptional": false
                },
                "isCharging": {
                    "type": "boolean",
                    "isOptional": false
                },
                "redashReady": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ENTITY.Player.PlayerInput": {
            "fields": {
                "thrown": {
                    "type": "boolean",
                    "isOptional": false
                },
                "melee": {
                    "type": "boolean",
                    "isOptional": false
                },
                "aim": {
                    "type": "boolean",
                    "isOptional": false
                },
                "autoThrow": {
                    "type": "boolean",
                    "isOptional": false
                },
                "attack": {
                    "type": "boolean",
                    "isOptional": false
                },
                "guard": {
                    "type": "boolean",
                    "isOptional": false
                },
                "dashX": {
                    "type": "number",
                    "isOptional": false
                },
                "dashY": {
                    "type": "number",
                    "isOptional": false
                },
                "switchMode": {
                    "type": "boolean",
                    "isOptional": false
                },
                "relativeVel": {
                    "type": "number",
                    "isOptional": false
                },
                "moveDir": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "aimStart": {
                    "type": "boolean",
                    "isOptional": false
                },
                "charge": {
                    "type": "boolean",
                    "isOptional": false
                },
                "lastMoveDir": {
                    "type": "Vec2",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ENTITY.Player.Charging.Type": {
            "fields": {
                "actionKey": {
                    "type": "string",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ENTITY.Player.Charging": {
            "fields": {
                "time": {
                    "type": "number",
                    "isOptional": false
                },
                "cancelTime": {
                    "type": "number",
                    "isOptional": false
                },
                "swapped": {
                    "type": "boolean",
                    "isOptional": false
                },
                "type": {
                    "type": "Charging.Type",
                    "isOptional": false
                },
                "maxLevel": {
                    "type": "number",
                    "isOptional": false
                },
                "fx": {
                    "type": "sc.CombatCharge",
                    "isOptional": false
                },
                "block": {
                    "type": "number",
                    "isOptional": false
                },
                "msg": {
                    "type": "sc.SmallEntityBox",
                    "isOptional": false
                },
                "executeLevel": {
                    "type": "number",
                    "isOptional": false
                },
                "prefDir": {
                    "type": "Vec2",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ENTITY.Player.ActionKey": {
            "fields": {
                "actionKey": {
                    "type": "'ATTACK_SPECIAL' | 'THROW_SPECIAL' | 'GUARD_SPECIAL' | 'DASH_SPECIAL'",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ENTITY.Player.Gui": {
            "fields": {
                "crosshair": {
                    "type": "ig.ENTITY.Crosshair",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ENTITY.Player.Skin": {
            "fields": {
                "appearanceFx": {
                    "type": "Nullable<ig.ENTITY.Effect>",
                    "isOptional": false
                },
                "apperance": {
                    "type": "Nullable<unknown>",
                    "isOptional": false
                },
                "stepFx": {
                    "type": "Nullable<ig.EffectSheet>",
                    "isOptional": false
                },
                "auraFx": {
                    "type": "Nullable<ig.EffectSheet>",
                    "isOptional": false
                },
                "auraFxHandle": {
                    "type": "Nullable<ig.EffectHandle>",
                    "isOptional": false
                },
                "pet": {
                    "type": "Nullable<sc.PlayerPetEntity>",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ENTITY.Player": {
            "fields": {
                "skin": {
                    "type": "ig.ENTITY.Player.Skin",
                    "isOptional": false
                },
                "proxies": {
                    "type": "Record<string, sc.ProxySpawnerBase>",
                    "isOptional": false
                },
                "model": {
                    "type": "sc.PlayerModel",
                    "isOptional": false
                },
                "state": {
                    "type": "number",
                    "isOptional": false
                },
                "throwCounter": {
                    "type": "number",
                    "isOptional": false
                },
                "attackCounter": {
                    "type": "number",
                    "isOptional": false
                },
                "attackResetTimer": {
                    "type": "number",
                    "isOptional": false
                },
                "throwDir": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "throwDirData": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "doAttack": {
                    "type": "boolean",
                    "isOptional": false
                },
                "lastMoveDir": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "dashCount": {
                    "type": "number",
                    "isOptional": false
                },
                "dashAttackCount": {
                    "type": "number",
                    "isOptional": false
                },
                "maxDash": {
                    "type": "number",
                    "isOptional": false
                },
                "keepLastMoveDir": {
                    "type": "number",
                    "isOptional": false
                },
                "moveDirStartedTimer": {
                    "type": "number",
                    "isOptional": false
                },
                "jumpPoint": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "jumpForwardDir": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "idle": {
                    "type": "{ timer: number; actions: ig.Action[]; petAction: null }",
                    "isOptional": false
                },
                "gui": {
                    "type": "Player.Gui",
                    "isOptional": false
                },
                "cameraHandle": {
                    "type": "ig.Camera.TargetHandle",
                    "isOptional": false
                },
                "cameraTargets": {
                    "type": "ig.Entity[]",
                    "isOptional": false
                },
                "mapStartPos": {
                    "type": "Vec3",
                    "isOptional": false
                },
                "actionBlocked": {
                    "type": "ig.ACTION_STEP.SET_PLAYER_ACTION_BLOCK.BlockData",
                    "isOptional": false
                },
                "combatStats": {
                    "type": "{ lastTarget: Nullable<ig.Entity> }",
                    "isOptional": false
                },
                "dashDir": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "dashDirData": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "dashTimer": {
                    "type": "number",
                    "isOptional": false
                },
                "dashBlock": {
                    "type": "number",
                    "isOptional": false
                },
                "doEscapeTimer": {
                    "type": "number",
                    "isOptional": false
                },
                "stunEscapeDash": {
                    "type": "boolean",
                    "isOptional": false
                },
                "dashPerfect": {
                    "type": "boolean",
                    "isOptional": false
                },
                "perfectGuardCooldown": {
                    "type": "number",
                    "isOptional": false
                },
                "charging": {
                    "type": "ig.ENTITY.Player.Charging",
                    "isOptional": false
                },
                "chargeThrowCharged": {
                    "type": "boolean",
                    "isOptional": false
                },
                "floating": {
                    "type": "boolean",
                    "isOptional": false
                },
                "recordInput": {
                    "type": "boolean",
                    "isOptional": false
                },
                "interactObject": {
                    "type": "Nullable<sc.PushPullable>",
                    "isOptional": false
                },
                "explicitAimStart": {
                    "type": "number",
                    "isOptional": false
                },
                "levelUpNotifier": {
                    "type": "sc.PlayerLevelNotifier",
                    "isOptional": false
                },
                "atLandmarkHeal": {
                    "type": "number",
                    "isOptional": false
                },
                "atLandmarkTeleport": {
                    "type": "number",
                    "isOptional": false
                },
                "itemConsumer": {
                    "type": "sc.ItemConsumption",
                    "isOptional": false
                },
                "isPlayer": {
                    "type": "true",
                    "isOptional": false
                },
                "hidePets": {
                    "type": "boolean",
                    "isOptional": false
                },
                "switchedMode": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "initModel": {
                    "returnType": "void",
                    "args": []
                },
                "initIdleActions": {
                    "returnType": "void",
                    "args": []
                },
                "updateAnimSheet": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "updateFx",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "updateSkinAura": {
                    "returnType": "void",
                    "args": []
                },
                "updateModelStats": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "updateFx",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "showChargeEffect": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "level",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "clearCharge": {
                    "returnType": "void",
                    "args": []
                },
                "onKill": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "dontRespawn",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "getMaxChargeLevel": {
                    "returnType": "0 | 1 | 2 | 3",
                    "args": [
                        {
                            "name": "actionKey",
                            "type": "Player.ActionKey",
                            "isOptional": false
                        }
                    ]
                },
                "getChargeAction": {
                    "returnType": "string",
                    "args": [
                        {
                            "name": "chargeType",
                            "type": "ig.ENTITY.Player.Charging.Type",
                            "isOptional": false
                        },
                        {
                            "name": "level",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "isControlBlocked": {
                    "returnType": "boolean",
                    "args": []
                },
                "gatherInput": {
                    "returnType": "ig.ENTITY.Player.PlayerInput",
                    "args": []
                },
                "handleStateStart": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "playerState",
                            "type": "ig.ENTITY.Player.PlayerState",
                            "isOptional": false
                        },
                        {
                            "name": "inputState",
                            "type": "ig.ENTITY.Player.PlayerInput",
                            "isOptional": false
                        }
                    ]
                },
                "onPerfectDash": {
                    "returnType": "void",
                    "args": []
                },
                "onHeal": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "healInfo",
                            "type": "sc.HealInfo.Settings | sc.HealInfo",
                            "isOptional": false
                        },
                        {
                            "name": "amount",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "Player",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "{}",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "sc.PlayerBaseEntity",
                "ig.Vars.Accessor",
                "sc.Model.Observer"
            ]
        },
        "ig.ENTITY.Player.idle": {
            "fields": {
                "timer": {
                    "type": "number",
                    "isOptional": false
                },
                "actions": {
                    "type": "ig.Action[]",
                    "isOptional": false
                },
                "petAction": {
                    "type": "null",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ENTITY.Player.combatStats": {
            "fields": {
                "lastTarget": {
                    "type": "Nullable<ig.Entity>",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ENTITY": {
            "fields": {
                "Player": {
                    "type": "PlayerConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.puzzle.components.push-pullable": {
        "sc": {
            "fields": {
                "PushPullSounds": {
                    "type": "Record<'Start' | 'Loop', ig.Sound>"
                },
                "PushPullable": {
                    "type": "PushPullableConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.PushPullable": {
            "fields": {
                "entity": {
                    "type": "PullableEntity",
                    "isOptional": false
                },
                "active": {
                    "type": "boolean",
                    "isOptional": false
                },
                "gripDir": {
                    "type": "keyof typeof ig.ActorEntity.FACE4",
                    "isOptional": false
                },
                "deferredRelease": {
                    "type": "boolean",
                    "isOptional": false
                },
                "interactEntry": {
                    "type": "sc.MapInteractEntry",
                    "isOptional": false
                },
                "interactIcons": {
                    "type": "Record<'vertical' | 'horizontal', sc.MapInteractIcon>",
                    "isOptional": false
                },
                "coordDelta": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "targetPos": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "dragState": {
                    "type": "number",
                    "isOptional": false
                },
                "dragSpeed": {
                    "type": "number",
                    "isOptional": false
                },
                "speedTimer": {
                    "type": "number",
                    "isOptional": false
                },
                "dustTimer": {
                    "type": "number",
                    "isOptional": false
                },
                "rumbleHandle": {
                    "type": "ig.Rumble.RumbleHandle",
                    "isOptional": false
                },
                "gripCancelTimer": {
                    "type": "number",
                    "isOptional": false
                },
                "soundHandle": {
                    "type": "Nullable<ig.SoundHandle>",
                    "isOptional": false
                },
                "navBlocker": {
                    "type": "ig.NavBlocker",
                    "isOptional": false
                },
                "magnetJustEnded": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "setActive": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "active",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "isActive": {
                    "returnType": "boolean",
                    "args": []
                },
                "onInteraction": {
                    "returnType": "void",
                    "args": []
                },
                "onInteractionEnd": {
                    "returnType": "void",
                    "args": []
                },
                "isInteractionBlocked": {
                    "returnType": "boolean",
                    "args": []
                },
                "resetPos": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "pos",
                            "type": "Vec3",
                            "isOptional": true
                        },
                        {
                            "name": "noSpawnEffects",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "onUpdate": {
                    "returnType": "void",
                    "args": []
                },
                "checkLockIn": {
                    "returnType": "void",
                    "args": []
                },
                "onKill": {
                    "returnType": "void",
                    "args": []
                },
                "onDeferredUpdate": {
                    "returnType": "void",
                    "args": []
                },
                "updateStateFromIdle": {
                    "returnType": "void",
                    "args": []
                },
                "stopSound": {
                    "returnType": "void",
                    "args": []
                },
                "cancelGrip": {
                    "returnType": "void",
                    "args": []
                },
                "onInteractObjectDrop": {
                    "returnType": "void",
                    "args": []
                },
                "getGripPosAndFace": {
                    "returnType": "Vec3",
                    "args": [
                        {
                            "name": "dest",
                            "type": "Vec3",
                            "isOptional": false
                        }
                    ]
                },
                "getMovePlayerToPushableInteractibleEntityBoxThingeeAndSetGripDir": {
                    "returnType": "ig.Action",
                    "args": []
                },
                "moveBox": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "vx",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "vy",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "onMagnetEnd": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "PushPullable",
                    "args": [
                        {
                            "name": "entity",
                            "type": "PullableEntity",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class"
            ]
        }
    },
    "game.feature.puzzle.entities.chest": {
        "ig.ENTITY.Chest.Settings": {
            "fields": {
                "trigger": {
                    "type": "string",
                    "isOptional": true
                },
                "noTrack": {
                    "type": "boolean",
                    "isOptional": true
                },
                "chestType": {
                    "type": "keyof typeof sc.CHEST_TYPE",
                    "isOptional": true
                },
                "variable": {
                    "type": "string",
                    "isOptional": true
                },
                "item": {
                    "type": "number",
                    "isOptional": false
                },
                "amount": {
                    "type": "number",
                    "isOptional": true
                },
                "hideCondition": {
                    "type": "string",
                    "isOptional": true
                },
                "detectCondition": {
                    "type": "string",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": [
                "ig.Entity.Settings"
            ]
        },
        "ig.ENTITY.Chest": {
            "fields": {
                "mapIcons": {
                    "type": "sc.MapInteractIcon",
                    "isOptional": false
                },
                "mapIconsKey": {
                    "type": "sc.MapInteractIcon",
                    "isOptional": false
                },
                "effects": {
                    "type": "{ sheet: ig.EffectSheet; handle?: ig.ENTITY.Effect }",
                    "isOptional": false
                },
                "interactEntry": {
                    "type": "sc.MapInteractEntry",
                    "isOptional": false
                },
                "hideHandle": {
                    "type": "ig.ENTITY.Effect",
                    "isOptional": true
                },
                "isOpen": {
                    "type": "boolean",
                    "isOptional": false
                },
                "chestVariable": {
                    "type": "boolean",
                    "isOptional": false
                },
                "item": {
                    "type": "sc.ItemID",
                    "isOptional": false
                },
                "amount": {
                    "type": "number",
                    "isOptional": false
                },
                "chestType": {
                    "type": "sc.CHEST_TYPE",
                    "isOptional": false
                },
                "lockedIcon": {
                    "type": "boolean",
                    "isOptional": false
                },
                "_itemName": {
                    "type": "string",
                    "isOptional": false
                },
                "_trigger": {
                    "type": "string",
                    "isOptional": true
                },
                "_initialized": {
                    "type": "boolean",
                    "isOptional": false
                },
                "_noTrack": {
                    "type": "boolean",
                    "isOptional": false
                },
                "hideManager": {
                    "type": "ig.EntityHideManager",
                    "isOptional": true
                }
            },
            "functions": {
                "_initGfx": {
                    "returnType": "void",
                    "args": []
                },
                "show": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "noEffects",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "_updateIcon": {
                    "returnType": "void",
                    "args": []
                },
                "onHideRequest": {
                    "returnType": "void",
                    "args": []
                },
                "update": {
                    "returnType": "void",
                    "args": []
                },
                "onInteraction": {
                    "returnType": "boolean | undefined",
                    "args": []
                },
                "openUp": {
                    "returnType": "void",
                    "args": []
                },
                "_reallyOpenUp": {
                    "returnType": "void",
                    "args": []
                },
                "isOpened": {
                    "returnType": "boolean",
                    "args": []
                },
                "animationEnded": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "animName",
                            "type": "string",
                            "isOptional": true
                        }
                    ]
                },
                "varsChanged": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "Chest",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "ig.ENTITY.Chest.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.AnimatedEntity",
                "ig.EffectSheet.EventCallback"
            ]
        },
        "ig.ENTITY.Chest.effects": {
            "fields": {
                "sheet": {
                    "type": "ig.EffectSheet",
                    "isOptional": false
                },
                "handle": {
                    "type": "ig.ENTITY.Effect",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ENTITY": {
            "fields": {
                "Chest": {
                    "type": "ChestConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.puzzle.entities.dynamic-platform": {
        "sc.DynamicPlatformTypeBase": {
            "fields": {
                "size": {
                    "type": "Vec3",
                    "isOptional": false
                },
                "styleKey": {
                    "type": "string",
                    "isOptional": false
                },
                "terrain": {
                    "type": "ig.TERRAIN",
                    "isOptional": false
                },
                "anims": {
                    "type": "unknown",
                    "isOptional": false
                },
                "walkAnims": {
                    "type": "{\n        default?: ig.ActorEntity.WalkAnims;\n        on?: ig.ActorEntity.WalkAnims;\n        off?: ig.ActorEntity.WalkAnims;\n      }",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.DynamicPlatformTypeBase.walkAnims": {
            "fields": {
                "default": {
                    "type": "ig.ActorEntity.WalkAnims",
                    "isOptional": true
                },
                "on": {
                    "type": "ig.ActorEntity.WalkAnims",
                    "isOptional": true
                },
                "off": {
                    "type": "ig.ActorEntity.WalkAnims",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "sc": {
            "fields": {
                "DYNAMIC_PLATFORM_TYPES": {
                    "type": "Record<\n      'Large' | 'RhombusMedium' | 'Floating' | 'FloatingBig' | 'AridBig' | 'ArWallH' | 'ArWallV',\n      DynamicPlatformTypeBase\n    >"
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ENTITY.DynamicPlatform.Settings": {
            "fields": {
                "platformType": {
                    "type": "keyof typeof sc.DYNAMIC_PLATFORM_TYPES",
                    "isOptional": false
                },
                "states": {
                    "type": "unknown",
                    "isOptional": false
                },
                "pauseCondition": {
                    "type": "string",
                    "isOptional": false
                },
                "pauseAnimation": {
                    "type": "string",
                    "isOptional": false
                },
                "skipWait": {
                    "type": "boolean",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": [
                "ig.Entity.Settings"
            ]
        },
        "ig.ENTITY.DynamicPlatform": {
            "fields": {
                "currentState": {
                    "type": "unknown",
                    "isOptional": false
                },
                "states": {
                    "type": "unknown[]",
                    "isOptional": false
                },
                "pauseCondition": {
                    "type": "ig.VarCondition",
                    "isOptional": false
                },
                "pauseAnimation": {
                    "type": "string",
                    "isOptional": false
                },
                "baseConfig": {
                    "type": "ig.ActorConfig",
                    "isOptional": false
                },
                "paused": {
                    "type": "boolean",
                    "isOptional": false
                },
                "skipWaitForAction": {
                    "type": "boolean",
                    "isOptional": false
                },
                "_switchState": {
                    "type": "boolean",
                    "isOptional": false
                },
                "_stateReached": {
                    "type": "boolean",
                    "isOptional": false
                },
                "fx": {
                    "type": "Record<string, ig.EffectHandle>",
                    "isOptional": false
                },
                "terrain": {
                    "type": "ig.TERRAIN",
                    "isOptional": false
                },
                "fxHideHandle": {
                    "type": "ig.ENTITY.Effect",
                    "isOptional": true
                }
            },
            "functions": {
                "show": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "dontSpawnFx",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "onHideRequest": {
                    "returnType": "void",
                    "args": []
                },
                "update": {
                    "returnType": "void",
                    "args": []
                },
                "postActionUpdate": {
                    "returnType": "void",
                    "args": []
                },
                "onKill": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "_unused",
                            "type": "unknown",
                            "isOptional": true
                        }
                    ]
                },
                "updateStates": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "forcePlayCurrentState",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "playCurrentState": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "setPos",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "varsChanged": {
                    "returnType": "void",
                    "args": []
                },
                "updatePause": {
                    "returnType": "void",
                    "args": []
                }
            },
            "parents": [
                "ig.ActorEntity",
                "ig.EffectSheet.EventCallback"
            ]
        },
        "ig.ENTITY.Destructible": {
            "fields": {},
            "functions": {
                "init": {
                    "returnType": "Destructible",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "ig.ENTITY.DynamicPlatform.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": []
        },
        "ig.ENTITY": {
            "fields": {
                "DynamicPlatform": {
                    "type": "DynamicPlatformConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.puzzle.entities.one-time-switch": {
        "sc.ONE_TIME_SWITCH_TYPE_BASE": {
            "fields": {
                "size": {
                    "type": "Vec3",
                    "isOptional": false
                },
                "padding": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "activeZHeight": {
                    "type": "number",
                    "isOptional": false
                },
                "useStyleSheet": {
                    "type": "string",
                    "isOptional": false
                },
                "anims": {
                    "type": "any",
                    "isOptional": false
                }
            },
            "functions": {
                "hitCondition": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "a_",
                            "type": "unknown",
                            "isOptional": false
                        },
                        {
                            "name": "b_",
                            "type": "unknown",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": []
        },
        "sc": {
            "fields": {
                "ONE_TIME_SWITCH_TYPE": {
                    "type": "{\n            default: sc.ONE_TIME_SWITCH_TYPE_BASE\n            \"turret-switch\": sc.ONE_TIME_SWITCH_TYPE_BASE\n            propeller: sc.ONE_TIME_SWITCH_TYPE_BASE\n            steamPipe: sc.ONE_TIME_SWITCH_TYPE_BASE\n            teslaSwitch: sc.ONE_TIME_SWITCH_TYPE_BASE\n            arSwitch: sc.ONE_TIME_SWITCH_TYPE_BASE\n            waveSwitch: sc.ONE_TIME_SWITCH_TYPE_BASE\n            ferroSwitch: sc.ONE_TIME_SWITCH_TYPE_BASE\n        }"
                },
                "default": {
                    "type": "sc.ONE_TIME_SWITCH_TYPE_BASE",
                    "isOptional": false
                },
                "\"turret-switch\"": {
                    "type": "sc.ONE_TIME_SWITCH_TYPE_BASE",
                    "isOptional": false
                },
                "propeller": {
                    "type": "sc.ONE_TIME_SWITCH_TYPE_BASE",
                    "isOptional": false
                },
                "steamPipe": {
                    "type": "sc.ONE_TIME_SWITCH_TYPE_BASE",
                    "isOptional": false
                },
                "teslaSwitch": {
                    "type": "sc.ONE_TIME_SWITCH_TYPE_BASE",
                    "isOptional": false
                },
                "arSwitch": {
                    "type": "sc.ONE_TIME_SWITCH_TYPE_BASE",
                    "isOptional": false
                },
                "waveSwitch": {
                    "type": "sc.ONE_TIME_SWITCH_TYPE_BASE",
                    "isOptional": false
                },
                "ferroSwitch": {
                    "type": "sc.ONE_TIME_SWITCH_TYPE_BASE",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ENTITY.OneTimeSwitch.Settings": {
            "fields": {
                "switchType": {
                    "type": "keyof typeof sc.ONE_TIME_SWITCH_TYPE",
                    "isOptional": false
                },
                "variable": {
                    "type": "string",
                    "isOptional": true
                },
                "addValue": {
                    "type": "string",
                    "isOptional": true
                },
                "activeTime": {
                    "type": "number",
                    "isOptional": true
                },
                "fixCount": {
                    "type": "number",
                    "isOptional": true
                },
                "fastMode": {
                    "type": "boolean",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ENTITY.OneTimeSwitch": {
            "fields": {
                "hitCondition": {
                    "type": "string",
                    "isOptional": false
                },
                "ballDestroyer": {
                    "type": "boolean",
                    "isOptional": false
                },
                "timer": {
                    "type": "number",
                    "isOptional": false
                },
                "filZHeight": {
                    "type": "number",
                    "isOptional": false
                },
                "variable": {
                    "type": "string",
                    "isOptional": false
                },
                "isOn": {
                    "type": "boolean",
                    "isOptional": false
                },
                "switchType": {
                    "type": "keyof typeof sc.ONE_TIME_SWITCH_TYPE",
                    "isOptional": false
                },
                "data": {
                    "type": "sc.ONE_TIME_SWITCH_TYPE_BASE",
                    "isOptional": false
                },
                "fastMode": {
                    "type": "boolean",
                    "isOptional": false
                },
                "addValue": {
                    "type": "string",
                    "isOptional": false
                },
                "activeTime": {
                    "type": "number",
                    "isOptional": false
                },
                "fixCount": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "OneTimeSwitch",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "ig.ENTITY.OneTimeSwitch.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.AnimatedEntity"
            ]
        },
        "ig.ENTITY": {
            "fields": {
                "OneTimeSwitch": {
                    "type": "OneTimeSwitchConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.puzzle.entities.push-pull-block": {
        "sc.PushPullType": {
            "fields": {
                "size": {
                    "type": "Vec3",
                    "isOptional": false
                },
                "terrain": {
                    "type": "ig.TERRAIN",
                    "isOptional": false
                },
                "useStyleSheet": {
                    "type": "boolean",
                    "isOptional": true
                },
                "anims": {
                    "type": "ig.AnimationSheet.Settings",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.PUSH_PULL_TYPES": {
            "fields": {
                "Large": {
                    "type": "PushPullType",
                    "isOptional": false
                },
                "BergenLeftRight": {
                    "type": "PushPullType",
                    "isOptional": false
                },
                "BergenUpDown": {
                    "type": "PushPullType",
                    "isOptional": false
                },
                "SmallTest": {
                    "type": "PushPullType",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc": {
            "fields": {
                "PUSH_PULL_TYPES": {
                    "type": "PUSH_PULL_TYPES"
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ENTITY.PushPullBlock.Settings": {
            "fields": {
                "pushPullType": {
                    "type": "keyof typeof sc.PUSH_PULL_TYPES",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": [
                "ig.Entity.Settings"
            ]
        },
        "ig.ENTITY.PushPullBlock": {
            "fields": {
                "_wm": {
                    "type": "ig.Config",
                    "isOptional": false
                },
                "effects": {
                    "type": "{ sheet: ig.EffectSheet; hideHandle: Nullable<ig.ENTITY.Effect> }",
                    "isOptional": false
                },
                "pushPullable": {
                    "type": "sc.PushPullable",
                    "isOptional": false
                },
                "squishRespawn": {
                    "type": "boolean",
                    "isOptional": false
                },
                "compressorSlow": {
                    "type": "number",
                    "isOptional": false
                },
                "pushPullDirection": {
                    "type": "number",
                    "isOptional": false
                },
                "bombSnap": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "show": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "dontSpawnEffects",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "onHideRequest": {
                    "returnType": "void",
                    "args": []
                },
                "resetPos": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "pos",
                            "type": "Vec3",
                            "isOptional": true
                        },
                        {
                            "name": "noSpawnEffects",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "onInteraction": {
                    "returnType": "void",
                    "args": []
                },
                "onInteractionEnd": {
                    "returnType": "void",
                    "args": []
                },
                "onKill": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "dontSpawnEffects",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "onMagnetStart": {
                    "returnType": "boolean",
                    "args": []
                },
                "onMagnetEnd": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "spawnEffects",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "init": {
                    "returnType": "PushPullBlock",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "PushPullBlock.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.AnimatedEntity",
                "ig.EffectSheet.EventCallback"
            ]
        },
        "ig.ENTITY.PushPullBlock.effects": {
            "fields": {
                "sheet": {
                    "type": "ig.EffectSheet",
                    "isOptional": false
                },
                "hideHandle": {
                    "type": "Nullable<ig.ENTITY.Effect>",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ENTITY": {
            "fields": {
                "PushPullBlock": {
                    "type": "PushPullBlockConstructor"
                },
                "WavePushPullBlock": {
                    "type": "WavePushPullBlockConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ENTITY.WavePushPullBlock.Settings": {
            "fields": {},
            "functions": {},
            "parents": [
                "ig.Entity.Settings"
            ]
        },
        "ig.ENTITY.WavePushPullBlock": {
            "fields": {
                "phased": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "ballHit": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "ball",
                            "type": "ig.ENTITY.Ball",
                            "isOptional": false
                        }
                    ]
                },
                "resetPos": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "pos",
                            "type": "Nullable<Vec3>",
                            "isOptional": true
                        }
                    ]
                },
                "init": {
                    "returnType": "WavePushPullBlock",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "WavePushPullBlock.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.AnimatedEntity",
                "ig.Entity.Attachable",
                "ig.ENTITY.WaveTeleport.Teleportable"
            ]
        }
    },
    "impact.base.entity": {
        "ig.Entity.Settings": {
            "fields": {
                "name": {
                    "type": "string",
                    "isOptional": true
                },
                "size": {
                    "type": "Partial<Vec3>",
                    "isOptional": true
                },
                "mapId": {
                    "type": "number",
                    "isOptional": true
                },
                "spawnCondition": {
                    "type": "string",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.Entity.Attachable": {
            "fields": {},
            "functions": {
                "onEntityKillDetach": {
                    "returnType": "void",
                    "args": []
                }
            },
            "parents": []
        },
        "ig.Entity": {
            "fields": {
                "id": {
                    "type": "number",
                    "isOptional": false
                },
                "uid": {
                    "type": "number",
                    "isOptional": false
                },
                "mapId": {
                    "type": "number",
                    "isOptional": false
                },
                "settings": {
                    "type": "unknown",
                    "isOptional": false
                },
                "name": {
                    "type": "Nullable<string>",
                    "isOptional": true
                },
                "coll": {
                    "type": "ig.CollEntry",
                    "isOptional": false
                },
                "sprites": {
                    "type": "ig.CubeSprite[]",
                    "isOptional": false
                },
                "entityAttached": {
                    "type": "ig.Entity.Attachable[]",
                    "isOptional": false
                },
                "_hidden": {
                    "type": "boolean",
                    "isOptional": false
                },
                "_hideRequest": {
                    "type": "boolean",
                    "isOptional": false
                },
                "_killed": {
                    "type": "boolean",
                    "isOptional": false
                },
                "ballDestroyer": {
                    "type": "boolean",
                    "isOptional": true
                },
                "isPlayer": {
                    "type": "boolean",
                    "isOptional": true
                },
                "isBall": {
                    "type": "boolean",
                    "isOptional": true
                },
                "terrain": {
                    "type": "ig.TERRAIN",
                    "isOptional": true
                },
                "dir": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "COLLISION_MAP": {
                    "type": "Record<ig.COLLTYPE, Record<ig.COLLTYPE, boolean>>",
                    "isOptional": false
                }
            },
            "functions": {
                "reset": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "ig.Entity.Settings",
                            "isOptional": false
                        }
                    ]
                },
                "initSprites": {
                    "returnType": "void",
                    "args": []
                },
                "setPos": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": true
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": true
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": true
                        },
                        {
                            "name": "moveDelta",
                            "type": "Nullable<boolean>",
                            "isOptional": true
                        }
                    ]
                },
                "setZPos": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "getCenter": {
                    "returnType": "Vec2",
                    "args": [
                        {
                            "name": "destination",
                            "type": "Nullable<Vec2>",
                            "isOptional": true
                        }
                    ]
                },
                "getAlignedPos": {
                    "returnType": "Vec3",
                    "args": [
                        {
                            "name": "alignment",
                            "type": "ig.ENTITY_ALIGN",
                            "isOptional": false
                        },
                        {
                            "name": "dest",
                            "type": "Nullable<Vec3>",
                            "isOptional": true
                        }
                    ]
                },
                "getOverlapCenterCords": {
                    "returnType": "Vec3",
                    "args": [
                        {
                            "name": "v1",
                            "type": "Vec3",
                            "isOptional": false
                        },
                        {
                            "name": "output",
                            "type": "Vec3",
                            "isOptional": true
                        }
                    ]
                },
                "getHitDir": {
                    "returnType": "Vec2",
                    "args": [
                        {
                            "name": "v1",
                            "type": "Vec2",
                            "isOptional": false
                        },
                        {
                            "name": "output",
                            "type": "Vec2",
                            "isOptional": true
                        }
                    ]
                },
                "getCollideSide": {
                    "returnType": "ig.ActorEntity.FACE4",
                    "args": [
                        {
                            "name": "otherEntity",
                            "type": "ig.Entity",
                            "isOptional": false
                        }
                    ]
                },
                "update": {
                    "returnType": "void",
                    "args": []
                },
                "setSpriteCount": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "count",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "guiSprites",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "updateSprites": {
                    "returnType": "void",
                    "args": []
                },
                "addEntityAttached": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "attachable",
                            "type": "ig.Entity.Attachable",
                            "isOptional": false
                        }
                    ]
                },
                "removeEntityAttached": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "attachable",
                            "type": "ig.Entity.Attachable",
                            "isOptional": false
                        }
                    ]
                },
                "clearEntityAttached": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "conditionCallback",
                            "type": "(attachable: ig.Entity.Attachable) => boolean",
                            "isOptional": true
                        }
                    ]
                },
                "show": {
                    "returnType": "void",
                    "args": []
                },
                "hide": {
                    "returnType": "void",
                    "args": []
                },
                "kill": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "levelChange",
                            "type": "Nullable<boolean>",
                            "isOptional": true
                        }
                    ]
                },
                "onKill": {
                    "returnType": "void",
                    "args": []
                },
                "erase": {
                    "returnType": "void",
                    "args": []
                },
                "collideWith": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "entity",
                            "type": "ig.Entity",
                            "isOptional": false
                        },
                        {
                            "name": "dir",
                            "type": "Vec2",
                            "isOptional": false
                        }
                    ]
                },
                "varsChanged": {
                    "returnType": "void",
                    "args": []
                },
                "isBallDestroyer": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "collPos",
                            "type": "Vec3",
                            "isOptional": false
                        },
                        {
                            "name": "collRes",
                            "type": "{ dir: Vec2 }",
                            "isOptional": false
                        },
                        {
                            "name": "c_",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "isBallAdjust": {
                    "returnType": "boolean",
                    "args": []
                },
                "doBallAdjust": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "pos",
                            "type": "Vec3",
                            "isOptional": false
                        },
                        {
                            "name": "dir",
                            "type": "Vec2",
                            "isOptional": false
                        },
                        {
                            "name": "size",
                            "type": "Vec3",
                            "isOptional": false
                        },
                        {
                            "name": "maxBounce",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "ballHit": {
                    "returnType": "boolean | void",
                    "args": [
                        {
                            "name": "ball",
                            "type": "ig.Entity",
                            "isOptional": false
                        },
                        {
                            "name": "args",
                            "type": "unknown[]",
                            "isOptional": false
                        }
                    ]
                },
                "isQuickMenuVisible": {
                    "returnType": "boolean",
                    "args": []
                },
                "getQuickMenuSettings": {
                    "returnType": "Omit<sc.QuickMenuTypesBaseSettings, 'entity'>",
                    "args": []
                },
                "init": {
                    "returnType": "Entity",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "ig.Entity.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class",
                "ig.Vars.Accessor"
            ]
        },
        "ig": {
            "fields": {
                "Entity": {
                    "type": "EntityConstructor"
                },
                "AnimatedEntity": {
                    "type": "AnimatedEntityConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.AnimatedEntity.Settings": {
            "fields": {},
            "functions": {},
            "parents": [
                "ig.Entity.Settings"
            ]
        },
        "ig.AnimatedEntity": {
            "fields": {
                "animSheet": {
                    "type": "ig.AnimationSheet",
                    "isOptional": false
                },
                "animState": {
                    "type": "ig.AnimationState",
                    "isOptional": false
                },
                "animSpeedFactor": {
                    "type": "number",
                    "isOptional": false
                },
                "currentAnim": {
                    "type": "string",
                    "isOptional": false
                }
            },
            "functions": {
                "initAnimations": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "sheet",
                            "type": "ig.AnimationSheet | string | unknown",
                            "isOptional": true
                        }
                    ]
                },
                "setCurrentAnim": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "reset",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "followUp",
                            "type": "Nullable<string>",
                            "isOptional": true
                        },
                        {
                            "name": "force",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "callbackOnFinish",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "updateAnim": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "AnimatedEntity",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "ig.AnimatedEntity.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Entity"
            ]
        }
    },
    "impact.feature.parallax.parallax": {
        "ig.Parallax": {
            "fields": {
                "cacheType": {
                    "type": "'Parallax'",
                    "isOptional": false
                },
                "gfx": {
                    "type": "Record<string, ig.Image>",
                    "isOptional": false
                },
                "gui": {
                    "type": "Record<string, unknown>",
                    "isOptional": false
                },
                "timeLine": {
                    "type": "unknown",
                    "isOptional": false
                },
                "cancelSkip": {
                    "type": "boolean",
                    "isOptional": false
                },
                "skipBlock": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "onCacheCleared": {
                    "returnType": "void",
                    "args": []
                },
                "onload": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "data",
                            "type": "unknown",
                            "isOptional": false
                        }
                    ]
                },
                "_convertEntries": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "entries",
                            "type": "unknown[]",
                            "isOptional": false
                        },
                        {
                            "name": "points",
                            "type": "unknown",
                            "isOptional": true
                        }
                    ]
                },
                "_convertSequence": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "sequence",
                            "type": "unknown[]",
                            "isOptional": false
                        }
                    ]
                },
                "_copyStateValues": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "state",
                            "type": "unknown",
                            "isOptional": false
                        },
                        {
                            "name": "entry",
                            "type": "unknown",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "Parallax",
                    "args": [
                        {
                            "name": "item",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.JsonLoadable"
            ]
        },
        "ig": {
            "fields": {
                "Parallax": {
                    "type": "ParallaxConstructor"
                },
                "ParallaxGui": {
                    "type": "ParallaxGuiConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ParallaxGui": {
            "fields": {
                "parallax": {
                    "type": "string",
                    "isOptional": false
                },
                "keepOnEnd": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "clearCached": {
                    "returnType": "void",
                    "args": []
                },
                "onLoadableComplete": {
                    "returnType": "void",
                    "args": []
                },
                "start": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "keepOnEnd",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "init": {
                    "returnType": "ParallaxGui",
                    "args": [
                        {
                            "name": "settings",
                            "type": "{ parallax: string }",
                            "isOptional": false
                        },
                        {
                            "name": "callback",
                            "type": "(msg: ig.SEQUENCE_MSG, labelReached?: String) => void",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.SequenceGui"
            ]
        },
        "ig.GUI": {
            "fields": {
                "Parallax": {
                    "type": "ig.ParallaxGuiConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "impact.base.system": {
        "ig.System": {
            "fields": {
                "fps": {
                    "type": "number",
                    "isOptional": false
                },
                "frameSkip": {
                    "type": "number",
                    "isOptional": false
                },
                "width": {
                    "type": "number",
                    "isOptional": false
                },
                "height": {
                    "type": "number",
                    "isOptional": false
                },
                "contextWidth": {
                    "type": "number",
                    "isOptional": false
                },
                "contextHeight": {
                    "type": "number",
                    "isOptional": false
                },
                "realWidth": {
                    "type": "number",
                    "isOptional": false
                },
                "realHeight": {
                    "type": "number",
                    "isOptional": false
                },
                "screenWidth": {
                    "type": "number",
                    "isOptional": false
                },
                "screenHeight": {
                    "type": "number",
                    "isOptional": false
                },
                "zoom": {
                    "type": "number",
                    "isOptional": false
                },
                "scale": {
                    "type": "number",
                    "isOptional": false
                },
                "contextScale": {
                    "type": "number",
                    "isOptional": false
                },
                "systemFontScale": {
                    "type": "number",
                    "isOptional": false
                },
                "skipMode": {
                    "type": "boolean",
                    "isOptional": false
                },
                "timeFactor": {
                    "type": "number",
                    "isOptional": false
                },
                "totalTimeFactor": {
                    "type": "number",
                    "isOptional": false
                },
                "rawTick": {
                    "type": "number",
                    "isOptional": false
                },
                "tick": {
                    "type": "number",
                    "isOptional": false
                },
                "actualTick": {
                    "type": "number",
                    "isOptional": false
                },
                "ingameTick": {
                    "type": "number",
                    "isOptional": false
                },
                "intervalId": {
                    "type": "number",
                    "isOptional": false
                },
                "newGameClass": {
                    "type": "Nullable<ig.GameConstructor>",
                    "isOptional": false
                },
                "running": {
                    "type": "boolean",
                    "isOptional": false
                },
                "delegate": {
                    "type": "ig.Game",
                    "isOptional": false
                },
                "clock": {
                    "type": "ig.Timer",
                    "isOptional": false
                },
                "inputDom": {
                    "type": "HTMLDivElement",
                    "isOptional": false
                },
                "canvas": {
                    "type": "HTMLCanvasElement",
                    "isOptional": false
                },
                "context": {
                    "type": "Nullable<CanvasRenderingContext2D>",
                    "isOptional": false
                },
                "cancelFocusLostCallback": {
                    "type": "() => boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "resize": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "width",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "height",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "contextScale",
                            "type": "number",
                            "isOptional": true
                        }
                    ]
                },
                "setGame": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "gameConstructor",
                            "type": "GameConstructor",
                            "isOptional": false
                        }
                    ]
                },
                "setGameNow": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "gameConstructor",
                            "type": "GameConstructor",
                            "isOptional": false
                        }
                    ]
                },
                "setDelegate": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "game",
                            "type": "ig.Game",
                            "isOptional": false
                        }
                    ]
                },
                "stopRunLoop": {
                    "returnType": "void",
                    "args": []
                },
                "startRunLoop": {
                    "returnType": "void",
                    "args": []
                },
                "run": {
                    "returnType": "void",
                    "args": []
                },
                "getScreenFromMapPos": {
                    "returnType": "Vec2",
                    "args": [
                        {
                            "name": "dest",
                            "type": "Vec2",
                            "isOptional": false
                        },
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "getMapFromScreenPos": {
                    "returnType": "Vec2",
                    "args": [
                        {
                            "name": "dest",
                            "type": "Vec2",
                            "isOptional": false
                        },
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "setFocusLost": {
                    "returnType": "void",
                    "args": []
                },
                "regainFocus": {
                    "returnType": "void",
                    "args": []
                },
                "addFocusListener": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "listener",
                            "type": "(focusLost: boolean) => void",
                            "isOptional": false
                        }
                    ]
                },
                "removeFocusListener": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "listener",
                            "type": "(focusLost: boolean) => void",
                            "isOptional": false
                        }
                    ]
                },
                "getBufferContext": {
                    "returnType": "CanvasRenderingContext2D",
                    "args": [
                        {
                            "name": "buffer",
                            "type": "HTMLCanvasElement",
                            "isOptional": false
                        }
                    ]
                },
                "error": {
                    "returnType": "never",
                    "args": [
                        {
                            "name": "error",
                            "type": "Error",
                            "isOptional": false
                        }
                    ]
                },
                "hasFocusLost": {
                    "returnType": "boolean",
                    "args": []
                },
                "getDrawPos": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "setCanvasSize": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "width",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "height",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "hideBorder",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "init": {
                    "returnType": "System",
                    "args": [
                        {
                            "name": "canvasId",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "inputDomId",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "fps",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "width",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "height",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "scale",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "ig": {
            "fields": {
                "System": {
                    "type": "SystemConstructor"
                },
                "system": {
                    "type": "ig.System"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "impact.base.system.web-audio": {
        "ig.WebAudio": {
            "fields": {
                "context": {
                    "type": "null | AudioContext",
                    "isOptional": false
                },
                "timeOffset": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "getSampleRate": {
                    "returnType": "number",
                    "args": []
                },
                "getCurrentTime": {
                    "returnType": "number",
                    "args": []
                },
                "getCurrentTimeRaw": {
                    "returnType": "number",
                    "args": []
                },
                "createPanner": {
                    "returnType": "PannerNode",
                    "args": []
                },
                "createBufferGain": {
                    "returnType": "ig.WebAudioBufferGain",
                    "args": [
                        {
                            "name": "buffer",
                            "type": "AudioBufferSourceNode",
                            "isOptional": false
                        },
                        {
                            "name": "volume",
                            "type": "number",
                            "isOptional": true
                        },
                        {
                            "name": "playbackRate",
                            "type": "number",
                            "isOptional": true
                        }
                    ]
                },
                "_createContext": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "ig.WebAudio",
                    "args": []
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "ig": {
            "fields": {
                "WebAudio": {
                    "type": "WebAudioConstructor"
                },
                "WebAudioBufferGain": {
                    "type": "WebAudioBufferGainConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.WebAudioBufferGain": {
            "fields": {
                "context": {
                    "type": "AudioContext",
                    "isOptional": false
                },
                "bufferNode": {
                    "type": "AudioBufferSourceNode",
                    "isOptional": false
                },
                "gainNode": {
                    "type": "GainNode",
                    "isOptional": false
                }
            },
            "functions": {
                "connect": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "node",
                            "type": "AudioNode",
                            "isOptional": false
                        }
                    ]
                },
                "disconnect": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "node",
                            "type": "AudioNode",
                            "isOptional": false
                        }
                    ]
                },
                "setLoop": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "loop",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "setVolume": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "volume",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "play": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "when",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "offset",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "stop": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "node",
                            "type": "AudioNode",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "ig.WebAudioBufferGain",
                    "args": [
                        {
                            "name": "context",
                            "type": "AudioContext",
                            "isOptional": false
                        },
                        {
                            "name": "buffer",
                            "type": "AudioBufferSourceNode",
                            "isOptional": false
                        },
                        {
                            "name": "volume",
                            "type": "number",
                            "isOptional": true
                        },
                        {
                            "name": "playbackRate",
                            "type": "number",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class"
            ]
        }
    },
    "game.feature.bgm.playlist": {},
    "game.feature.common-event.common-event": {
        "sc.CommonEventType": {
            "fields": {
                "_idonotexist": {
                    "type": "Settings",
                    "isOptional": false
                },
                "_wm": {
                    "type": "ig.Config",
                    "isOptional": false
                },
                "cutsceneCheck": {
                    "type": "boolean",
                    "isOptional": true
                },
                "triggerAll": {
                    "type": "boolean",
                    "isOptional": true
                }
            },
            "functions": {
                "check": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "settings",
                            "type": "Settings",
                            "isOptional": false
                        },
                        {
                            "name": "otherSettings",
                            "type": "sc.CommonEvents.AllData",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": []
        },
        "sc.COMMON_EVENT_TYPE": {
            "fields": {
                "CALL": {
                    "type": "sc.CommonEventType",
                    "isOptional": false
                },
                "ENEMY_ATTACKS": {
                    "type": "sc.CommonEventType<{\n        enemies?: string[];\n        levelGapAbove?: number;\n        levelGapBelow?: number;\n        playerStarted?: boolean;\n        battleStarted?: boolean;\n      }>",
                    "isOptional": false
                },
                "enemies": {
                    "type": "string[]",
                    "isOptional": true
                },
                "levelGapAbove": {
                    "type": "number",
                    "isOptional": true
                },
                "levelGapBelow": {
                    "type": "number",
                    "isOptional": true
                },
                "playerStarted": {
                    "type": "boolean",
                    "isOptional": true
                },
                "battleStarted": {
                    "type": "boolean",
                    "isOptional": true
                },
                "ENEMY_DEFEATED": {
                    "type": "sc.CommonEventType<{\n        enemy?: string;\n      }>",
                    "isOptional": false
                },
                "enemy": {
                    "type": "string",
                    "isOptional": true
                },
                "BATTLE_OVER": {
                    "type": "sc.CommonEventType<{\n        killCount: number;\n        rank?: sc.CombatRankLabel;\n      }>",
                    "isOptional": false
                },
                "killCount": {
                    "type": "number",
                    "isOptional": false
                },
                "rank": {
                    "type": "sc.CombatRankLabel",
                    "isOptional": true
                },
                "COOLDOWN_START": {
                    "type": "sc.CommonEventType<{\n        enemies?: string[];\n        killCount: number;\n        rank?: sc.CombatRankLabel;\n        rankReached?: sc.CombatRankLabel;\n      }>",
                    "isOptional": false
                },
                "rankReached": {
                    "type": "sc.CombatRankLabel",
                    "isOptional": true
                },
                "LEVEL_UP": {
                    "type": "sc.CommonEventType<{\n        level: number;\n      }>",
                    "isOptional": false
                },
                "level": {
                    "type": "number",
                    "isOptional": false
                },
                "MENU_LEAVE": {
                    "type": "sc.CommonEventType",
                    "isOptional": false
                },
                "QUEST_ACCEPTED": {
                    "type": "sc.CommonEventType",
                    "isOptional": false
                },
                "PARTY_MEMBER_EVENT": {
                    "type": "sc.CommonEventType<{\n        member: keyof typeof sc.PARTY_OPTIONS;\n        eventType: 'DIES' | 'REVIVED' | 'EQUIP_UPDATE';\n      }>",
                    "isOptional": false
                },
                "member": {
                    "type": "keyof typeof sc.PARTY_OPTIONS",
                    "isOptional": true
                },
                "eventType": {
                    "type": "'DIES' | 'REVIVED' | 'EQUIP_UPDATE'",
                    "isOptional": false
                },
                "DUNGEON_TRANSITION": {
                    "type": "sc.CommonEventType<{\n        mapTransition: Nullable<'ENTER' | 'LEAVE'>;\n        areaTransition: Nullable<'ENTER' | 'LEAVE'>;\n      }>",
                    "isOptional": false
                },
                "mapTransition": {
                    "type": "Nullable<'ENTER' | 'LEAVE'>",
                    "isOptional": false
                },
                "areaTransition": {
                    "type": "Nullable<'ENTER' | 'LEAVE'>",
                    "isOptional": false
                },
                "SOCIAL_ACTION": {
                    "type": "sc.CommonEventType<{\n        member?: keyof typeof sc.PARTY_OPTIONS;\n        actionType: keyof typeof sc.SOCIAL_ACTION;\n      }>",
                    "isOptional": false
                },
                "actionType": {
                    "type": "keyof typeof sc.SOCIAL_ACTION",
                    "isOptional": false
                },
                "MAP_ENTERED": {
                    "type": "sc.CommonEventType",
                    "isOptional": false
                },
                "FORCE_UPDATE": {
                    "type": "sc.CommonEventType",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc": {
            "fields": {
                "COMMON_EVENT_TYPE": {
                    "type": "COMMON_EVENT_TYPE"
                },
                "COMMON_EVENT_FREQUENCY": {
                    "type": "COMMON_EVENT_FREQUENCY"
                },
                "CommonEvents": {
                    "type": "CommonEventsConstructor"
                },
                "commonEvents": {
                    "type": "CommonEvents"
                },
                "CommonEvent": {
                    "type": "CommonEventConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.CommonEventFrequency": {
            "fields": {
                "prop": {
                    "type": "number",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.COMMON_EVENT_FREQUENCY": {
            "fields": {
                "ALWAYS": {
                    "type": "sc.CommonEventFrequency",
                    "isOptional": false
                },
                "REGULAR": {
                    "type": "sc.CommonEventFrequency",
                    "isOptional": false
                },
                "SOMETIMES": {
                    "type": "sc.CommonEventFrequency",
                    "isOptional": false
                },
                "RARE": {
                    "type": "sc.CommonEventFrequency",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.CommonEvents.DelayedTrigger": {
            "fields": {
                "type": {
                    "type": "T",
                    "isOptional": false
                },
                "eventData": {
                    "type": "DataOf<T>",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.CommonEvents": {
            "fields": {
                "events": {
                    "type": "Record<string, sc.CommonEvent>",
                    "isOptional": false
                },
                "eventsByType": {
                    "type": "Record<keyof typeof sc.COMMON_EVENT_TYPE, sc.CommonEvent[]>",
                    "isOptional": false
                },
                "runData": {
                    "type": "sc.CommonEvents.RunData",
                    "isOptional": false
                },
                "delayedTriggerStack": {
                    "type": "sc.CommonEvents.DelayedTrigger[]",
                    "isOptional": false
                },
                "delayedTriggerTimer": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "onReset": {
                    "returnType": "void",
                    "args": []
                },
                "onStorageSave": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "savefile",
                            "type": "ig.SaveSlot.Data",
                            "isOptional": false
                        }
                    ]
                },
                "onStoragePreLoad": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "savefile",
                            "type": "ig.SaveSlot.Data",
                            "isOptional": false
                        }
                    ]
                },
                "onDeferredUpdate": {
                    "returnType": "void",
                    "args": []
                },
                "_loadCommonEvents": {
                    "returnType": "void",
                    "args": []
                },
                "triggerEvent": {
                    "returnType": "Nullable<sc.CommonEvent>",
                    "args": [
                        {
                            "name": "type",
                            "type": "T",
                            "isOptional": false
                        },
                        {
                            "name": "data",
                            "type": "sc.CommonEvents.DataOf<T>",
                            "isOptional": false
                        }
                    ]
                },
                "cancelEvent": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "type",
                            "type": "keyof typeof sc.COMMON_EVENT_TYPE",
                            "isOptional": false
                        }
                    ]
                },
                "startCallEvent": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "event",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "getInlineCallEvent": {
                    "returnType": "Nullable<ig.Event>",
                    "args": [
                        {
                            "name": "eventName",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "getInlineCallData": {
                    "returnType": "Nullable<sc.CommonEvent.CallData>",
                    "args": [
                        {
                            "name": "eventName",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "_forcedTriggerEvent": {
                    "returnType": "Nullable<sc.CommonEvent>",
                    "args": [
                        {
                            "name": "type",
                            "type": "keyof typeof sc.COMMON_EVENT_TYPE",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "sc.CommonEvents.AllData",
                            "isOptional": false
                        },
                        {
                            "name": "onlySideMessageOverride",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "_checkEventExecution": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "event",
                            "type": "sc.CommonEvent",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "sc.CommonEvents.AllData",
                            "isOptional": false
                        },
                        {
                            "name": "rand",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "_startCommonEvent": {
                    "returnType": "ig.EventCall",
                    "args": [
                        {
                            "name": "event",
                            "type": "sc.CommonEvent",
                            "isOptional": false
                        }
                    ]
                },
                "selectEvent": {
                    "returnType": "Nullable<sc.CommonEvent>",
                    "args": [
                        {
                            "name": "type",
                            "type": "keyof typeof sc.COMMON_EVENT_TYPE",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "sc.CommonEvents.AllData",
                            "isOptional": false
                        },
                        {
                            "name": "exclude",
                            "type": "sc.CommonEvent[]",
                            "isOptional": false
                        },
                        {
                            "name": "onlySideMessageOverride",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "getRunCount": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "event",
                            "type": "sc.CommonEvent",
                            "isOptional": false
                        }
                    ]
                },
                "getTriggerCount": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "event",
                            "type": "sc.CommonEvent",
                            "isOptional": false
                        }
                    ]
                },
                "increaseTriggerCount": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "event",
                            "type": "sc.CommonEvent",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "CommonEvents",
                    "args": []
                }
            },
            "parents": [
                "ig.GameAddon",
                "ig.Storage.Listener"
            ]
        },
        "sc.CommonEvent": {
            "fields": {
                "type": {
                    "type": "keyof typeof sc.COMMON_EVENT_TYPE",
                    "isOptional": false
                },
                "name": {
                    "type": "string",
                    "isOptional": false
                },
                "typeDetails": {
                    "type": "sc.CommonEvent.TypeDetails",
                    "isOptional": false
                },
                "frequency": {
                    "type": "sc.CommonEventFrequency",
                    "isOptional": false
                },
                "repeat": {
                    "type": "sc.COMMON_EVENT_REPEAT",
                    "isOptional": false
                },
                "runOnTrigger": {
                    "type": "number[]",
                    "isOptional": true
                },
                "loopCount": {
                    "type": "number",
                    "isOptional": false
                },
                "condition": {
                    "type": "ig.VarCondition",
                    "isOptional": false
                },
                "event": {
                    "type": "ig.Event",
                    "isOptional": false
                }
            },
            "functions": {
                "check": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "eventData",
                            "type": "sc.CommonEvents.AllData",
                            "isOptional": false
                        }
                    ]
                },
                "start": {
                    "returnType": "ig.EventCall",
                    "args": [
                        {
                            "name": "eventData",
                            "type": "sc.CommonEvents.AllData",
                            "isOptional": false
                        }
                    ]
                },
                "getEvent": {
                    "returnType": "ig.Event",
                    "args": []
                },
                "getCallData": {
                    "returnType": "sc.CommonEvent.CallData",
                    "args": [
                        {
                            "name": "runCount",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "CommonEvent",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "data",
                            "type": "sc.CommonEvent.Data",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "sc.CommonEvent.Data": {
            "fields": {
                "type": {
                    "type": "TypeDetails",
                    "isOptional": false
                },
                "frequency": {
                    "type": "keyof typeof sc.COMMON_EVENT_FREQUENCY",
                    "isOptional": false
                },
                "trigger": {
                    "type": "number",
                    "isOptional": false
                },
                "repeat": {
                    "type": "keyof typeof sc.COMMON_EVENT_REPEAT",
                    "isOptional": false
                },
                "condition": {
                    "type": "string",
                    "isOptional": false
                },
                "runOnTrigger": {
                    "type": "number[]",
                    "isOptional": true
                },
                "eventType": {
                    "type": "keyof typeof ig.EventRunType",
                    "isOptional": false
                },
                "overrideSideMessage": {
                    "type": "boolean",
                    "isOptional": true
                },
                "loopCount": {
                    "type": "number",
                    "isOptional": true
                },
                "event": {
                    "type": "ig.EventStepBase.Settings[]",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.CommonEvent.CallData": {
            "fields": {
                "runCount": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.menu.map-model": {
        "sc.LandmarkOption.Bounds": {
            "fields": {
                "x": {
                    "type": "number",
                    "isOptional": false
                },
                "y": {
                    "type": "number",
                    "isOptional": false
                },
                "w": {
                    "type": "number",
                    "isOptional": false
                },
                "h": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.LandmarkOption": {
            "fields": {
                "icon": {
                    "type": "unknown",
                    "isOptional": false
                },
                "bounds": {
                    "type": "LandmarkOption.Bounds",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.LANDMARK_OPTIONS": {
            "fields": {
                "DEFAULT": {
                    "type": "LandmarkOption",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc": {
            "fields": {
                "LANDMARK_OPTIONS": {
                    "type": "LANDMARK_OPTIONS"
                },
                "AREA_ITEM_TYPE": {
                    "type": "{\n      DUNGEON_KEY: { areaField: 'keyItem' };\n      DUNGEON_MASTER_KEY: { areaField: 'masterKeyItem' };\n      BOOSTER: { areaField: 'boosterItem' };\n    }"
                },
                "DUNGEON_KEY": {
                    "type": "{ areaField: 'keyItem' }",
                    "isOptional": false
                },
                "DUNGEON_MASTER_KEY": {
                    "type": "{ areaField: 'masterKeyItem' }",
                    "isOptional": false
                },
                "BOOSTER": {
                    "type": "{ areaField: 'boosterItem' }",
                    "isOptional": false
                },
                "MapModel": {
                    "type": "MapModelConstructor"
                },
                "map": {
                    "type": "sc.MapModel"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.DUNGEON_KEY": {
            "fields": {
                "areaField": {
                    "type": "'keyItem'",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.DUNGEON_MASTER_KEY": {
            "fields": {
                "areaField": {
                    "type": "'masterKeyItem'",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.BOOSTER": {
            "fields": {
                "areaField": {
                    "type": "'boosterItem'",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.MapModel.Area.Landmark": {
            "fields": {
                "name": {
                    "type": "ig.LangLabel.Data",
                    "isOptional": false
                },
                "description": {
                    "type": "ig.LangLabel.Data",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.MapModel.Area": {
            "fields": {
                "name": {
                    "type": "ig.LangLabel.Data",
                    "isOptional": false
                },
                "description": {
                    "type": "ig.LangLabel.Data",
                    "isOptional": false
                },
                "areaType": {
                    "type": "keyof typeof sc.AREA_TYPE",
                    "isOptional": false
                },
                "order": {
                    "type": "number",
                    "isOptional": false
                },
                "track": {
                    "type": "boolean",
                    "isOptional": false
                },
                "chests": {
                    "type": "number",
                    "isOptional": false
                },
                "boosterItem": {
                    "type": "string",
                    "isOptional": true
                },
                "keyItem": {
                    "type": "string",
                    "isOptional": true
                },
                "masterKeyItem": {
                    "type": "string",
                    "isOptional": true
                },
                "condition": {
                    "type": "string",
                    "isOptional": true
                },
                "position": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "landmarks": {
                    "type": "{ [name: string]: Area.Landmark }",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.MapModel.Map": {
            "fields": {
                "name": {
                    "type": "string",
                    "isOptional": false
                },
                "levels": {
                    "type": "{ height: number }[]",
                    "isOptional": false
                },
                "height": {
                    "type": "number",
                    "isOptional": false
                },
                "mapHeight": {
                    "type": "number",
                    "isOptional": false
                },
                "mapWidth": {
                    "type": "number",
                    "isOptional": false
                },
                "masterLevel": {
                    "type": "number",
                    "isOptional": false
                },
                "attributes": {
                    "type": "MapModel.MapAttributes",
                    "isOptional": false
                },
                "screen": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "entities": {
                    "type": "MapModel.MapEntity[]",
                    "isOptional": false
                },
                "layer": {
                    "type": "MapModel.MapLayer[]",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.MapModel": {
            "fields": {
                "type": {
                    "type": "T",
                    "isOptional": false
                },
                "settings": {
                    "type": "ConstructorParameters<(typeof ig.ENTITY)[T]>[3]",
                    "isOptional": false
                },
                "x": {
                    "type": "number",
                    "isOptional": false
                },
                "y": {
                    "type": "number",
                    "isOptional": false
                },
                "level": {
                    "type": "number",
                    "isOptional": false
                },
                "offset": {
                    "type": "number",
                    "isOptional": true
                },
                "activeLandmarks": {
                    "type": "Record<string, Record<string, { active: boolean }>>",
                    "isOptional": false
                },
                "active": {
                    "type": "boolean",
                    "isOptional": false
                },
                "areas": {
                    "type": "{ [name: string]: sc.MapModel.Area }",
                    "isOptional": false
                },
                "areasVisited": {
                    "type": "Record<string, {}>",
                    "isOptional": false
                },
                "currentPlayerArea": {
                    "type": "sc.AreaLoadable",
                    "isOptional": false
                },
                "currentArea": {
                    "type": "sc.AreaLoadable",
                    "isOptional": false
                },
                "currentPlayerFloor": {
                    "type": "number",
                    "isOptional": false
                },
                "currentFloor": {
                    "type": "number",
                    "isOptional": false
                },
                "currentMap": {
                    "type": "string",
                    "isOptional": false
                },
                "unknownArea": {
                    "type": "null",
                    "isOptional": false
                },
                "teleportEvent": {
                    "type": "Nullable<ig.Event>",
                    "isOptional": false
                },
                "_usedNames": {
                    "type": "boolean[]",
                    "isOptional": false
                },
                "_oobSoundTerrain": {
                    "type": "keyof typeof ig.TERRAIN",
                    "isOptional": false
                }
            },
            "functions": {
                "isValidArea": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "getTotalAreasFound": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "asPercent",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "getTotalLandmarksFound": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "asPercent",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "getTotalChestsFound": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "asPercent",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "getTotalChests": {
                    "returnType": "number",
                    "args": []
                },
                "hasAllAreasFound": {
                    "returnType": "boolean",
                    "args": []
                },
                "getTotalLandmarksFoundInArea": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "areaName",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "onLevelLoadStart": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "data",
                            "type": "sc.MapModel.Map",
                            "isOptional": false
                        }
                    ]
                },
                "onLevelLoaded": {
                    "returnType": "void",
                    "args": []
                },
                "canUseGenderName": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "gender",
                            "type": "sc.NPC_GENDER",
                            "isOptional": false
                        },
                        {
                            "name": "doesMatch",
                            "type": "sc.NPC_GENDER",
                            "isOptional": false
                        }
                    ]
                },
                "onReset": {
                    "returnType": "void",
                    "args": []
                },
                "initAreas": {
                    "returnType": "void",
                    "args": []
                },
                "loadArea": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "areaName",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "loadListener",
                            "type": "{ onLoadableComplete(loaded: boolean, area: sc.MapModel.Area): void }",
                            "isOptional": false
                        }
                    ]
                },
                "onLoadableComplete": {
                    "returnType": "void",
                    "args": []
                },
                "unloadCurrentArea": {
                    "returnType": "void",
                    "args": []
                },
                "updateVisitedArea": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "areaName",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "undoVisitedArea": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "areaName",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "clearVisitedFromgIgVars",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "validateCurrentPlayerFloor": {
                    "returnType": "void",
                    "args": []
                },
                "validateCurrentFloor": {
                    "returnType": "void",
                    "args": []
                },
                "restore": {
                    "returnType": "void",
                    "args": []
                },
                "addLandmark": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "areaName",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "landmarkIndex",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "entityToCallEventOn",
                            "type": "ig.Entity",
                            "isOptional": true
                        }
                    ]
                },
                "startTeleport": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "mapName",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "getAreaType": {
                    "returnType": "sc.AREA_TYPE",
                    "args": [
                        {
                            "name": "areaName",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "isLandmarkValid": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "areaName",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "landmarkIndex",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "getAreaItemId": {
                    "returnType": "sc.ItemID",
                    "args": [
                        {
                            "name": "areaItemType",
                            "type": "sc.AREA_ITEM_TYPE",
                            "isOptional": false
                        },
                        {
                            "name": "areaName",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "getAreaItemType": {
                    "returnType": "keyof typeof sc.AREA_ITEM_TYPE | void",
                    "args": [
                        {
                            "name": "areaItemTypeString",
                            "type": "sc.AREA_ITEM_TYPE['areaField']",
                            "isOptional": false
                        },
                        {
                            "name": "areaName",
                            "type": "string",
                            "isOptional": true
                        }
                    ]
                },
                "getAreaItemAmount": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "areaItemType",
                            "type": "sc.AREA_ITEM_TYPE",
                            "isOptional": false
                        },
                        {
                            "name": "areaName",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "getAreaItemToggleState": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "areaItemType",
                            "type": "sc.AREA_ITEM_TYPE",
                            "isOptional": false
                        },
                        {
                            "name": "areaName",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "isLandmarkActive": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "landmarkIndex",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "areaName",
                            "type": "string",
                            "isOptional": true
                        },
                        {
                            "name": "isActiveOrJustExists",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "setLandmarkActiveState": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "landmarkIndex",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "active",
                            "type": "boolean",
                            "isOptional": false
                        },
                        {
                            "name": "areaName",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "setAreaLandmarksActiveState": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "areaName",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "state",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "isDungeon": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "ignoreMap",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "hasAnyAreaUnlocked": {
                    "returnType": "boolean",
                    "args": []
                },
                "getUnlockedAreas": {
                    "returnType": "string[]",
                    "args": []
                },
                "sortAreaList": {
                    "returnType": "string[]",
                    "args": [
                        {
                            "name": "areaNameList",
                            "type": "string[]",
                            "isOptional": false
                        }
                    ]
                },
                "getLandmarkName": {
                    "returnType": "ig.LangLabel | string",
                    "args": [
                        {
                            "name": "landmarkIndex",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "areaName",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "getLandmark": {
                    "returnType": "sc.MapModel.Area.Landmark",
                    "args": [
                        {
                            "name": "landmark",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "area",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "getCurrentAreaLandmark": {
                    "returnType": "sc.MapModel.Area.Landmark",
                    "args": [
                        {
                            "name": "landmark",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "getCurrentPlayerAreaName": {
                    "returnType": "ig.LangLabel",
                    "args": []
                },
                "getCurrentAreaName": {
                    "returnType": "ig.LangLabel",
                    "args": []
                },
                "getAreaOrder": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "areaName",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "getAreaName": {
                    "returnType": "string",
                    "args": [
                        {
                            "name": "areaName",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "prefferShortName",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "checkIsDlc",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "getCurrentMapName": {
                    "returnType": "ig.LangLabel",
                    "args": [
                        {
                            "name": "returnQuestionMarkIfItsCurrentMap",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "getMapName": {
                    "returnType": "ig.LangLabel",
                    "args": [
                        {
                            "name": "map",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "getMapDungeon": {
                    "returnType": "Nullable<sc.MAP_DUNGEON_OVERRIDE>",
                    "args": [
                        {
                            "name": "mapPath",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "getCurrentFloorIndex": {
                    "returnType": "number",
                    "args": []
                },
                "getCurrentArea": {
                    "returnType": "sc.AreaLoadable.Data",
                    "args": []
                },
                "getLandmarkEvent": {
                    "returnType": "ig.Event",
                    "args": [
                        {
                            "name": "entity",
                            "type": "ig.Entity",
                            "isOptional": false
                        }
                    ]
                },
                "getTeleportEvent": {
                    "returnType": "ig.Event",
                    "args": [
                        {
                            "name": "map",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "getVisitedArea": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "area",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "getTeleport": {
                    "returnType": "Nullable<ig.Event>",
                    "args": []
                },
                "getCurrentChestCount": {
                    "returnType": "number",
                    "args": []
                },
                "getChestCount": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "onStorageSave": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "savefile",
                            "type": "ig.SaveSlot.Data",
                            "isOptional": false
                        }
                    ]
                },
                "onStoragePreLoad": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "savefile",
                            "type": "ig.SaveSlot.Data",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "MapModel",
                    "args": []
                }
            },
            "parents": [
                "ig.GameAddon",
                "sc.Model",
                "ig.Vars.Accessor"
            ]
        },
        "sc.MapModel.MapAttributes": {
            "fields": {
                "saveMode": {
                    "type": "'ENABLED' | 'DISABLED' | ''",
                    "isOptional": false
                },
                "bgm": {
                    "type": "string",
                    "isOptional": false
                },
                "cameraInBounds": {
                    "type": "boolean",
                    "isOptional": false
                },
                "'map-sounds'": {
                    "type": "string",
                    "isOptional": false
                },
                "mapStyle": {
                    "type": "string",
                    "isOptional": false
                },
                "weather": {
                    "type": "string",
                    "isOptional": false
                },
                "area": {
                    "type": "string",
                    "isOptional": false
                },
                "npcRunners": {
                    "type": "string",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.MapModel.MapLayer": {
            "fields": {
                "id": {
                    "type": "number",
                    "isOptional": false
                },
                "type": {
                    "type": "MapModel.MapLayerType",
                    "isOptional": false
                },
                "name": {
                    "type": "string",
                    "isOptional": false
                },
                "level": {
                    "type": "MapModel.MapLayerLevelType",
                    "isOptional": false
                },
                "width": {
                    "type": "number",
                    "isOptional": false
                },
                "height": {
                    "type": "number",
                    "isOptional": false
                },
                "visible": {
                    "type": "number",
                    "isOptional": false
                },
                "tilesetName": {
                    "type": "string",
                    "isOptional": false
                },
                "repeat": {
                    "type": "boolean",
                    "isOptional": false
                },
                "distance": {
                    "type": "number",
                    "isOptional": false
                },
                "yDistance": {
                    "type": "number",
                    "isOptional": false
                },
                "tilesize": {
                    "type": "number",
                    "isOptional": false
                },
                "moveSpeed": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "data": {
                    "type": "number[][]",
                    "isOptional": false
                },
                "lighter": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.menu.menu-model": {
        "sc.SubMenuInfo": {
            "fields": {
                "Clazz": {
                    "type": "new () => sc.BaseMenu",
                    "isOptional": false
                },
                "name": {
                    "type": "string",
                    "isOptional": false
                },
                "alt": {
                    "type": "string",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "sc": {
            "fields": {
                "SUB_MENU_INFO": {
                    "type": "Record<sc.MENU_SUBMENU, sc.SubMenuInfo>"
                },
                "MENU_STATUS_PAGES_LENGTH": {
                    "type": "number"
                },
                "SELL_PAGES": {
                    "type": "Array<{\n      lang: string;\n      type: sc.ITEMS_TYPES;\n      equipType: sc.ITEMS_EQUIP_TYPES;\n    }>"
                },
                "lang": {
                    "type": "string",
                    "isOptional": false
                },
                "type": {
                    "type": "sc.ITEMS_TYPES",
                    "isOptional": false
                },
                "equipType": {
                    "type": "sc.ITEMS_EQUIP_TYPES",
                    "isOptional": false
                },
                "MAX_STAMPS_MAX": {
                    "type": "number"
                },
                "MAX_MOD_VAL": {
                    "type": "number"
                },
                "MenuModel": {
                    "type": "MenuModelConstructor"
                },
                "menu": {
                    "type": "sc.MenuModel"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.MenuModel.ShopCartEntry": {
            "fields": {
                "id": {
                    "type": "sc.ItemID",
                    "isOptional": false
                },
                "amount": {
                    "type": "number",
                    "isOptional": false
                },
                "price": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.MenuModel.LogEntry": {
            "fields": {
                "type": {
                    "type": "keyof typeof sc.LOG_TYPES",
                    "isOptional": false
                },
                "task": {
                    "type": "number",
                    "isOptional": true
                },
                "accept": {
                    "type": "boolean",
                    "isOptional": true
                },
                "quest": {
                    "type": "string",
                    "isOptional": true
                },
                "finish": {
                    "type": "boolean",
                    "isOptional": true
                },
                "trader": {
                    "type": "string",
                    "isOptional": true
                },
                "lore": {
                    "type": "string",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.MenuModel.Stamp": {
            "fields": {
                "key": {
                    "type": "StampTypes",
                    "isOptional": false
                },
                "x": {
                    "type": "number",
                    "isOptional": false
                },
                "y": {
                    "type": "number",
                    "isOptional": false
                },
                "level": {
                    "type": "number",
                    "isOptional": false
                },
                "index": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.MenuModel": {
            "fields": {
                "guiReference": {
                    "type": "sc.MainMenu",
                    "isOptional": false
                },
                "infoText": {
                    "type": "Nullable<sc.TextLike>",
                    "isOptional": false
                },
                "buffText": {
                    "type": "Nullable<sc.TextLike>",
                    "isOptional": false
                },
                "buffID": {
                    "type": "sc.ItemID",
                    "isOptional": false
                },
                "currentMenu": {
                    "type": "sc.MENU_SUBMENU",
                    "isOptional": false
                },
                "previousMenu": {
                    "type": "sc.MENU_SUBMENU",
                    "isOptional": false
                },
                "menuStack": {
                    "type": "sc.MENU_SUBMENU[]",
                    "isOptional": false
                },
                "buttonInteract": {
                    "type": "ig.ButtonInteractEntry",
                    "isOptional": false
                },
                "backCallbackStack": {
                    "type": "sc.MenuModel.BackCallback[]",
                    "isOptional": false
                },
                "hotkeysCallbacks": {
                    "type": "sc.MenuModel.HotkeyCallback[]",
                    "isOptional": false
                },
                "currentBackCallback": {
                    "type": "sc.MenuModel.BackCallback",
                    "isOptional": false
                },
                "leaState": {
                    "type": "sc.MENU_LEA_STATE",
                    "isOptional": false
                },
                "menuEntered": {
                    "type": "boolean",
                    "isOptional": false
                },
                "currentBodyPart": {
                    "type": "sc.MENU_EQUIP_BODYPART",
                    "isOptional": false
                },
                "previousBodyPart": {
                    "type": "Nullable<sc.MENU_EQUIP_BODYPART>",
                    "isOptional": false
                },
                "exitCallback": {
                    "type": "() => void",
                    "isOptional": true
                },
                "currentSkillTree": {
                    "type": "sc.ELEMENT",
                    "isOptional": false
                },
                "previousSkillTree": {
                    "type": "sc.ELEMENT",
                    "isOptional": false
                },
                "skillCursor": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "lastSkillCursor": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "skillRecoverPos": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "skillCamera": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "skillDrag": {
                    "type": "boolean",
                    "isOptional": false
                },
                "skillWasDragged": {
                    "type": "boolean",
                    "isOptional": false
                },
                "skillState": {
                    "type": "sc.MENU_SKILL_STATE",
                    "isOptional": false
                },
                "skillStateOrigin": {
                    "type": "sc.MENU_SKILL_STATE",
                    "isOptional": false
                },
                "skillCursorMoved": {
                    "type": "boolean",
                    "isOptional": false
                },
                "currentSkillFocus": {
                    "type": "Nullable<sc.CircuitTreeDetail.Node>",
                    "isOptional": false
                },
                "skillSwapCursor": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "skillSwapMoved": {
                    "type": "boolean",
                    "isOptional": false
                },
                "skillSwapFocus": {
                    "type": "Nullable<sc.CircuitTreeDetail.Node>",
                    "isOptional": false
                },
                "mapDrag": {
                    "type": "boolean",
                    "isOptional": false
                },
                "mapWasDragged": {
                    "type": "boolean",
                    "isOptional": false
                },
                "mapCamera": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "mapFirstVisit": {
                    "type": "boolean",
                    "isOptional": false
                },
                "mapUnknownArea": {
                    "type": "boolean",
                    "isOptional": false
                },
                "mapMouseOverFloorButtons": {
                    "type": "boolean",
                    "isOptional": false
                },
                "mapCursor": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "mapLastCursor": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "mapCursorMoved": {
                    "type": "boolean",
                    "isOptional": false
                },
                "mapWorldmapActive": {
                    "type": "boolean",
                    "isOptional": false
                },
                "mapWorldCursor": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "mapWorldLastCursor": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "mapWmCursorMoved": {
                    "type": "boolean",
                    "isOptional": false
                },
                "mapAreaFocus": {
                    "type": "sc.AreaButton",
                    "isOptional": false
                },
                "mapMapFocus": {
                    "type": "sc.AreaButton",
                    "isOptional": false
                },
                "mapWorldFirstVisit": {
                    "type": "boolean",
                    "isOptional": false
                },
                "mapLoading": {
                    "type": "boolean",
                    "isOptional": false
                },
                "mapAreaOffset": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "mapStampMenu": {
                    "type": "boolean",
                    "isOptional": false
                },
                "mapStamps": {
                    "type": "Record<string, Nullable<sc.MenuModel.Stamp>[]>",
                    "isOptional": false
                },
                "shopID": {
                    "type": "Nullable<string>",
                    "isOptional": false
                },
                "shopState": {
                    "type": "sc.MENU_SHOP_STATE",
                    "isOptional": false
                },
                "shopCoinMode": {
                    "type": "boolean",
                    "isOptional": false
                },
                "shopPage": {
                    "type": "number",
                    "isOptional": false
                },
                "shopCart": {
                    "type": "sc.MenuModel.ShopCartEntry[]",
                    "isOptional": false
                },
                "shopSellMode": {
                    "type": "boolean",
                    "isOptional": false
                },
                "itemCurrentTab": {
                    "type": "number",
                    "isOptional": false
                },
                "itemLastButtonData": {
                    "type": "unknown",
                    "isOptional": false
                },
                "optionCurrentTab": {
                    "type": "number",
                    "isOptional": false
                },
                "optionLastButtonData": {
                    "type": "sc.OptionsTabBox.ButtonData",
                    "isOptional": false
                },
                "optionsLocalMode": {
                    "type": "boolean",
                    "isOptional": false
                },
                "questCurrentTab": {
                    "type": "number",
                    "isOptional": false
                },
                "questLastButtonData": {
                    "type": "Nullable<sc.QuestData>",
                    "isOptional": false
                },
                "questInfo": {
                    "type": "Nullable<sc.QuestData>",
                    "isOptional": false
                },
                "questDetailMode": {
                    "type": "boolean",
                    "isOptional": false
                },
                "questsSeen": {
                    "type": "Record<string, boolean>",
                    "isOptional": false
                },
                "newGameViewMode": {
                    "type": "boolean",
                    "isOptional": false
                },
                "tradeToggle": {
                    "type": "boolean",
                    "isOptional": false
                },
                "directMode": {
                    "type": "boolean",
                    "isOptional": false
                },
                "directMenu": {
                    "type": "number",
                    "isOptional": false
                },
                "loadMode": {
                    "type": "boolean",
                    "isOptional": false
                },
                "loadSlotID": {
                    "type": "number",
                    "isOptional": false
                },
                "loadClearFilesOnly": {
                    "type": "boolean",
                    "isOptional": false
                },
                "loreCurrentTab": {
                    "type": "number",
                    "isOptional": false
                },
                "synopInfo": {
                    "type": "Nullable<unknown>",
                    "isOptional": true
                },
                "newUnlocks": {
                    "type": "{ [key in sc.MENU_SUBMENU]?: string[] }",
                    "isOptional": false
                },
                "logEntries": {
                    "type": "sc.MenuModel.LogEntry[]",
                    "isOptional": false
                },
                "gamepadIcons": {
                    "type": "boolean",
                    "isOptional": false
                },
                "menuHost": {
                    "type": "sc.MENU_SUBMENU",
                    "isOptional": false
                },
                "statusPage": {
                    "type": "sc.MENU_STATUS_PAGES",
                    "isOptional": false
                },
                "statusElement": {
                    "type": "sc.ELEMENT",
                    "isOptional": false
                },
                "statusDiff": {
                    "type": "boolean",
                    "isOptional": false
                },
                "drops": {
                    "type": "ig.Database.Data['drops']",
                    "isOptional": false
                },
                "dropCounts": {
                    "type": "Record<\n        ig.Database.DropKey,\n        { anim: string; count: number; time: number; completed: boolean }\n      >",
                    "isOptional": false
                },
                "anim": {
                    "type": "string",
                    "isOptional": false
                },
                "count": {
                    "type": "number",
                    "isOptional": false
                },
                "time": {
                    "type": "number",
                    "isOptional": false
                },
                "completed": {
                    "type": "boolean",
                    "isOptional": false
                },
                "questHubID": {
                    "type": "string",
                    "isOptional": false
                },
                "words": {
                    "type": "ig.Database.Data['leawords']",
                    "isOptional": false
                },
                "helpMenuOpen": {
                    "type": "boolean",
                    "isOptional": false
                },
                "varsChangedOrder": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "dev_UnlockDrop": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "upToIndex",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "incrementDropCount": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "drop",
                            "type": "ig.Database.DropKey",
                            "isOptional": false
                        },
                        {
                            "name": "anim",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "getFoundDrops": {
                    "returnType": "string[]",
                    "args": [
                        {
                            "name": "area",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "sortType",
                            "type": "sc.BOTANICS_SORT_TYPE",
                            "isOptional": false
                        }
                    ]
                },
                "sortDropList": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "drops",
                            "type": "ig.Database.DropKey[]",
                            "isOptional": false
                        },
                        {
                            "name": "sortType",
                            "type": "sc.BOTANICS_SORT_TYPE",
                            "isOptional": false
                        }
                    ]
                },
                "getDropCount": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "drop",
                            "type": "ig.Database.DropKey",
                            "isOptional": false
                        }
                    ]
                },
                "hasAnyDropFound": {
                    "returnType": "boolean",
                    "args": []
                },
                "hasAnyDropInArea": {
                    "returnType": "boolean | void",
                    "args": [
                        {
                            "name": "area",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "hasDropInArea": {
                    "returnType": "boolean | void",
                    "args": [
                        {
                            "name": "area",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "hasAnyOtherDropFound": {
                    "returnType": "boolean | void",
                    "args": []
                },
                "getTotalDropsFoundAndCompleted": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "percentage",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "getFoundDrop": {
                    "returnType": "sc.MenuModel['dropCounts'][any]",
                    "args": [
                        {
                            "name": "drop",
                            "type": "ig.Database.DropKey",
                            "isOptional": false
                        }
                    ]
                },
                "getDropName": {
                    "returnType": "string",
                    "args": [
                        {
                            "name": "drop",
                            "type": "ig.Database.DropKey",
                            "isOptional": false
                        }
                    ]
                },
                "getDropArea": {
                    "returnType": "string",
                    "args": [
                        {
                            "name": "drop",
                            "type": "ig.Database.DropKey",
                            "isOptional": false
                        }
                    ]
                },
                "setStatusPage": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "status",
                            "type": "sc.MENU_STATUS_PAGES",
                            "isOptional": false
                        }
                    ]
                },
                "setStatusElement": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "element",
                            "type": "sc.ELEMENT",
                            "isOptional": false
                        }
                    ]
                },
                "fireStatusPageEvent": {
                    "returnType": "void",
                    "args": []
                },
                "addLog": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "entry",
                            "type": "sc.MenuModel.LogEntry",
                            "isOptional": false
                        }
                    ]
                },
                "onReset": {
                    "returnType": "void",
                    "args": []
                },
                "onVarsChanged": {
                    "returnType": "void",
                    "args": []
                },
                "onPostUpdate": {
                    "returnType": "void",
                    "args": []
                },
                "onLevelLoadStart": {
                    "returnType": "void",
                    "args": []
                },
                "onLevelLoaded": {
                    "returnType": "void",
                    "args": []
                },
                "enterStartUpMenu": {
                    "returnType": "void",
                    "args": []
                },
                "addNewUnlock": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "type",
                            "type": "sc.MENU_SUBMENU",
                            "isOptional": false
                        },
                        {
                            "name": "entry",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "hasNewUnlock": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "type",
                            "type": "sc.MENU_SUBMENU",
                            "isOptional": false
                        }
                    ]
                },
                "hasNewUnlockKey": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "type",
                            "type": "sc.MENU_SUBMENU",
                            "isOptional": false
                        },
                        {
                            "name": "newUnlock",
                            "type": "string[]",
                            "isOptional": false
                        }
                    ]
                },
                "clearNewUnlock": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "type",
                            "type": "sc.MENU_SUBMENU",
                            "isOptional": false
                        },
                        {
                            "name": "eraseInsteadOfDelete",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "onStorageSave": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "savefile",
                            "type": "ig.SaveSlot.Data",
                            "isOptional": false
                        }
                    ]
                },
                "onStoragePreLoad": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "savefile",
                            "type": "ig.SaveSlot.Data",
                            "isOptional": false
                        }
                    ]
                },
                "onPreLoadDrops": {
                    "returnType": "void",
                    "args": []
                },
                "addMapStamp": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "area",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "type",
                            "type": "sc.MenuModel.StampTypes",
                            "isOptional": false
                        },
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "level",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "editStamp": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "stampIndex",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "map",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "stampType",
                            "type": "sc.MenuModel.StampTypes",
                            "isOptional": false
                        }
                    ]
                },
                "removeStamp": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "map",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "stampIndex",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "getStamps": {
                    "returnType": "sc.MenuModel['mapStamps'][any]",
                    "args": [
                        {
                            "name": "map",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "getStampCount": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "map",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "fullyEntered": {
                    "returnType": "void",
                    "args": []
                },
                "addHotkey": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "callback",
                            "type": "sc.MenuModel.HotkeyCallback",
                            "isOptional": false
                        },
                        {
                            "name": "commit",
                            "type": "Nullable<boolean>",
                            "isOptional": true
                        }
                    ]
                },
                "commitHotkeys": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "longTransition",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "updateHotkeys": {
                    "returnType": "void",
                    "args": []
                },
                "removeHotkeys": {
                    "returnType": "void",
                    "args": []
                },
                "pushBackCallback": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "callback",
                            "type": "sc.MenuModel.BackCallback",
                            "isOptional": false
                        }
                    ]
                },
                "popBackCallback": {
                    "returnType": "void",
                    "args": []
                },
                "invokeTopBackButton": {
                    "returnType": "void",
                    "args": []
                },
                "pushMenu": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "menu",
                            "type": "sc.MENU_SUBMENU",
                            "isOptional": false
                        }
                    ]
                },
                "popMenu": {
                    "returnType": "void",
                    "args": []
                },
                "enterMenu": {
                    "returnType": "void",
                    "args": []
                },
                "setDirectMode": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "direct",
                            "type": "Nullable<boolean>",
                            "isOptional": true
                        },
                        {
                            "name": "menu",
                            "type": "Nullable<sc.MENU_SUBMENU>",
                            "isOptional": true
                        }
                    ]
                },
                "setHost": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "menuHost",
                            "type": "sc.MENU_SUBMENU",
                            "isOptional": false
                        }
                    ]
                },
                "exitMenu": {
                    "returnType": "void",
                    "args": []
                },
                "invokePostExit": {
                    "returnType": "void",
                    "args": []
                },
                "setInfoText": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "text",
                            "type": "sc.TextLike",
                            "isOptional": false
                        },
                        {
                            "name": "fade",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "setBuffText": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "text",
                            "type": "sc.TextLike",
                            "isOptional": false
                        },
                        {
                            "name": "fade",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "id",
                            "type": "sc.ItemID",
                            "isOptional": true
                        }
                    ]
                },
                "moveLeaSprite": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "state",
                            "type": "sc.MENU_LEA_STATE",
                            "isOptional": false
                        },
                        {
                            "name": "skip",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "enterTradeDetails": {
                    "returnType": "void",
                    "args": []
                },
                "exitTradeDetails": {
                    "returnType": "void",
                    "args": []
                },
                "setShopState": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "state",
                            "type": "sc.MENU_SHOP_STATE",
                            "isOptional": false
                        }
                    ]
                },
                "setShopPage": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "page",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "updateCart": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "itemID",
                            "type": "sc.ItemID",
                            "isOptional": false
                        },
                        {
                            "name": "amount",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "price",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "getTotalCost": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "excludeItemID",
                            "type": "sc.ItemID",
                            "isOptional": true
                        },
                        {
                            "name": "excludePrice",
                            "type": "number",
                            "isOptional": true
                        }
                    ]
                },
                "getItemQuantity": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "itemID",
                            "type": "sc.ItemID",
                            "isOptional": false
                        },
                        {
                            "name": "price",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "openShopQuantitySelect": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "button",
                            "type": "sc.ShopItemButton",
                            "isOptional": false
                        }
                    ]
                },
                "openCheckout": {
                    "returnType": "void",
                    "args": []
                },
                "updateTotalCost": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "excludeItemID",
                            "type": "sc.ItemID",
                            "isOptional": true
                        },
                        {
                            "name": "amount",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "excludePrice",
                            "type": "number",
                            "isOptional": true
                        }
                    ]
                },
                "newSlot": {
                    "returnType": "void",
                    "args": []
                },
                "saveSlot": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "deleteSlot": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "loadSlot": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "setItemInfo": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "itemId",
                            "type": "sc.ItemID",
                            "isOptional": false
                        }
                    ]
                },
                "resetItemInfo": {
                    "returnType": "void",
                    "args": []
                },
                "setItemTab": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "itemCurrentTab",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "getCurrentTabType": {
                    "returnType": "Nullable<sc.ITEMS_TYPES | 'NEW'>",
                    "args": []
                },
                "getCurrentTabSubType": {
                    "returnType": "Nullable<sc.ITEMS_EQUIP_TYPES>",
                    "args": []
                },
                "isItemEquipTab": {
                    "returnType": "boolean",
                    "args": []
                },
                "sortList": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "button",
                            "type": "ig.FocusGui",
                            "isOptional": false
                        }
                    ]
                },
                "setOptionTab": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "tabIndex",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "getCurrentOptionCategory": {
                    "returnType": "Nullable<number>",
                    "args": []
                },
                "openLanguagePopUp": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "option",
                            "type": "sc.OPTION_GUIS_DEFS.LANGUAGE",
                            "isOptional": false
                        }
                    ]
                },
                "setSynoTab": {
                    "returnType": "void",
                    "args": []
                },
                "setSynopInfo": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "info",
                            "type": "Nullable<unknown> | undefined",
                            "isOptional": false
                        },
                        {
                            "name": "eventData",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "setSynopFocus": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "button",
                            "type": "sc.LoreEntryButton",
                            "isOptional": false
                        }
                    ]
                },
                "switchSynopsisPage": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "direction",
                            "type": "-1 | 1",
                            "isOptional": false
                        }
                    ]
                },
                "setSynopPressed": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "button",
                            "type": "sc.ListBoxButton",
                            "isOptional": true
                        }
                    ]
                },
                "setQuestTab": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "tab",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "setQuestInfo": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "questInfo",
                            "type": "Nullable<sc.QuestData>",
                            "isOptional": false
                        },
                        {
                            "name": "eventData",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "enterQuestDetails": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "quest",
                            "type": "sc.Quest",
                            "isOptional": false
                        }
                    ]
                },
                "leaveQuestDetails": {
                    "returnType": "void",
                    "args": []
                },
                "selectBodyPart": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "bodyPart",
                            "type": "sc.MENU_EQUIP_BODYPART",
                            "isOptional": false
                        }
                    ]
                },
                "cycleBodyPartRight": {
                    "returnType": "void",
                    "args": []
                },
                "cycleBodyPartLeft": {
                    "returnType": "void",
                    "args": []
                },
                "changeEquipOnCurrentBodypart": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "itemId",
                            "type": "sc.ItemID",
                            "isOptional": false
                        }
                    ]
                },
                "ensureCurrentValues": {
                    "returnType": "void",
                    "args": []
                },
                "exitEquipMenu": {
                    "returnType": "void",
                    "args": []
                },
                "showSkillEffect": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "gui",
                            "type": "sc.CircuitTreeDetail.Node",
                            "isOptional": false
                        },
                        {
                            "name": "isSwitch",
                            "type": "boolean",
                            "isOptional": false
                        },
                        {
                            "name": "delay",
                            "type": "number",
                            "isOptional": true
                        }
                    ]
                },
                "showSwapSkillEffect": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "button",
                            "type": "sc.CircuitSwapBranches.Button",
                            "isOptional": false
                        }
                    ]
                },
                "selectSkillTree": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "element",
                            "type": "sc.ELEMENT",
                            "isOptional": false
                        }
                    ]
                },
                "focusCursorOnNode": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "skillFocus",
                            "type": "Nullable<sc.CircuitTreeDetail.Node>",
                            "isOptional": true
                        }
                    ]
                },
                "unfocusCursor": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "skillFocus",
                            "type": "Nullable<sc.CircuitTreeDetail.Node>",
                            "isOptional": false
                        }
                    ]
                },
                "unfocusSwapCursor": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "skillFocus",
                            "type": "Nullable<sc.CircuitTreeDetail.Node>",
                            "isOptional": false
                        }
                    ]
                },
                "focusSwapCursor": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "skillFocus",
                            "type": "Nullable<sc.CircuitTreeDetail.Node>",
                            "isOptional": true
                        }
                    ]
                },
                "resetSwapCursor": {
                    "returnType": "void",
                    "args": []
                },
                "centerOnNode": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "node",
                            "type": "Nullable<sc.CircuitTreeDetail.Node>",
                            "isOptional": false
                        },
                        {
                            "name": "hasParent",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "centerOnNodeCam": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "node",
                            "type": "sc.CircuitTreeDetail.Node",
                            "isOptional": false
                        },
                        {
                            "name": "nodeFocus",
                            "type": "Vec2",
                            "isOptional": false
                        },
                        {
                            "name": "time",
                            "type": "number",
                            "isOptional": true
                        },
                        {
                            "name": "callback",
                            "type": "() => void",
                            "isOptional": true
                        }
                    ]
                },
                "exitNodeMenu": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "skillState",
                            "type": "sc.MENU_SKILL_STATE",
                            "isOptional": true
                        }
                    ]
                },
                "enterSwapBranches": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "skillStateOrigin",
                            "type": "sc.MENU_SKILL_STATE",
                            "isOptional": false
                        }
                    ]
                },
                "leaveSwapBranches": {
                    "returnType": "void",
                    "args": []
                },
                "toggledInputMode": {
                    "returnType": "void",
                    "args": []
                },
                "selectFloor": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "floor",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "enterWorldMap": {
                    "returnType": "void",
                    "args": []
                },
                "exitWorldMap": {
                    "returnType": "void",
                    "args": []
                },
                "focusArea": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "button",
                            "type": "sc.AreaButton",
                            "isOptional": false
                        },
                        {
                            "name": "gamepad",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "focusMap": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "button",
                            "type": "sc.AreaButton",
                            "isOptional": false
                        },
                        {
                            "name": "gamepad",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "unfocusArea": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "button",
                            "type": "sc.AreaButton",
                            "isOptional": false
                        }
                    ]
                },
                "unfocusMap": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "button",
                            "type": "sc.AreaButton",
                            "isOptional": false
                        }
                    ]
                },
                "resetWorldmapCursor": {
                    "returnType": "void",
                    "args": []
                },
                "loadArea": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "areaPath",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "setAreaLoadDone": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "areaPath",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "openStampMenu": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "stampGui",
                            "type": "sc.StampGui",
                            "isOptional": false
                        }
                    ]
                },
                "getCurrentMenuAsName": {
                    "returnType": "string",
                    "args": []
                },
                "getMenuAsName": {
                    "returnType": "string",
                    "args": [
                        {
                            "name": "menu",
                            "type": "sc.MENU_SUBMENU",
                            "isOptional": false
                        }
                    ]
                },
                "isStart": {
                    "returnType": "boolean",
                    "args": []
                },
                "isSkills": {
                    "returnType": "boolean",
                    "args": []
                },
                "isEquipment": {
                    "returnType": "boolean",
                    "args": []
                },
                "isStatus": {
                    "returnType": "boolean",
                    "args": []
                },
                "isSynopsis": {
                    "returnType": "boolean",
                    "args": []
                },
                "isMap": {
                    "returnType": "boolean",
                    "args": []
                },
                "isSave": {
                    "returnType": "boolean",
                    "args": []
                },
                "isOptions": {
                    "returnType": "boolean",
                    "args": []
                },
                "isShop": {
                    "returnType": "boolean",
                    "args": []
                },
                "isButtonInteractActive": {
                    "returnType": "boolean",
                    "args": []
                },
                "init": {
                    "returnType": "MenuModel",
                    "args": []
                }
            },
            "parents": [
                "ig.GameAddon",
                "sc.Model",
                "ig.Vars.Accessor",
                "ig.Storage.Listener",
                "sc.NewGamePlusModel.Applier"
            ]
        }
    },
    "game.feature.model.options-model": {
        "sc": {
            "fields": {
                "KEY_BLACK_LIST": {
                    "type": "Record<ig.KEY, boolean>"
                },
                "LANGUAGE_MAP": {
                    "type": "Record<sc.LANGUAGE, ig.LANGUAGE_UNION>"
                },
                "OPTIONS_DEFINITION": {
                    "type": "{ [name: string]: OptionDefinition }"
                },
                "KEY_OPTION_MAP": {
                    "type": "Record<string, string>"
                },
                "KeyBinder": {
                    "type": "KeyBinderConstructor"
                },
                "OptionModel": {
                    "type": "OptionModelConstructor"
                },
                "options": {
                    "type": "OptionModel"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.OptionDefinition.BUTTON_GROUP": {
            "fields": {
                "type": {
                    "type": "'BUTTON_GROUP'",
                    "isOptional": false
                },
                "data": {
                    "type": "Record<string, number>",
                    "isOptional": false
                },
                "init": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.OptionDefinition.ARRAY_SLIDER": {
            "fields": {
                "type": {
                    "type": "'ARRAY_SLIDER'",
                    "isOptional": false
                },
                "data": {
                    "type": "number[]",
                    "isOptional": false
                },
                "init": {
                    "type": "number",
                    "isOptional": false
                },
                "snap": {
                    "type": "boolean",
                    "isOptional": true
                },
                "fill": {
                    "type": "boolean",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.OptionDefinition.OBJECT_SLIDER": {
            "fields": {
                "type": {
                    "type": "'OBJECT_SLIDER'",
                    "isOptional": false
                },
                "data": {
                    "type": "Record<string, number>",
                    "isOptional": false
                },
                "init": {
                    "type": "number",
                    "isOptional": false
                },
                "snap": {
                    "type": "boolean",
                    "isOptional": true
                },
                "fill": {
                    "type": "boolean",
                    "isOptional": true
                },
                "showPercentage": {
                    "type": "boolean",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.OptionDefinition.CHECKBOX": {
            "fields": {
                "type": {
                    "type": "'CHECKBOX'",
                    "isOptional": false
                },
                "data": {
                    "type": "null | undefined",
                    "isOptional": true
                },
                "init": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.OptionDefinition.CONTROLS": {
            "fields": {
                "type": {
                    "type": "'CONTROLS'",
                    "isOptional": false
                },
                "data": {
                    "type": "null | undefined",
                    "isOptional": true
                },
                "init": {
                    "type": "{ key1: ig.KEY; key2?: ig.KEY }",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.OptionDefinition.CONTROLS.init": {
            "fields": {
                "key1": {
                    "type": "ig.KEY",
                    "isOptional": false
                },
                "key2": {
                    "type": "ig.KEY",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.OptionDefinition.LANGUAGE": {
            "fields": {
                "type": {
                    "type": "'LANGUAGE'",
                    "isOptional": false
                },
                "data": {
                    "type": "Record<string, number>",
                    "isOptional": false
                },
                "init": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.OptionDefinition.INFO": {
            "fields": {
                "type": {
                    "type": "'INFO'",
                    "isOptional": false
                },
                "data": {
                    "type": "string",
                    "isOptional": false
                },
                "init": {
                    "type": "null | undefined",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.OptionDefinitionCommon": {
            "fields": {
                "cat": {
                    "type": "sc.OPTION_CATEGORY",
                    "isOptional": false
                },
                "hasDivider": {
                    "type": "boolean",
                    "isOptional": true
                },
                "header": {
                    "type": "string",
                    "isOptional": true
                },
                "restart": {
                    "type": "boolean",
                    "isOptional": true
                },
                "hasLocal": {
                    "type": "boolean",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.OPTIONS_DEFINITION.KnownTypesMap": {
            "fields": {
                "language": {
                    "type": "sc.OptionDefinition.LANGUAGE",
                    "isOptional": false
                },
                "'pause-unfocused'": {
                    "type": "sc.OptionDefinition.CHECKBOX",
                    "isOptional": false
                },
                "'volume-music'": {
                    "type": "sc.OptionDefinition.ARRAY_SLIDER",
                    "isOptional": false
                },
                "'volume-sound'": {
                    "type": "sc.OptionDefinition.ARRAY_SLIDER",
                    "isOptional": false
                },
                "'skip-tutorials'": {
                    "type": "sc.OptionDefinition.CHECKBOX",
                    "isOptional": false
                },
                "'skip-confirm'": {
                    "type": "sc.OptionDefinition.CHECKBOX",
                    "isOptional": false
                },
                "'text-speed'": {
                    "type": "sc.OptionDefinition.OBJECT_SLIDER",
                    "isOptional": false
                },
                "'message-padding'": {
                    "type": "sc.OptionDefinition.BUTTON_GROUP",
                    "isOptional": false
                },
                "'game-sense'": {
                    "type": "sc.OptionDefinition.CHECKBOX",
                    "isOptional": false
                },
                "'circuit-text-size'": {
                    "type": "sc.OptionDefinition.BUTTON_GROUP",
                    "isOptional": false
                },
                "'circuit-display-time'": {
                    "type": "sc.OptionDefinition.BUTTON_GROUP",
                    "isOptional": false
                },
                "'equip-level-display'": {
                    "type": "sc.OptionDefinition.CHECKBOX",
                    "isOptional": false
                },
                "'level-letter-display'": {
                    "type": "sc.OptionDefinition.CHECKBOX",
                    "isOptional": false
                },
                "'buff-help'": {
                    "type": "sc.OptionDefinition.CHECKBOX",
                    "isOptional": false
                },
                "'update-trophy-style'": {
                    "type": "sc.OptionDefinition.BUTTON_GROUP",
                    "isOptional": false
                },
                "'update-quest-style'": {
                    "type": "sc.OptionDefinition.BUTTON_GROUP",
                    "isOptional": false
                },
                "'update-landmark-style'": {
                    "type": "sc.OptionDefinition.BUTTON_GROUP",
                    "isOptional": false
                },
                "'update-lore-style'": {
                    "type": "sc.OptionDefinition.BUTTON_GROUP",
                    "isOptional": false
                },
                "'update-drop-style'": {
                    "type": "sc.OptionDefinition.BUTTON_GROUP",
                    "isOptional": false
                },
                "'min-sidebar'": {
                    "type": "sc.OptionDefinition.CHECKBOX",
                    "isOptional": false
                },
                "'item-hud-size'": {
                    "type": "sc.OptionDefinition.BUTTON_GROUP",
                    "isOptional": false
                },
                "'show-items'": {
                    "type": "sc.OptionDefinition.CHECKBOX",
                    "isOptional": false
                },
                "'show-money'": {
                    "type": "sc.OptionDefinition.CHECKBOX",
                    "isOptional": false
                },
                "'min-quest'": {
                    "type": "sc.OptionDefinition.CHECKBOX",
                    "isOptional": false
                },
                "'quest-show-current'": {
                    "type": "sc.OptionDefinition.CHECKBOX",
                    "isOptional": false
                },
                "'xeno-pointer'": {
                    "type": "sc.OptionDefinition.CHECKBOX",
                    "isOptional": false
                },
                "'hud-display'": {
                    "type": "sc.OptionDefinition.CHECKBOX",
                    "isOptional": false
                },
                "'close-combat-input'": {
                    "type": "sc.OptionDefinition.CHECKBOX",
                    "isOptional": false
                },
                "'close-circle'": {
                    "type": "sc.OptionDefinition.CHECKBOX",
                    "isOptional": false
                },
                "'sp-bar'": {
                    "type": "sc.OptionDefinition.CHECKBOX",
                    "isOptional": false
                },
                "'element-overload'": {
                    "type": "sc.OptionDefinition.CHECKBOX",
                    "isOptional": false
                },
                "'low-health-warning'": {
                    "type": "sc.OptionDefinition.CHECKBOX",
                    "isOptional": false
                },
                "'combat-art-name'": {
                    "type": "sc.OptionDefinition.CHECKBOX",
                    "isOptional": false
                },
                "'damage-numbers'": {
                    "type": "sc.OptionDefinition.CHECKBOX",
                    "isOptional": false
                },
                "'damage-numbers-crit'": {
                    "type": "sc.OptionDefinition.CHECKBOX",
                    "isOptional": false
                },
                "'s-rank-effects'": {
                    "type": "sc.OptionDefinition.CHECKBOX",
                    "isOptional": false
                },
                "'enemy-status-bars'": {
                    "type": "sc.OptionDefinition.CHECKBOX",
                    "isOptional": false
                },
                "'hp-bars'": {
                    "type": "sc.OptionDefinition.BUTTON_GROUP",
                    "isOptional": false
                },
                "'party-combat-arts'": {
                    "type": "sc.OptionDefinition.BUTTON_GROUP",
                    "isOptional": false
                },
                "'quick-menu-access'": {
                    "type": "sc.OptionDefinition.BUTTON_GROUP",
                    "isOptional": false
                },
                "'quick-location'": {
                    "type": "sc.OptionDefinition.BUTTON_GROUP",
                    "isOptional": false
                },
                "'quick-element'": {
                    "type": "sc.OptionDefinition.CHECKBOX",
                    "isOptional": false
                },
                "'quick-cursor'": {
                    "type": "sc.OptionDefinition.CHECKBOX",
                    "isOptional": false
                },
                "'display-type'": {
                    "type": "sc.OptionDefinition.BUTTON_GROUP",
                    "isOptional": false
                },
                "fullscreen": {
                    "type": "sc.OptionDefinition.CHECKBOX",
                    "isOptional": false
                },
                "'pixel-size'": {
                    "type": "sc.OptionDefinition.BUTTON_GROUP",
                    "isOptional": false
                },
                "'rumble-strength'": {
                    "type": "sc.OptionDefinition.BUTTON_GROUP",
                    "isOptional": false
                },
                "speedlines": {
                    "type": "sc.OptionDefinition.CHECKBOX",
                    "isOptional": false
                },
                "'env-particles'": {
                    "type": "sc.OptionDefinition.CHECKBOX",
                    "isOptional": false
                },
                "weather": {
                    "type": "sc.OptionDefinition.CHECKBOX",
                    "isOptional": false
                },
                "lighting": {
                    "type": "sc.OptionDefinition.CHECKBOX",
                    "isOptional": false
                },
                "'gamepad-attack'": {
                    "type": "sc.OptionDefinition.BUTTON_GROUP",
                    "isOptional": false
                },
                "'gamepad-dash'": {
                    "type": "sc.OptionDefinition.BUTTON_GROUP",
                    "isOptional": false
                },
                "'gamepad-icons'": {
                    "type": "sc.OptionDefinition.BUTTON_GROUP",
                    "isOptional": false
                },
                "'arena-cam-focus'": {
                    "type": "sc.OptionDefinition.CHECKBOX",
                    "isOptional": false
                },
                "'arena-confirm'": {
                    "type": "sc.OptionDefinition.CHECKBOX",
                    "isOptional": false
                },
                "'element-wheel'": {
                    "type": "sc.OptionDefinition.CHECKBOX",
                    "isOptional": false
                },
                "'keys-confirm'": {
                    "type": "sc.OptionDefinition.CONTROLS",
                    "isOptional": false
                },
                "'keys-back'": {
                    "type": "sc.OptionDefinition.CONTROLS",
                    "isOptional": false
                },
                "'keys-menu'": {
                    "type": "sc.OptionDefinition.CONTROLS",
                    "isOptional": false
                },
                "'keys-pause'": {
                    "type": "sc.OptionDefinition.CONTROLS",
                    "isOptional": false
                },
                "'keys-help'": {
                    "type": "sc.OptionDefinition.CONTROLS",
                    "isOptional": false
                },
                "'keys-help2'": {
                    "type": "sc.OptionDefinition.CONTROLS",
                    "isOptional": false
                },
                "'keys-help3'": {
                    "type": "sc.OptionDefinition.CONTROLS",
                    "isOptional": false
                },
                "'keys-skip-cutscene'": {
                    "type": "sc.OptionDefinition.CONTROLS",
                    "isOptional": false
                },
                "'keys-help4'": {
                    "type": "sc.OptionDefinition.CONTROLS",
                    "isOptional": false
                },
                "'keys-circle-left'": {
                    "type": "sc.OptionDefinition.CONTROLS",
                    "isOptional": false
                },
                "'keys-circle-right'": {
                    "type": "sc.OptionDefinition.CONTROLS",
                    "isOptional": false
                },
                "'keys-up'": {
                    "type": "sc.OptionDefinition.CONTROLS",
                    "isOptional": false
                },
                "'keys-right'": {
                    "type": "sc.OptionDefinition.CONTROLS",
                    "isOptional": false
                },
                "'keys-down'": {
                    "type": "sc.OptionDefinition.CONTROLS",
                    "isOptional": false
                },
                "'keys-left'": {
                    "type": "sc.OptionDefinition.CONTROLS",
                    "isOptional": false
                },
                "'keys-melee'": {
                    "type": "sc.OptionDefinition.CONTROLS",
                    "isOptional": false
                },
                "'keys-guard'": {
                    "type": "sc.OptionDefinition.CONTROLS",
                    "isOptional": false
                },
                "'keys-quick'": {
                    "type": "sc.OptionDefinition.CONTROLS",
                    "isOptional": false
                },
                "'keys-special'": {
                    "type": "sc.OptionDefinition.CONTROLS",
                    "isOptional": false
                },
                "'keys-dash2'": {
                    "type": "sc.OptionDefinition.CONTROLS",
                    "isOptional": false
                },
                "'keys-cold'": {
                    "type": "sc.OptionDefinition.CONTROLS",
                    "isOptional": false
                },
                "'keys-shock'": {
                    "type": "sc.OptionDefinition.CONTROLS",
                    "isOptional": false
                },
                "'keys-heat'": {
                    "type": "sc.OptionDefinition.CONTROLS",
                    "isOptional": false
                },
                "'keys-wave'": {
                    "type": "sc.OptionDefinition.CONTROLS",
                    "isOptional": false
                },
                "'keys-neutral'": {
                    "type": "sc.OptionDefinition.CONTROLS",
                    "isOptional": false
                },
                "'assists-description'": {
                    "type": "sc.OptionDefinition.INFO",
                    "isOptional": false
                },
                "'assist-damage'": {
                    "type": "sc.OptionDefinition.OBJECT_SLIDER",
                    "isOptional": false
                },
                "'assist-attack-frequency'": {
                    "type": "sc.OptionDefinition.OBJECT_SLIDER",
                    "isOptional": false
                },
                "'assist-puzzle-speed'": {
                    "type": "sc.OptionDefinition.OBJECT_SLIDER",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.KeyBinder": {
            "fields": {},
            "functions": {
                "initBindings": {
                    "returnType": "void",
                    "args": []
                },
                "unbind": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "key",
                            "type": "ig.KEY",
                            "isOptional": false
                        },
                        {
                            "name": "data",
                            "type": "sc.OptionDefinition.CONTROLS",
                            "isOptional": false
                        }
                    ]
                },
                "updateGamepadIcons": {
                    "returnType": "void",
                    "args": []
                },
                "changeBinding": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "optionId",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "key",
                            "type": "ig.KEY",
                            "isOptional": false
                        },
                        {
                            "name": "isAlternative",
                            "type": "boolean",
                            "isOptional": false
                        },
                        {
                            "name": "unbind",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "KeyBinder",
                    "args": []
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "sc.OptionModel": {
            "fields": {
                "hdMode": {
                    "type": "boolean",
                    "isOptional": false
                },
                "hasChanged": {
                    "type": "boolean",
                    "isOptional": false
                },
                "keyBinder": {
                    "type": "sc.KeyBinder",
                    "isOptional": false
                },
                "values": {
                    "type": "ig.Storage.GlobalsData.Options",
                    "isOptional": false
                }
            },
            "functions": {
                "persistOptions": {
                    "returnType": "void",
                    "args": []
                },
                "dispatchKeySwappedEvent": {
                    "returnType": "void",
                    "args": []
                },
                "set": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "value",
                            "type": "any",
                            "isOptional": false
                        }
                    ]
                },
                "get": {
                    "returnType": "unknown",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "local",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "_setDisplaySize": {
                    "returnType": "void",
                    "args": []
                },
                "_checkForKeyBindingFailure": {
                    "returnType": "void",
                    "args": []
                },
                "onStorageGlobalSave": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "globals",
                            "type": "ig.Storage.GlobalsData",
                            "isOptional": false
                        }
                    ]
                },
                "onStorageGlobalLoad": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "globals",
                            "type": "ig.Storage.GlobalsData",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "OptionModel",
                    "args": []
                }
            },
            "parents": [
                "ig.GameAddon",
                "sc.Model",
                "ig.Storage.Listener"
            ]
        }
    },
    "game.feature.new-game.new-game-model": {
        "sc.NewGameSet": {
            "fields": {
                "type": {
                    "type": "sc.TOGGLE_SET_TYPE",
                    "isOptional": false
                },
                "order": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.NEW_GAME_SETS": {
            "fields": {
                "'carry-over'": {
                    "type": "NewGameSet",
                    "isOptional": false
                },
                "money": {
                    "type": "NewGameSet",
                    "isOptional": false
                },
                "exp": {
                    "type": "NewGameSet",
                    "isOptional": false
                },
                "'drop-rate'": {
                    "type": "NewGameSet",
                    "isOptional": false
                },
                "'combat-modifier'": {
                    "type": "NewGameSet",
                    "isOptional": false
                },
                "itemCooldown": {
                    "type": "NewGameSet",
                    "isOptional": false
                },
                "'hp-regen'": {
                    "type": "NewGameSet",
                    "isOptional": false
                },
                "enemy": {
                    "type": "NewGameSet",
                    "isOptional": false
                },
                "'enemy-damage'": {
                    "type": "NewGameSet",
                    "isOptional": false
                },
                "'combat-arts'": {
                    "type": "NewGameSet",
                    "isOptional": false
                },
                "others": {
                    "type": "NewGameSet",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc": {
            "fields": {
                "NEW_GAME_SETS": {
                    "type": "NEW_GAME_SETS"
                },
                "NEW_GAME_OPTIONS": {
                    "type": "NEW_GAME_OPTIONS"
                },
                "NewGamePlusModel": {
                    "type": "NewGamePlusModelConstructor"
                },
                "newgame": {
                    "type": "sc.NewGamePlusModel"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.NewGameOption": {
            "fields": {
                "set": {
                    "type": "NEW_GAME_SETS.Keys",
                    "isOptional": false
                },
                "cost": {
                    "type": "number",
                    "isOptional": false
                },
                "disabled": {
                    "type": "boolean",
                    "isOptional": true
                },
                "needsSaveFile": {
                    "type": "boolean",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.NEW_GAME_OPTIONS": {
            "fields": {
                "'money-plus-2'": {
                    "type": "NewGameOption",
                    "isOptional": false
                },
                "'money-plus-4'": {
                    "type": "NewGameOption",
                    "isOptional": false
                },
                "'disable-money'": {
                    "type": "NewGameOption",
                    "isOptional": false
                },
                "'exp-plus-2'": {
                    "type": "NewGameOption",
                    "isOptional": false
                },
                "'exp-plus-4'": {
                    "type": "NewGameOption",
                    "isOptional": false
                },
                "'disable-exp'": {
                    "type": "NewGameOption",
                    "isOptional": false
                },
                "'drop-rate-2'": {
                    "type": "NewGameOption",
                    "isOptional": false
                },
                "'drop-rate-4'": {
                    "type": "NewGameOption",
                    "isOptional": false
                },
                "'keep-level'": {
                    "type": "NewGameOption",
                    "isOptional": false
                },
                "'keep-consumables'": {
                    "type": "NewGameOption",
                    "isOptional": false
                },
                "'keep-addons'": {
                    "type": "NewGameOption",
                    "isOptional": false
                },
                "'keep-equipment'": {
                    "type": "NewGameOption",
                    "isOptional": false
                },
                "'keep-trade'": {
                    "type": "NewGameOption",
                    "isOptional": false
                },
                "'keep-money'": {
                    "type": "NewGameOption",
                    "isOptional": false
                },
                "'keep-elements'": {
                    "type": "NewGameOption",
                    "isOptional": false
                },
                "'keep-arena'": {
                    "type": "NewGameOption",
                    "isOptional": false
                },
                "'keep-botanics'": {
                    "type": "NewGameOption",
                    "isOptional": false
                },
                "'keep-traders'": {
                    "type": "NewGameOption",
                    "isOptional": false
                },
                "'lea-must-die'": {
                    "type": "NewGameOption",
                    "isOptional": false
                },
                "'sergey-hax'": {
                    "type": "NewGameOption",
                    "isOptional": false
                },
                "'dash-1'": {
                    "type": "NewGameOption",
                    "isOptional": false
                },
                "'witch-time'": {
                    "type": "NewGameOption",
                    "isOptional": false
                },
                "'overload-disable'": {
                    "type": "NewGameOption",
                    "isOptional": false
                },
                "'infinite-sp'": {
                    "type": "NewGameOption",
                    "isOptional": false
                },
                "'double-buff-time'": {
                    "type": "NewGameOption",
                    "isOptional": false
                },
                "'remove-skill-blocks'": {
                    "type": "NewGameOption",
                    "isOptional": false
                },
                "'item-cd-double'": {
                    "type": "NewGameOption",
                    "isOptional": false
                },
                "'item-cd-half'": {
                    "type": "NewGameOption",
                    "isOptional": false
                },
                "'item-cd-zero'": {
                    "type": "NewGameOption",
                    "isOptional": false
                },
                "'combat-regen-half'": {
                    "type": "NewGameOption",
                    "isOptional": false
                },
                "'combat-regen-zero'": {
                    "type": "NewGameOption",
                    "isOptional": false
                },
                "'scale-enemies'": {
                    "type": "NewGameOption",
                    "isOptional": false
                },
                "'harder-enemies'": {
                    "type": "NewGameOption",
                    "isOptional": false
                },
                "'enemy-aggro'": {
                    "type": "NewGameOption",
                    "isOptional": false
                },
                "'enemy-damage-15'": {
                    "type": "NewGameOption",
                    "isOptional": false
                },
                "'enemy-damage-2'": {
                    "type": "NewGameOption",
                    "isOptional": false
                },
                "'enemy-damage-4'": {
                    "type": "NewGameOption",
                    "isOptional": false
                },
                "'combat-arts-level-1'": {
                    "type": "NewGameOption",
                    "isOptional": false
                },
                "'combat-arts-level-2'": {
                    "type": "NewGameOption",
                    "isOptional": false
                },
                "'waypoints-heals'": {
                    "type": "NewGameOption",
                    "isOptional": false
                },
                "'waypoints-teleport'": {
                    "type": "NewGameOption",
                    "isOptional": false
                },
                "'rhombus-start'": {
                    "type": "NewGameOption",
                    "isOptional": false
                },
                "'no-trophies'": {
                    "type": "NewGameOption",
                    "isOptional": false
                },
                "'ice-physics'": {
                    "type": "NewGameOption",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.NewGamePlusModel.Applier": {
            "fields": {},
            "functions": {
                "onNewGameApply": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "save",
                            "type": "ig.SaveSlot.Data",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": []
        },
        "sc.NewGamePlusModel.Data": {
            "fields": {
                "options": {
                    "type": "sc.NewGamePlusModel['options']",
                    "isOptional": false
                },
                "active": {
                    "type": "boolean",
                    "isOptional": false
                },
                "store": {
                    "type": "sc.NewGamePlusModel['store']",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.NewGamePlusModel": {
            "fields": {
                "active": {
                    "type": "boolean",
                    "isOptional": false
                },
                "store": {
                    "type": "{ level?: number }",
                    "isOptional": false
                },
                "options": {
                    "type": "Record<sc.NEW_GAME_OPTIONS.Keys, boolean>",
                    "isOptional": false
                }
            },
            "functions": {
                "onReset": {
                    "returnType": "void",
                    "args": []
                },
                "setActive": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "active",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "setActiveAndOptions": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "options",
                            "type": "sc.NEW_GAME_OPTIONS.Keys[]",
                            "isOptional": false
                        }
                    ]
                },
                "toggle": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "options",
                            "type": "sc.NEW_GAME_OPTIONS.Keys",
                            "isOptional": false
                        },
                        {
                            "name": "set",
                            "type": "Nullable<sc.NEW_GAME_SETS.Keys>",
                            "isOptional": true
                        }
                    ]
                },
                "get": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "option",
                            "type": "sc.NEW_GAME_OPTIONS.Keys",
                            "isOptional": false
                        }
                    ]
                },
                "storeSaveData": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "data",
                            "type": "ig.SaveSlot.Data",
                            "isOptional": false
                        }
                    ]
                },
                "applyData": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "data",
                            "type": "ig.SaveSlot.Data",
                            "isOptional": false
                        }
                    ]
                },
                "applyStoreData": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "atRhombus",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "_checkItemCondition": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "type",
                            "type": "sc.ITEMS_TYPES",
                            "isOptional": false
                        }
                    ]
                },
                "_checkEquip": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "playerData",
                            "type": "sc.PlayerModel.Data",
                            "isOptional": false
                        },
                        {
                            "name": "bodyPart",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "items",
                            "type": "number[]",
                            "isOptional": false
                        }
                    ]
                },
                "getCost": {
                    "returnType": "number",
                    "args": []
                },
                "requiresSaveFile": {
                    "returnType": "boolean",
                    "args": []
                },
                "hasAnyOptions": {
                    "returnType": "boolean",
                    "args": []
                },
                "hasHarderEnemies": {
                    "returnType": "boolean",
                    "args": []
                },
                "getDropRateMultiplier": {
                    "returnType": "number",
                    "args": []
                },
                "getMoneyMultiplier": {
                    "returnType": "number",
                    "args": []
                },
                "getEXPMultiplier": {
                    "returnType": "number",
                    "args": []
                },
                "init": {
                    "returnType": "NewGamePlusModel",
                    "args": []
                }
            },
            "parents": [
                "ig.GameAddon",
                "sc.Model",
                "ig.Vars.Accessor",
                "ig.Storage.Listener"
            ]
        },
        "sc.NewGamePlusModel.store": {
            "fields": {
                "level": {
                    "type": "number",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.party.party": {
        "sc": {
            "fields": {
                "PARTY_MAX_MEMBERS": {
                    "type": "number"
                },
                "PARTY_OPTIONS": {
                    "type": "string[]"
                },
                "PARTY_STRATEGY": {
                    "type": "PARTY_STRATEGY"
                },
                "PartyModel": {
                    "type": "PartyModelConstructor"
                },
                "party": {
                    "type": "sc.PartyModel"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.PARTY_STRATEGY.TargetStrategy": {
            "fields": {
                "others": {
                    "type": "boolean",
                    "isOptional": false
                },
                "same": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.PARTY_STRATEGY.BehaviourStrategy": {
            "fields": {
                "dodgeMin": {
                    "type": "number",
                    "isOptional": false
                },
                "dodgeMax": {
                    "type": "number",
                    "isOptional": false
                },
                "noAttack": {
                    "type": "boolean",
                    "isOptional": true
                },
                "doNothing": {
                    "type": "boolean",
                    "isOptional": true
                },
                "onlyTargetPlayer": {
                    "type": "boolean",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.PARTY_STRATEGY.ArtsStrategy": {
            "fields": {
                "factor": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.PARTY_STRATEGY.TargetStrategies": {
            "fields": {
                "WHATEVER": {
                    "type": "TargetStrategy",
                    "isOptional": false
                },
                "MY_ENEMY": {
                    "type": "TargetStrategy",
                    "isOptional": false
                },
                "OTHERS": {
                    "type": "TargetStrategy",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.PARTY_STRATEGY.BehaviourStrategies": {
            "fields": {
                "OFFENSIVE": {
                    "type": "BehaviourStrategy",
                    "isOptional": false
                },
                "DEFENSIVE": {
                    "type": "BehaviourStrategy",
                    "isOptional": false
                },
                "DO_NOTHING": {
                    "type": "BehaviourStrategy",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.PARTY_STRATEGY.ArtsStrategies": {
            "fields": {
                "NORMAL": {
                    "type": "ArtsStrategy",
                    "isOptional": false
                },
                "OFTEN": {
                    "type": "ArtsStrategy",
                    "isOptional": false
                },
                "NEVER": {
                    "type": "ArtsStrategy",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.PARTY_STRATEGY.StrategyType": {
            "fields": {
                "TARGET": {
                    "type": "TargetStrategy",
                    "isOptional": false
                },
                "BEHAVIOUR": {
                    "type": "BehaviourStrategy",
                    "isOptional": false
                },
                "ARTS": {
                    "type": "ArtsStrategy",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.PARTY_STRATEGY": {
            "fields": {
                "TARGET": {
                    "type": "PARTY_STRATEGY.TargetStrategies",
                    "isOptional": false
                },
                "BEHAVIOUR": {
                    "type": "PARTY_STRATEGY.BehaviourStrategies",
                    "isOptional": false
                },
                "ARTS": {
                    "type": "PARTY_STRATEGY.ArtsStrategies",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.PartyModel.Contact": {
            "fields": {
                "status": {
                    "type": "sc.PARTY_MEMBER_TYPE",
                    "isOptional": false
                },
                "online": {
                    "type": "boolean",
                    "isOptional": false
                },
                "locked": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.PartyModel.StrategyKeys": {
            "fields": {
                "TARGET": {
                    "type": "keyof sc.PARTY_STRATEGY.TargetStrategies",
                    "isOptional": false
                },
                "BEHAVIOUR": {
                    "type": "keyof sc.PARTY_STRATEGY.BehaviourStrategies",
                    "isOptional": false
                },
                "ARTS": {
                    "type": "keyof sc.PARTY_STRATEGY.ArtsStrategies",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.PartyModel.AI": {
            "fields": {
                "battle": {
                    "type": "number",
                    "isOptional": false
                },
                "targeting": {
                    "type": "number",
                    "isOptional": false
                },
                "aggressive": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.PartyModel.Data": {
            "fields": {
                "models": {
                    "type": "Record<string, sc.PartyMemberModel.Data>",
                    "isOptional": false
                },
                "currentParty": {
                    "type": "sc.PartyModel['currentParty']",
                    "isOptional": false
                },
                "contacts": {
                    "type": "sc.PartyModel['contacts']",
                    "isOptional": false
                },
                "strategies": {
                    "type": "sc.PartyModel['strategyKeys']",
                    "isOptional": false
                },
                "dungeonBlocked": {
                    "type": "sc.PartyModel['dungeonBlocked']",
                    "isOptional": false
                },
                "lastAreaDungeon": {
                    "type": "sc.PartyModel['lastAreaDungeon']",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.PartyModel": {
            "fields": {
                "models": {
                    "type": "Record<string, sc.PartyMemberModel>",
                    "isOptional": false
                },
                "currentParty": {
                    "type": "string[]",
                    "isOptional": false
                },
                "partyEntities": {
                    "type": "Record<string, sc.PartyMemberEntity>",
                    "isOptional": false
                },
                "contacts": {
                    "type": "{ [name: string]: sc.PartyModel.Contact }",
                    "isOptional": false
                },
                "dungeonBlocked": {
                    "type": "boolean",
                    "isOptional": false
                },
                "lastAreaDungeon": {
                    "type": "boolean",
                    "isOptional": false
                },
                "_deferredEntityUpdate": {
                    "type": "boolean",
                    "isOptional": false
                },
                "keepDistance": {
                    "type": "boolean",
                    "isOptional": false
                },
                "strategyKeys": {
                    "type": "PartyModel.StrategyKeys",
                    "isOptional": false
                },
                "ai": {
                    "type": "PartyModel.AI",
                    "isOptional": false
                }
            },
            "functions": {
                "getStrategy": {
                    "returnType": "sc.PARTY_STRATEGY.StrategyType[K]",
                    "args": [
                        {
                            "name": "strategy",
                            "type": "K",
                            "isOptional": false
                        }
                    ]
                },
                "updatePartyStrategy": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "strategy",
                            "type": "K",
                            "isOptional": false
                        },
                        {
                            "name": "key",
                            "type": "keyof sc.PARTY_STRATEGY[K]",
                            "isOptional": false
                        }
                    ]
                },
                "getStrategyKey": {
                    "returnType": "keyof sc.PARTY_STRATEGY[K] | void",
                    "args": [
                        {
                            "name": "strategy",
                            "type": "K",
                            "isOptional": false
                        },
                        {
                            "name": "index",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "setContactType": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "type",
                            "type": "sc.PARTY_MEMBER_TYPE",
                            "isOptional": false
                        }
                    ]
                },
                "setOnlineStatus": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "online",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "setLocked": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "locked",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "addPartyOption": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "initParty": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "partyString",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "addPartyMember": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "npc",
                            "type": "Nullable<ig.ENTITY.NPC>",
                            "isOptional": true
                        },
                        {
                            "name": "noEntityUpdate",
                            "type": "Nullable<boolean>",
                            "isOptional": true
                        },
                        {
                            "name": "skipEffect",
                            "type": "Nullable<boolean>",
                            "isOptional": true
                        },
                        {
                            "name": "temporary",
                            "type": "Nullable<boolean>",
                            "isOptional": true
                        }
                    ]
                },
                "removePartyMember": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "npc",
                            "type": "ig.ENTITY.NPC",
                            "isOptional": true
                        },
                        {
                            "name": "skipEffect",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "reviveAllPartyMembers": {
                    "returnType": "void",
                    "args": []
                },
                "reviveAllPartyMemberModels": {
                    "returnType": "void",
                    "args": []
                },
                "revivePartyMemberEntity": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "onMemberDefeat": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "keepMapDungeon": {
                    "returnType": "void",
                    "args": []
                },
                "onMapEnter": {
                    "returnType": "void",
                    "args": []
                },
                "respawnMembers": {
                    "returnType": "void",
                    "args": []
                },
                "isDungeonBlocked": {
                    "returnType": "boolean",
                    "args": []
                },
                "isPartyMember": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "isFriend": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "isPartyMemberLocked": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "isPartyMemberOnline": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "isDefeated": {
                    "returnType": "boolean",
                    "args": []
                },
                "getCurrentPartyIndex": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "getPartySize": {
                    "returnType": "number",
                    "args": []
                },
                "getPartySizeAlive": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "a_",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "getDmgFactor": {
                    "returnType": "number",
                    "args": []
                },
                "getPartyMemberModel": {
                    "returnType": "sc.PartyMemberModel",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "getPartyMemberEntity": {
                    "returnType": "sc.PartyMemberEntity",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "getPartyMemberEntityByIndex": {
                    "returnType": "sc.PartyMemberEntity",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "getPartyMemberIndex": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "getPartyMemberModelByIndex": {
                    "returnType": "sc.PartyMemberModel",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "addExperience": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "exp",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "baseLevel",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "bonus",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "ignoreModifier",
                            "type": "boolean",
                            "isOptional": false
                        },
                        {
                            "name": "levelCurve",
                            "type": "sc.LevelCurve",
                            "isOptional": false
                        }
                    ]
                },
                "updateEquipment": {
                    "returnType": "void",
                    "args": []
                },
                "resetMemberPos": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "resetAi": {
                    "returnType": "void",
                    "args": []
                },
                "_getMemberPos": {
                    "returnType": "Vec3",
                    "args": [
                        {
                            "name": "dest",
                            "type": "Vec3",
                            "isOptional": false
                        },
                        {
                            "name": "name",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "initSpawn",
                            "type": "number",
                            "isOptional": true
                        }
                    ]
                },
                "doDeferredEntityUpdate": {
                    "returnType": "void",
                    "args": []
                },
                "_spawnPartyMemberEntity": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "showEffects",
                            "type": "boolean",
                            "isOptional": false
                        },
                        {
                            "name": "idx",
                            "type": "unknown",
                            "isOptional": true
                        },
                        {
                            "name": "npc",
                            "type": "ig.ENTITY.NPC",
                            "isOptional": true
                        }
                    ]
                },
                "_updateEntitiesOffset": {
                    "returnType": "void",
                    "args": []
                },
                "_removePartyMemberEntity": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "npc",
                            "type": "ig.ENTITY.NPC",
                            "isOptional": false
                        },
                        {
                            "name": "d_",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "onReset": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "PartyModel",
                    "args": []
                }
            },
            "parents": [
                "ig.GameAddon",
                "sc.Model",
                "ig.Vars.Accessor",
                "ig.Storage.Listener"
            ]
        }
    },
    "game.feature.player.player-model": {
        "sc.PLAYER_MSG_ITEM_OBTAINED_DATA": {
            "fields": {
                "id": {
                    "type": "ItemID",
                    "isOptional": false
                },
                "equipID": {
                    "type": "number",
                    "isOptional": false
                },
                "amount": {
                    "type": "number",
                    "isOptional": false
                },
                "skip": {
                    "type": "boolean",
                    "isOptional": false
                },
                "cutscene": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc": {
            "fields": {
                "ITEM_USE_TIMER": {
                    "type": "number"
                },
                "ITEM_MAX_FAVS": {
                    "type": "number"
                },
                "EXP_PER_LEVEL": {
                    "type": "number"
                },
                "EXP_MAX_LEVEL": {
                    "type": "number"
                },
                "MAX_SP": {
                    "type": "number"
                },
                "SP_LEVEL": {
                    "type": "number[]"
                },
                "PlayerModel": {
                    "type": "PlayerModelContructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.PlayerModel.LevelUpDelta": {
            "fields": {
                "level": {
                    "type": "number",
                    "isOptional": false
                },
                "cp": {
                    "type": "number",
                    "isOptional": false
                },
                "hp": {
                    "type": "number",
                    "isOptional": false
                },
                "attack": {
                    "type": "number",
                    "isOptional": false
                },
                "defense": {
                    "type": "number",
                    "isOptional": false
                },
                "focus": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.PlayerModel.Equip": {
            "fields": {
                "head": {
                    "type": "number",
                    "isOptional": false
                },
                "leftArm": {
                    "type": "number",
                    "isOptional": false
                },
                "rightArm": {
                    "type": "number",
                    "isOptional": false
                },
                "torso": {
                    "type": "number",
                    "isOptional": false
                },
                "feet": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.PlayerModel.Data": {
            "fields": {
                "playerConfig": {
                    "type": "string",
                    "isOptional": false
                },
                "credit": {
                    "type": "number",
                    "isOptional": false
                },
                "level": {
                    "type": "number",
                    "isOptional": false
                },
                "exp": {
                    "type": "number",
                    "isOptional": false
                },
                "currentElementMode": {
                    "type": "sc.ELEMENT",
                    "isOptional": false
                },
                "elementLoad": {
                    "type": "number",
                    "isOptional": false
                },
                "hasOverload": {
                    "type": "boolean",
                    "isOptional": false
                },
                "hp": {
                    "type": "number",
                    "isOptional": false
                },
                "core": {
                    "type": "sc.PlayerModel['core']",
                    "isOptional": false
                },
                "skills": {
                    "type": "Nullable<boolean>[]",
                    "isOptional": false
                },
                "chapter": {
                    "type": "number",
                    "isOptional": false
                },
                "skillPoints": {
                    "type": "sc.PlayerModel['skillPoints']",
                    "isOptional": false
                },
                "skillPointsExtra": {
                    "type": "sc.PlayerModel['skillPointsExtra']",
                    "isOptional": false
                },
                "items": {
                    "type": "sc.PlayerModel['items']",
                    "isOptional": false
                },
                "equip": {
                    "type": "sc.PlayerModel['equip']",
                    "isOptional": false
                },
                "levelUpDelta": {
                    "type": "sc.PlayerModel['levelUpDelta']",
                    "isOptional": false
                },
                "spLevel": {
                    "type": "number",
                    "isOptional": false
                },
                "itemFavs": {
                    "type": "sc.PlayerModel['itemFavs']",
                    "isOptional": false
                },
                "itemNew": {
                    "type": "sc.PlayerModel['itemNew']",
                    "isOptional": false
                },
                "itemToggles": {
                    "type": "sc.PlayerModel['itemToggles']",
                    "isOptional": false
                },
                "skillVersion": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.PlayerModel": {
            "fields": {
                "core": {
                    "type": "Record<sc.PLAYER_CORE, boolean>",
                    "isOptional": false
                },
                "config": {
                    "type": "sc.PlayerConfig",
                    "isOptional": false
                },
                "loadedConfig": {
                    "type": "sc.PlayerConfig | null",
                    "isOptional": false
                },
                "equip": {
                    "type": "PlayerModel.Equip",
                    "isOptional": false
                },
                "items": {
                    "type": "number[]",
                    "isOptional": false
                },
                "itemFavs": {
                    "type": "number[]",
                    "isOptional": false
                },
                "itemNew": {
                    "type": "number[]",
                    "isOptional": false
                },
                "itemToggles": {
                    "type": "Record<sc.ItemID, boolean>",
                    "isOptional": false
                },
                "animSheet": {
                    "type": "ig.AnimationSheet",
                    "isOptional": false
                },
                "stats": {
                    "type": "sc.PlayerConfig.Stats",
                    "isOptional": false
                },
                "baseParams": {
                    "type": "sc.CombatParams.BaseParams",
                    "isOptional": false
                },
                "equipParams": {
                    "type": "sc.CombatParams.Params",
                    "isOptional": false
                },
                "equipModifiers": {
                    "type": "Record<keyof sc.MODIFIERS, number>",
                    "isOptional": false
                },
                "params": {
                    "type": "sc.CombatParams",
                    "isOptional": false
                },
                "name": {
                    "type": "string",
                    "isOptional": false
                },
                "character": {
                    "type": "sc.Character",
                    "isOptional": false
                },
                "credit": {
                    "type": "number",
                    "isOptional": false
                },
                "level": {
                    "type": "number",
                    "isOptional": false
                },
                "exp": {
                    "type": "number",
                    "isOptional": false
                },
                "skills": {
                    "type": "sc.BaseSkill[]",
                    "isOptional": false
                },
                "skillPoints": {
                    "type": "number[]",
                    "isOptional": false
                },
                "skillPointsExtra": {
                    "type": "Record<sc.ELEMENT, number>",
                    "isOptional": false
                },
                "chapter": {
                    "type": "number",
                    "isOptional": false
                },
                "spLevel": {
                    "type": "number",
                    "isOptional": false
                },
                "baseConfig": {
                    "type": "sc.PlayerSubConfig",
                    "isOptional": false
                },
                "elementConfigs": {
                    "type": "Record<sc.ELEMENT, sc.PlayerSubConfig>",
                    "isOptional": false
                },
                "elementScrollDelay": {
                    "type": "number",
                    "isOptional": false
                },
                "levelUpDelta": {
                    "type": "PlayerModel.LevelUpDelta",
                    "isOptional": false
                },
                "currentElementMode": {
                    "type": "sc.ELEMENT",
                    "isOptional": false
                },
                "elementLoad": {
                    "type": "number",
                    "isOptional": false
                },
                "elementLoadTimer": {
                    "type": "number",
                    "isOptional": false
                },
                "hasOverload": {
                    "type": "boolean",
                    "isOptional": false
                },
                "itemBlockTimer": {
                    "type": "number",
                    "isOptional": false
                },
                "chapters": {
                    "type": "ig.Database.Chapter[]",
                    "isOptional": false
                },
                "toggleSets": {
                    "type": "Record<string, ig.Database.ToggleSet>",
                    "isOptional": false
                }
            },
            "functions": {
                "setConfig": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "config",
                            "type": "sc.PlayerConfig",
                            "isOptional": false
                        }
                    ]
                },
                "updateChapter": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "unlock",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "reset": {
                    "returnType": "void",
                    "args": []
                },
                "updateLoop": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "inCombat",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "addElementLoad": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "delta",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "setElementLoad": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "load",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "enterElementalOverload": {
                    "returnType": "void",
                    "args": []
                },
                "onTargetHit": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "target",
                            "type": "ig.ENTITY.Combatant",
                            "isOptional": false
                        },
                        {
                            "name": "attackInfo",
                            "type": "sc.AttackInfo",
                            "isOptional": false
                        },
                        {
                            "name": "damageResult",
                            "type": "sc.CombatParams.DamageResult",
                            "isOptional": false
                        }
                    ]
                },
                "increaseActionHeat": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "actionType",
                            "type": "sc.PLAYER_ACTION",
                            "isOptional": false
                        }
                    ]
                },
                "getCharacterName": {
                    "returnType": "string",
                    "args": []
                },
                "switchBranch": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "startUID",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "startSide",
                            "type": "boolean",
                            "isOptional": false
                        },
                        {
                            "name": "newUID",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "learnSkill": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "unlearnSkill": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "hasSkill": {
                    "returnType": "sc.BaseSkill",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "hasSkillPoints": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "skillId",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "addSkillPoints": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "points",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "element",
                            "type": "sc.ELEMENT",
                            "isOptional": false
                        },
                        {
                            "name": "all",
                            "type": "boolean",
                            "isOptional": false
                        },
                        {
                            "name": "addExtra",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "resetSkillTree": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "element",
                            "type": "sc.ELEMENT",
                            "isOptional": false
                        }
                    ]
                },
                "setSpLevel": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "level",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "addItem": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "item",
                            "type": "sc.ItemID",
                            "isOptional": false
                        },
                        {
                            "name": "amount",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "hideEffect",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "startItemConsume": {
                    "returnType": "void",
                    "args": []
                },
                "endItemConsume": {
                    "returnType": "void",
                    "args": []
                },
                "useItem": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "getItemBlockTime": {
                    "returnType": "number",
                    "args": []
                },
                "getTotalItemsUsed": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "b_",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "removeItem": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "item",
                            "type": "sc.ItemID",
                            "isOptional": false
                        },
                        {
                            "name": "amount",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "skipNotification",
                            "type": "Nullable<boolean>",
                            "isOptional": true
                        },
                        {
                            "name": "includeEquip",
                            "type": "Nullable<boolean>",
                            "isOptional": true
                        }
                    ]
                },
                "setLevel": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "level",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "dontResetSkillTree",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "getItemAmount": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "item",
                            "type": "sc.ItemID",
                            "isOptional": false
                        }
                    ]
                },
                "hasItem": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "item",
                            "type": "sc.ItemID",
                            "isOptional": false
                        }
                    ]
                },
                "getItemAmountWithEquip": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "item",
                            "type": "sc.ItemID",
                            "isOptional": false
                        }
                    ]
                },
                "toggleItem": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "item",
                            "type": "sc.ItemID",
                            "isOptional": false
                        },
                        {
                            "name": "toggleType",
                            "type": "ig.Database.ToggleSet",
                            "isOptional": false
                        }
                    ]
                },
                "forceToggleState": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "item",
                            "type": "sc.ItemID",
                            "isOptional": false
                        },
                        {
                            "name": "state",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "getToggleItemState": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "id",
                            "type": "sc.ItemID",
                            "isOptional": false
                        }
                    ]
                },
                "hasAnySetItem": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "set",
                            "type": "ig.Database.ToggleSet",
                            "isOptional": false
                        }
                    ]
                },
                "hasToggleSetCompleted": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "set",
                            "type": "ig.Database.ToggleSet",
                            "isOptional": false
                        }
                    ]
                },
                "hasAnyToggleItems": {
                    "returnType": "boolean",
                    "args": []
                },
                "getItemSubList": {
                    "returnType": "number[]",
                    "args": [
                        {
                            "name": "type",
                            "type": "keyof typeof sc.ITEMS_TYPES",
                            "isOptional": false
                        },
                        {
                            "name": "sort",
                            "type": "sc.SORT_TYPE",
                            "isOptional": false
                        },
                        {
                            "name": "includeFavs",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "getNewItemList": {
                    "returnType": "number[]",
                    "args": []
                },
                "getEquipSubList": {
                    "returnType": "number[]",
                    "args": [
                        {
                            "name": "equipType",
                            "type": "sc.ITEMS_EQUIP_TYPES",
                            "isOptional": false
                        },
                        {
                            "name": "addEquipped",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "sort",
                            "type": "sc.SORT_TYPE",
                            "isOptional": true
                        }
                    ]
                },
                "sortItemList": {
                    "returnType": "sc.ItemID[]",
                    "args": [
                        {
                            "name": "list",
                            "type": "sc.ItemID[]",
                            "isOptional": false
                        },
                        {
                            "name": "sortType",
                            "type": "sc.SORT_TYPE",
                            "isOptional": false
                        },
                        {
                            "name": "includeFavorites",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "_addNewItem": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "item",
                            "type": "sc.ItemID",
                            "isOptional": false
                        }
                    ]
                },
                "_removeIDFromNewList": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "item",
                            "type": "sc.ItemID",
                            "isOptional": false
                        }
                    ]
                },
                "_sortOrderFavorite": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "item1",
                            "type": "sc.ItemID",
                            "isOptional": false
                        },
                        {
                            "name": "item2",
                            "type": "sc.ItemID",
                            "isOptional": false
                        }
                    ]
                },
                "_sortName": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "item1",
                            "type": "sc.ItemID",
                            "isOptional": false
                        },
                        {
                            "name": "item2",
                            "type": "sc.ItemID",
                            "isOptional": false
                        }
                    ]
                },
                "_sortAmount": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "item1",
                            "type": "sc.ItemID",
                            "isOptional": false
                        },
                        {
                            "name": "item2",
                            "type": "sc.ItemID",
                            "isOptional": false
                        }
                    ]
                },
                "_sortRarity": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "item1",
                            "type": "sc.ItemID",
                            "isOptional": false
                        },
                        {
                            "name": "item2",
                            "type": "sc.ItemID",
                            "isOptional": false
                        }
                    ]
                },
                "_sortLevel": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "item1",
                            "type": "sc.ItemID",
                            "isOptional": false
                        },
                        {
                            "name": "item2",
                            "type": "sc.ItemID",
                            "isOptional": false
                        }
                    ]
                },
                "_sortStat": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "item1",
                            "type": "sc.ItemID",
                            "isOptional": false
                        },
                        {
                            "name": "item2",
                            "type": "sc.ItemID",
                            "isOptional": false
                        }
                    ]
                },
                "canAddFavorite": {
                    "returnType": "boolean",
                    "args": []
                },
                "isFavorite": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "item",
                            "type": "sc.ItemID",
                            "isOptional": false
                        }
                    ]
                },
                "updateFavorite": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "item",
                            "type": "sc.ItemID",
                            "isOptional": false
                        }
                    ]
                },
                "setEquipment": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "bodypart",
                            "type": "sc.MENU_EQUIP_BODYPART",
                            "isOptional": false
                        },
                        {
                            "name": "itemID",
                            "type": "sc.ItemID",
                            "isOptional": false
                        }
                    ]
                },
                "isEquipped": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "itemID",
                            "type": "sc.ItemID",
                            "isOptional": false
                        }
                    ]
                },
                "getAvgEquipLevel": {
                    "returnType": "number",
                    "args": []
                },
                "setCore": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "core",
                            "type": "sc.PLAYER_CORE",
                            "isOptional": false
                        },
                        {
                            "name": "state",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "setCoreAll": {
                    "returnType": "boolean",
                    "args": []
                },
                "getCore": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "core",
                            "type": "sc.PLAYER_CORE",
                            "isOptional": false
                        }
                    ]
                },
                "getCombatCooldownTime": {
                    "returnType": "number",
                    "args": []
                },
                "hasElement": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "element",
                            "type": "sc.ELEMENT",
                            "isOptional": false
                        }
                    ]
                },
                "addExperience": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "exp",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "baseLevel",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "bonus",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "ignoreModifier",
                            "type": "boolean",
                            "isOptional": false
                        },
                        {
                            "name": "levelCurve",
                            "type": "sc.LevelCurve",
                            "isOptional": false
                        }
                    ]
                },
                "addCredit": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "amount",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "removeCredit": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "amount",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "getRawExpGain": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "exp",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "baseLevel",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "ignoreGlobalLevelCurve",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "regenerate": {
                    "returnType": "void",
                    "args": []
                },
                "setElementMode": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "element",
                            "type": "sc.ELEMENT",
                            "isOptional": false
                        },
                        {
                            "name": "force",
                            "type": "Nullable<boolean>",
                            "isOptional": true
                        },
                        {
                            "name": "skipEffect",
                            "type": "Nullable<boolean>",
                            "isOptional": true
                        }
                    ]
                },
                "scrollElementMode": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "a_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "force",
                            "type": "boolean",
                            "isOptional": false
                        },
                        {
                            "name": "skipEffect",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "getCurrentElementMode": {
                    "returnType": "sc.PlayerSubConfig",
                    "args": []
                },
                "getCombatArt": {
                    "returnType": "ig.Action",
                    "args": [
                        {
                            "name": "element",
                            "type": "sc.ELEMENT",
                            "isOptional": false
                        },
                        {
                            "name": "actionType",
                            "type": "sc.PLAYER_ACTION",
                            "isOptional": false
                        }
                    ]
                },
                "getCombatArtName": {
                    "returnType": "string",
                    "args": [
                        {
                            "name": "actionType",
                            "type": "PlayerModel.ActionKey",
                            "isOptional": false
                        }
                    ]
                },
                "getActiveCombatArt": {
                    "returnType": "ig.Action",
                    "args": [
                        {
                            "name": "element",
                            "type": "sc.ELEMENT",
                            "isOptional": false
                        },
                        {
                            "name": "actionType",
                            "type": "PlayerModel.ActionKey",
                            "isOptional": false
                        }
                    ]
                },
                "getAction": {
                    "returnType": "ig.Action",
                    "args": [
                        {
                            "name": "action",
                            "type": "sc.PLAYER_ACTION",
                            "isOptional": false
                        }
                    ]
                },
                "getActionByElement": {
                    "returnType": "ig.Action",
                    "args": [
                        {
                            "name": "element",
                            "type": "sc.ELEMENT",
                            "isOptional": false
                        },
                        {
                            "name": "actionType",
                            "type": "PlayerModel.ActionKey",
                            "isOptional": false
                        }
                    ]
                },
                "getBalls": {
                    "returnType": "Record<string, sc.ProxySpawnerBase>",
                    "args": []
                },
                "getOptionFace": {
                    "returnType": "string",
                    "args": []
                },
                "updateStats": {
                    "returnType": "void",
                    "args": []
                },
                "getCombatArtLevel": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "type",
                            "type": "sc.SpecialSkill.SkillType",
                            "isOptional": false
                        },
                        {
                            "name": "element",
                            "type": "sc.ELEMENT",
                            "isOptional": true
                        }
                    ]
                },
                "getTopCombatArtElement": {
                    "returnType": "sc.ELEMENT | undefined",
                    "args": [
                        {
                            "name": "type",
                            "type": "sc.SpecialSkill.SkillType",
                            "isOptional": false
                        }
                    ]
                },
                "hasLevelUp": {
                    "returnType": "boolean",
                    "args": []
                },
                "clearLevelUp": {
                    "returnType": "void",
                    "args": []
                },
                "getParamAvg": {
                    "returnType": "number",
                    "args": []
                },
                "getParamAvgLevel": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "level",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "usedSkillPoints": {
                    "returnType": "boolean",
                    "args": []
                },
                "getMaxSkillPoints": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "element",
                            "type": "sc.ELEMENT",
                            "isOptional": false
                        }
                    ]
                },
                "getSaveData": {
                    "returnType": "sc.PlayerModel.Data",
                    "args": []
                },
                "checkBodyPart": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "id",
                            "type": "sc.ItemID",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "PlayerModel",
                    "args": []
                }
            },
            "parents": [
                "ig.Class",
                "ig.Vars.Accessor",
                "sc.Model",
                "ig.Storage.Listener"
            ]
        },
        "sc.PlayerModelContructor": {
            "fields": {},
            "functions": {},
            "parents": []
        }
    },
    "game.feature.quest.quest-model": {
        "sc.QuestModel": {
            "fields": {
                "_solvedTimer": {
                    "type": "number",
                    "isOptional": false
                },
                "_hasSolveDialogs": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "hasQuestSolvedDialogs": {
                    "returnType": "boolean",
                    "args": []
                },
                "getSubQuests": {
                    "returnType": "sc.QuestTask['subQuests'] | undefined",
                    "args": [
                        {
                            "name": "quest",
                            "type": "sc.Quest",
                            "isOptional": false
                        }
                    ]
                },
                "_collectRewards": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "quest",
                            "type": "sc.Quest",
                            "isOptional": false
                        }
                    ]
                },
                "_loadStaticQuests": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "QuestModel",
                    "args": []
                }
            },
            "parents": [
                "ig.GameAddon",
                "sc.Model",
                "sc.Model.Observer",
                "ig.Storage.Listener"
            ]
        },
        "sc": {
            "fields": {
                "QuestModel": {
                    "type": "QuestModelConstructor"
                },
                "quests": {
                    "type": "QuestModel"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "game.feature.timers.timers-model": {
        "sc.TimersModel": {
            "fields": {
                "timers": {
                    "type": "Record<string, sc.TimerEntry>",
                    "isOptional": false
                }
            },
            "functions": {
                "addTimer": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "mode",
                            "type": "sc.TIMER_TYPES",
                            "isOptional": false
                        },
                        {
                            "name": "duration",
                            "type": "Nullable<number>",
                            "isOptional": true
                        },
                        {
                            "name": "area",
                            "type": "Nullable<string>",
                            "isOptional": true
                        },
                        {
                            "name": "temp",
                            "type": "Nullable<boolean>",
                            "isOptional": true
                        },
                        {
                            "name": "showGui",
                            "type": "Nullable<boolean>",
                            "isOptional": true
                        },
                        {
                            "name": "millis",
                            "type": "Nullable<boolean>",
                            "isOptional": true
                        },
                        {
                            "name": "quest",
                            "type": "Nullable<string>",
                            "isOptional": true
                        },
                        {
                            "name": "label",
                            "type": "Nullable<string>",
                            "isOptional": true
                        },
                        {
                            "name": "k_",
                            "type": "Nullable<boolean>",
                            "isOptional": true
                        }
                    ]
                },
                "stopTimer": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "resumeTimer": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "resetTimer": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "mode",
                            "type": "sc.TIMER_TYPES",
                            "isOptional": false
                        },
                        {
                            "name": "duration",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "removeTimer": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "getRemainingTimerTime": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "formatTime": {
                    "returnType": "string",
                    "args": [
                        {
                            "name": "value",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "withMillis",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "TimersModel",
                    "args": []
                }
            },
            "parents": [
                "ig.GameAddon",
                "sc.Model",
                "ig.Vars.Accessor",
                "ig.Storage.Listener"
            ]
        },
        "sc": {
            "fields": {
                "TimersModel": {
                    "type": "TimersModelConstructor"
                },
                "timers": {
                    "type": "TimersModel"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.TimerEntry.Data": {
            "fields": {
                "name": {
                    "type": "string",
                    "isOptional": false
                },
                "mode": {
                    "type": "sc.TIMER_TYPES",
                    "isOptional": false
                },
                "timer": {
                    "type": "number",
                    "isOptional": false
                },
                "duration": {
                    "type": "number",
                    "isOptional": false
                },
                "millis": {
                    "type": "number",
                    "isOptional": false
                },
                "temp": {
                    "type": "boolean",
                    "isOptional": false
                },
                "stopped": {
                    "type": "boolean",
                    "isOptional": false
                },
                "area": {
                    "type": "string",
                    "isOptional": true
                },
                "quest": {
                    "type": "sc.QuestData",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.TimerEntry": {
            "fields": {
                "name": {
                    "type": "string",
                    "isOptional": false
                },
                "mode": {
                    "type": "sc.TIMER_TYPES",
                    "isOptional": false
                },
                "timer": {
                    "type": "number",
                    "isOptional": false
                },
                "duration": {
                    "type": "number",
                    "isOptional": false
                },
                "temp": {
                    "type": "boolean",
                    "isOptional": false
                },
                "millis": {
                    "type": "boolean",
                    "isOptional": false
                },
                "area": {
                    "type": "Nullable<string>",
                    "isOptional": true
                },
                "quest": {
                    "type": "Nullable<string>",
                    "isOptional": true
                }
            },
            "functions": {
                "getSaveData": {
                    "returnType": "sc.TimerEntry.Data",
                    "args": []
                },
                "init": {
                    "returnType": "TimerEntry",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "mode",
                            "type": "sc.TIMER_TYPES",
                            "isOptional": false
                        },
                        {
                            "name": "duration",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "area",
                            "type": "string",
                            "isOptional": true
                        },
                        {
                            "name": "temp",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "millis",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "quest",
                            "type": "string",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "sc.TimerEntryContstructor": {
            "fields": {},
            "functions": {},
            "parents": []
        }
    },
    "impact.base.sound": {
        "ig.SoundManager": {
            "fields": {
                "clips": {
                    "type": "{ [path: string]: HTMLAudioElement }",
                    "isOptional": false
                },
                "volume": {
                    "type": "number",
                    "isOptional": false
                },
                "format": {
                    "type": "ig.Sound.FORMAT",
                    "isOptional": false
                },
                "context": {
                    "type": "ig.WebAudio",
                    "isOptional": false
                },
                "buffers": {
                    "type": "{ [path: string]: AudioBuffer }",
                    "isOptional": false
                },
                "soundHandles": {
                    "type": "ig.SoundHandle[]",
                    "isOptional": false
                },
                "soundStack": {
                    "type": "ig.SoundHandle[][]",
                    "isOptional": false
                },
                "soundGroups": {
                    "type": "Record<string, { playing: ig.SoundHandle[]; requests: ig.SoundHandle[] }>",
                    "isOptional": false
                },
                "playing": {
                    "type": "ig.SoundHandleBase[]",
                    "isOptional": false
                },
                "requests": {
                    "type": "ig.SoundHandleBase[]",
                    "isOptional": false
                }
            },
            "functions": {
                "update": {
                    "returnType": "void",
                    "args": []
                },
                "reset": {
                    "returnType": "void",
                    "args": []
                },
                "playSoundHandle": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "handle",
                            "type": "ig.SoundHandleBase",
                            "isOptional": false
                        },
                        {
                            "name": "group",
                            "type": "{ playing: ig.SoundHandleBase[]; requests: ig.SoundHandleBase[] }",
                            "isOptional": false
                        }
                    ]
                },
                "stopSoundHandle": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "handle",
                            "type": "ig.SoundHandleBase",
                            "isOptional": false
                        }
                    ]
                },
                "pushPaused": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "noFadeOut",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "popPaused": {
                    "returnType": "void",
                    "args": []
                },
                "_solveGroupRequests": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "group",
                            "type": "{ playing: ig.SoundHandleBase[]; requests: ig.SoundHandleBase[] }",
                            "isOptional": false
                        }
                    ]
                },
                "connectSound": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "connectObj",
                            "type": "{ connect(gain: GainNode): void }",
                            "isOptional": false
                        }
                    ]
                },
                "connect": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "gain",
                            "type": "GainNode",
                            "isOptional": false
                        }
                    ]
                },
                "addNamedSound": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "handle",
                            "type": "ig.SoundHandle",
                            "isOptional": false
                        }
                    ]
                },
                "getNamedSounds": {
                    "returnType": "ig.SoundHandle[]",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "stopNamedSounds": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "loadWebAudio": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "path",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "loadCallback",
                            "type": "(path: string, success: boolean) => void",
                            "isOptional": false
                        }
                    ]
                },
                "load": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "path",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "channelCount",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "loadCallback",
                            "type": "(\n          path: string,\n          channelCount: number,\n          success: boolean,\n          event?: globalThis.Event,\n        ) => void",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "SoundManager",
                    "args": []
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "ig": {
            "fields": {
                "SoundManager": {
                    "type": "SoundManagerConstructor"
                },
                "soundManager": {
                    "type": "SoundManager"
                },
                "MultiAudio": {
                    "type": "MultiAudioConstructor"
                },
                "WebAudioBuffer": {
                    "type": "WebAudioBufferConstructor"
                },
                "Music": {
                    "type": "MusicConstructor"
                },
                "music": {
                    "type": "Music"
                },
                "TrackDefault": {
                    "type": "TrackDefaultConstructor"
                },
                "TrackWebAudio": {
                    "type": "TrackWebAudioConstructor"
                },
                "SoundDefault": {
                    "type": "SoundDefaultConstructor"
                },
                "SoundWebAudio": {
                    "type": "SoundWebAudioConstructor"
                },
                "SoundHandleBase": {
                    "type": "ig.SoundHandleBaseConstructor"
                },
                "SoundHandleDefault": {
                    "type": "ig.SoundHandleDefault"
                },
                "SoundHandleWebAudio": {
                    "type": "ig.SoundHandleWebAudioConstructor"
                },
                "Sound": {
                    "type": "SoundConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.MultiAudio": {
            "fields": {
                "channelCount": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "get": {
                    "returnType": "unknown",
                    "args": []
                },
                "getChannel": {
                    "returnType": "unknown",
                    "args": [
                        {
                            "name": "a_",
                            "type": "unknown",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "MultiAudio",
                    "args": [
                        {
                            "name": "pathOrData",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "_unused",
                            "type": "never",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": [
                "ig.Loadable"
            ]
        },
        "ig.WebAudioBuffer": {
            "fields": {
                "cacheType": {
                    "type": "'WebAudioBuffer'",
                    "isOptional": false
                }
            },
            "functions": {
                "get": {
                    "returnType": "AudioBuffer",
                    "args": []
                },
                "init": {
                    "returnType": "WebAudioBuffer",
                    "args": [
                        {
                            "name": "path",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Loadable"
            ]
        },
        "ig.Music": {
            "fields": {},
            "functions": {
                "init": {
                    "returnType": "Music",
                    "args": []
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "ig.TrackDefault": {
            "fields": {},
            "functions": {
                "init": {
                    "returnType": "TrackDefault",
                    "args": [
                        {
                            "name": "a_",
                            "type": "unknown",
                            "isOptional": false
                        },
                        {
                            "name": "b_",
                            "type": "unknown",
                            "isOptional": false
                        },
                        {
                            "name": "c_",
                            "type": "unknown",
                            "isOptional": false
                        },
                        {
                            "name": "d_",
                            "type": "unknown",
                            "isOptional": false
                        },
                        {
                            "name": "e_",
                            "type": "unknown",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Cacheable"
            ]
        },
        "ig.TrackWebAudio": {
            "fields": {},
            "functions": {
                "init": {
                    "returnType": "TrackWebAudio",
                    "args": [
                        {
                            "name": "a_",
                            "type": "unknown",
                            "isOptional": false
                        },
                        {
                            "name": "b_",
                            "type": "unknown",
                            "isOptional": false
                        },
                        {
                            "name": "c_",
                            "type": "unknown",
                            "isOptional": false
                        },
                        {
                            "name": "d_",
                            "type": "unknown",
                            "isOptional": false
                        },
                        {
                            "name": "e_",
                            "type": "unknown",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Cacheable"
            ]
        },
        "ig.SoundDefault": {
            "fields": {
                "group": {
                    "type": "string",
                    "isOptional": false
                },
                "multiAudio": {
                    "type": "ig.MultiAudio",
                    "isOptional": false
                },
                "volume": {
                    "type": "number",
                    "isOptional": false
                },
                "currentClip": {
                    "type": "unknown",
                    "isOptional": false
                },
                "multiChannel": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "clone": {
                    "returnType": "ig.SoundDefault",
                    "args": []
                },
                "clearCached": {
                    "returnType": "void",
                    "args": []
                },
                "stop": {
                    "returnType": "void",
                    "args": []
                }
            },
            "parents": [
                "ig.Class",
                "SoundCommon",
                "SoundConstructorCommon<ig.SoundDefault>"
            ]
        },
        "ig.SoundWebAudio": {
            "fields": {
                "group": {
                    "type": "string",
                    "isOptional": false
                },
                "webAudioBuffer": {
                    "type": "ig.WebAudioBuffer",
                    "isOptional": false
                },
                "volume": {
                    "type": "number",
                    "isOptional": false
                },
                "variance": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "clone": {
                    "returnType": "SoundWebAudio",
                    "args": []
                },
                "clearCached": {
                    "returnType": "void",
                    "args": []
                },
                "stop": {
                    "returnType": "void",
                    "args": []
                }
            },
            "parents": [
                "ig.Class",
                "SoundCommon",
                "SoundConstructorCommon<ig.SoundWebAudio>"
            ]
        },
        "ig.SoundHandleBase": {
            "fields": {
                "pos": {
                    "type": "null | {\n        point: Vec2;\n        entity: ig.Entity | null;\n        align: ig.ENTITY_ALIGN | null;\n        offset: null;\n        range: number;\n        rangeType: ig.SOUND_RANGE_TYPE;\n      }",
                    "isOptional": false
                },
                "point": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "entity": {
                    "type": "ig.Entity | null",
                    "isOptional": false
                },
                "align": {
                    "type": "ig.ENTITY_ALIGN | null",
                    "isOptional": false
                },
                "offset": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "range": {
                    "type": "number",
                    "isOptional": false
                },
                "rangeType": {
                    "type": "ig.SOUND_RANGE_TYPE",
                    "isOptional": false
                }
            },
            "functions": {
                "setFixPosition": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "point",
                            "type": "Vec3",
                            "isOptional": false
                        },
                        {
                            "name": "range",
                            "type": "number",
                            "isOptional": true
                        },
                        {
                            "name": "type",
                            "type": "ig.SOUND_RANGE_TYPE",
                            "isOptional": true
                        }
                    ]
                },
                "setEntityPosition": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "entity",
                            "type": "ig.Entity",
                            "isOptional": false
                        },
                        {
                            "name": "align",
                            "type": "ig.ENTITY_ALIGN",
                            "isOptional": false
                        },
                        {
                            "name": "offset",
                            "type": "null",
                            "isOptional": false
                        },
                        {
                            "name": "range",
                            "type": "number",
                            "isOptional": true
                        },
                        {
                            "name": "type",
                            "type": "ig.SOUND_RANGE_TYPE",
                            "isOptional": true
                        }
                    ]
                },
                "_updateEntityPos": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "force",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "isLooping": {
                    "returnType": "boolean",
                    "args": []
                },
                "getPlayTime": {
                    "returnType": "number",
                    "args": []
                },
                "stop": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "ig.SoundHandleBase",
                    "args": []
                }
            },
            "parents": [
                "ig.Class",
                "SoundCommon"
            ]
        },
        "ig.SoundHandleDefault": {
            "fields": {},
            "functions": {
                "init": {
                    "returnType": "ig.SoundHandleDefault",
                    "args": []
                }
            },
            "parents": [
                "ig.SoundHandleBase"
            ]
        },
        "ig.SoundHandleWebAudio": {
            "fields": {
                "_buffer": {
                    "type": "null | AudioBufferSourceNode",
                    "isOptional": false
                },
                "_volume": {
                    "type": "number",
                    "isOptional": false
                },
                "_speed": {
                    "type": "number",
                    "isOptional": false
                },
                "_time": {
                    "type": "number",
                    "isOptional": false
                },
                "_duration": {
                    "type": "number",
                    "isOptional": false
                },
                "_offset": {
                    "type": "number",
                    "isOptional": false
                },
                "_startTime": {
                    "type": "number",
                    "isOptional": false
                },
                "_nodeSource": {
                    "type": "null | ig.WebAudioBufferGain",
                    "isOptional": false
                },
                "_nodePosition": {
                    "type": "PannerNode",
                    "isOptional": false
                },
                "_loop": {
                    "type": "boolean",
                    "isOptional": false
                },
                "_playing": {
                    "type": "boolean",
                    "isOptional": false
                },
                "_fadeTimer": {
                    "type": "number",
                    "isOptional": false
                },
                "_fadeIn": {
                    "type": "boolean",
                    "isOptional": false
                },
                "_fadeDuration": {
                    "type": "number",
                    "isOptional": false
                },
                "_contextTimeOnStart": {
                    "type": "number",
                    "isOptional": false
                },
                "_contextTimeOnPause": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "_setPosition": {
                    "returnType": "void",
                    "args": []
                },
                "_disconnect": {
                    "returnType": "void",
                    "args": []
                },
                "pause": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "noFadeOut",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "init": {
                    "returnType": "ig.SoundHandleWebAudio",
                    "args": []
                }
            },
            "parents": [
                "ig.SoundHandleBase"
            ]
        },
        "ig.Sound.FORMAT": {
            "fields": {
                "ext": {
                    "type": "string",
                    "isOptional": false
                },
                "mime": {
                    "type": "string",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.SoundPlaySettings": {
            "fields": {
                "fadeDuration": {
                    "type": "number",
                    "isOptional": true
                },
                "offset": {
                    "type": "number",
                    "isOptional": true
                },
                "startTime": {
                    "type": "number",
                    "isOptional": true
                },
                "speed": {
                    "type": "number",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.SoundCommon": {
            "fields": {},
            "functions": {
                "play": {
                    "returnType": "ig.SoundHandle",
                    "args": [
                        {
                            "name": "pos",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "settings",
                            "type": "SoundPlaySettings",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": []
        },
        "ig.Sound$FORMAT": {
            "fields": {
                "MP3": {
                    "type": "ig.Sound.FORMAT"
                },
                "M4A": {
                    "type": "ig.Sound.FORMAT"
                },
                "OGG": {
                    "type": "ig.Sound.FORMAT"
                },
                "WEBM": {
                    "type": "ig.Sound.FORMAT"
                },
                "CAF": {
                    "type": "ig.Sound.FORMAT"
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.T": {
            "fields": {},
            "functions": {
                "init": {
                    "returnType": "T",
                    "args": [
                        {
                            "name": "path",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "volume",
                            "type": "number",
                            "isOptional": true
                        },
                        {
                            "name": "variance",
                            "type": "number",
                            "isOptional": true
                        },
                        {
                            "name": "group",
                            "type": "string",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": []
        },
        "ig.SoundConstructorCommon": {
            "fields": {
                "FORMAT": {
                    "type": "typeof Sound$FORMAT",
                    "isOptional": false
                },
                "use": {
                    "type": "ig.Sound.FORMAT[]",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "": {
            "fields": {
                "webAudioActive": {
                    "type": "boolean"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "impact.feature.storage.storage": {
        "ig.SaveSlot.Data": {
            "fields": {
                "area": {
                    "type": "ig.LangLabel.Data",
                    "isOptional": false
                },
                "arena": {
                    "type": "sc.Arena.Data",
                    "isOptional": false
                },
                "bgm": {
                    "type": "ig.Bgm.Data",
                    "isOptional": false
                },
                "cancelButtonText": {
                    "type": "Nullable<ig.LangLabel>",
                    "isOptional": false
                },
                "commonEvents": {
                    "type": "{ runData: sc.CommonEvents.RunData }",
                    "isOptional": false
                },
                "currentTask": {
                    "type": "Nullable<ig.LangLabel.Data>",
                    "isOptional": false
                },
                "drops": {
                    "type": "sc.MenuModel['dropCounts']",
                    "isOptional": false
                },
                "floor": {
                    "type": "ig.LangLabel.Data | 'MISSING LABEL'",
                    "isOptional": false
                },
                "forceCombatMode": {
                    "type": "boolean",
                    "isOptional": false
                },
                "gui": {
                    "type": "Record<string, ig.GuiElementBase>",
                    "isOptional": false
                },
                "highscore": {
                    "type": "number[]",
                    "isOptional": false
                },
                "highscoreObs": {
                    "type": "number[]",
                    "isOptional": false
                },
                "landmarks": {
                    "type": "sc.MapModel['activeLandmarks']",
                    "isOptional": false
                },
                "logs": {
                    "type": "sc.MenuModel.LogEntry[]",
                    "isOptional": false
                },
                "lories": {
                    "type": "sc.LoreModel['unlockedLories']",
                    "isOptional": false
                },
                "map": {
                    "type": "string",
                    "isOptional": false
                },
                "menuNewEntries": {
                    "type": "sc.MenuModel['newUnlocks']",
                    "isOptional": false
                },
                "message": {
                    "type": "sc.MessageModel.Data",
                    "isOptional": false
                },
                "mobilityBlock": {
                    "type": "keyof typeof sc.GAME_MOBILITY_BLOCK",
                    "isOptional": false
                },
                "newGamePlus": {
                    "type": "sc.NewGamePlusModel.Data",
                    "isOptional": false
                },
                "options": {
                    "type": "{}",
                    "isOptional": false
                },
                "party": {
                    "type": "sc.PartyModel.Data",
                    "isOptional": false
                },
                "permaTask": {
                    "type": "ig.LangLabel.Data",
                    "isOptional": false
                },
                "player": {
                    "type": "sc.PlayerModel.Data",
                    "isOptional": false
                },
                "playtime": {
                    "type": "number",
                    "isOptional": false
                },
                "position": {
                    "type": "ig.TeleportPosition.Settings",
                    "isOptional": false
                },
                "quests": {
                    "type": "Data.Quests",
                    "isOptional": false
                },
                "questsSeen": {
                    "type": "Record<string, boolean>",
                    "isOptional": false
                },
                "saveVersion": {
                    "type": "number",
                    "isOptional": false
                },
                "specialMap": {
                    "type": "ig.LangLabel.Data",
                    "isOptional": false
                },
                "stamps": {
                    "type": "sc.MenuModel['mapStamps']",
                    "isOptional": false
                },
                "stats": {
                    "type": "sc.StatsModel['values']",
                    "isOptional": false
                },
                "timers": {
                    "type": "Record<string, sc.TimerEntry.Data>",
                    "isOptional": false
                },
                "tradersFound": {
                    "type": "{ [id: string]: Data.TraderFound }",
                    "isOptional": false
                },
                "vars": {
                    "type": "Data.Vars",
                    "isOptional": false
                },
                "version": {
                    "type": "string",
                    "isOptional": false
                },
                "visitedAreas": {
                    "type": "Record<string, {}>",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.SaveSlot.Data.commonEvents": {
            "fields": {
                "runData": {
                    "type": "sc.CommonEvents.RunData",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.SaveSlot.Data.TraderFound": {
            "fields": {
                "characterName": {
                    "type": "string",
                    "isOptional": false
                },
                "map": {
                    "type": "ig.LangLabel.Data",
                    "isOptional": false
                },
                "area": {
                    "type": "ig.LangLabel.Data",
                    "isOptional": false
                },
                "time": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.SaveSlot.Data.Quests": {
            "fields": {
                "locale": {
                    "type": "{ [id: string]: Quests.Locale }",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.SaveSlot.Data.Quests.Locale": {
            "fields": {
                "time": {
                    "type": "number",
                    "isOptional": false
                },
                "location": {
                    "type": "Locale.Location",
                    "isOptional": false
                },
                "character": {
                    "type": "string",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.SaveSlot.Data.Quests.Locale.Location": {
            "fields": {
                "area": {
                    "type": "ig.LangLabel.Data",
                    "isOptional": false
                },
                "map": {
                    "type": "ig.LangLabel.Data",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.SaveSlot.Data.Vars": {
            "fields": {
                "levelName": {
                    "type": "string",
                    "isOptional": false
                },
                "storage": {
                    "type": "any",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.SaveSlot": {
            "fields": {
                "src": {
                    "type": "string",
                    "isOptional": false
                },
                "data": {
                    "type": "ig.SaveSlot.Data",
                    "isOptional": false
                }
            },
            "functions": {
                "getData": {
                    "returnType": "this['data']",
                    "args": []
                },
                "getSrc": {
                    "returnType": "this['src']",
                    "args": []
                },
                "mergeData": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "data",
                            "type": "Partial<ig.SaveSlot.Data>",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "SaveSlot",
                    "args": [
                        {
                            "name": "source",
                            "type": "string | ig.SaveSlot.Data",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "ig": {
            "fields": {
                "SaveSlot": {
                    "type": "SaveSlotConstructor"
                },
                "StorageData": {
                    "type": "StorageDataConstructor"
                },
                "Storage": {
                    "type": "StorageConstructor"
                },
                "storage": {
                    "type": "Storage"
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.StorageData.SaveFileData": {
            "fields": {
                "slots": {
                    "type": "Array<string | ig.SaveSlot.Data>",
                    "isOptional": false
                },
                "autoSlot": {
                    "type": "string | ig.SaveSlot.Data | null",
                    "isOptional": true
                },
                "globals": {
                    "type": "string | ig.Storage.GlobalsData",
                    "isOptional": false
                },
                "lastSlot": {
                    "type": "number",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.StorageData": {
            "fields": {
                "data": {
                    "type": "ig.StorageData.SaveFileData | null",
                    "isOptional": false
                }
            },
            "functions": {
                "save": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "data",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                },
                "getData": {
                    "returnType": "this['data']",
                    "args": []
                },
                "init": {
                    "returnType": "StorageData",
                    "args": []
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "ig.Storage.GlobalsData": {
            "fields": {
                "featVersion": {
                    "type": "number",
                    "isOptional": false
                },
                "feats": {
                    "type": "Record<string, boolean>",
                    "isOptional": false
                },
                "options": {
                    "type": "GlobalsData.Options",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.Storage.Listener": {
            "fields": {},
            "functions": {
                "onStorageGlobalSave": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "globals",
                            "type": "ig.Storage.GlobalsData",
                            "isOptional": false
                        }
                    ]
                },
                "onStorageSave": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "savefile",
                            "type": "ig.SaveSlot.Data",
                            "isOptional": false
                        }
                    ]
                },
                "onStoragePreLoad": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "savefile",
                            "type": "ig.SaveSlot.Data",
                            "isOptional": false
                        }
                    ]
                },
                "onStoragePostLoad": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "savefile",
                            "type": "ig.SaveSlot.Data",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": []
        },
        "ig.Storage": {
            "fields": {
                "slots": {
                    "type": "ig.SaveSlot[]",
                    "isOptional": false
                },
                "autoSlot": {
                    "type": "ig.SaveSlot | null",
                    "isOptional": false
                },
                "lastUsedSlot": {
                    "type": "number",
                    "isOptional": false
                },
                "listeners": {
                    "type": "ig.Storage.Listener[]",
                    "isOptional": false
                },
                "globalData": {
                    "type": "ig.Storage.GlobalsData",
                    "isOptional": false
                },
                "checkPointSave": {
                    "type": "ig.SaveSlot",
                    "isOptional": false
                },
                "data": {
                    "type": "ig.StorageData",
                    "isOptional": false
                },
                "currentLoadFile": {
                    "type": "ig.SaveSlot",
                    "isOptional": false
                }
            },
            "functions": {
                "register": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "listener",
                            "type": "ig.Storage.Listener",
                            "isOptional": false
                        }
                    ]
                },
                "_saveToStorage": {
                    "returnType": "ig.StorageData.SaveFileData",
                    "args": []
                },
                "_saveState": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "output",
                            "type": "Partial<ig.SaveSlot.Data>",
                            "isOptional": false
                        },
                        {
                            "name": "mapName",
                            "type": "string",
                            "isOptional": true
                        },
                        {
                            "name": "teleportPositionSettings",
                            "type": "ig.TeleportPosition.Settings",
                            "isOptional": true
                        }
                    ]
                },
                "loadSlot": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "id",
                            "type": "number | ig.SaveSlot",
                            "isOptional": true
                        },
                        {
                            "name": "teleportRightAway",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "_encrypt": {
                    "returnType": "string",
                    "args": [
                        {
                            "name": "data",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "_unused",
                            "type": "unknown",
                            "isOptional": true
                        }
                    ]
                },
                "_decrypt": {
                    "returnType": "string",
                    "args": [
                        {
                            "name": "data",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "_unused",
                            "type": "unknown",
                            "isOptional": true
                        }
                    ]
                },
                "init": {
                    "returnType": "Storage",
                    "args": []
                }
            },
            "parents": [
                "ig.GameAddon",
                "sc.Model"
            ]
        }
    },
    "impact.feature.bgm.bgm": {
        "ig.BGM_SWITCH_MODE.Mode": {
            "fields": {
                "fadeIn": {
                    "type": "number",
                    "isOptional": false
                },
                "fadeOut": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.BGM_SWITCH_MODE": {
            "fields": {
                "IMMEDIATELY": {
                    "type": "Mode"
                },
                "FAST_OUT": {
                    "type": "Mode"
                },
                "MEDIUM_OUT": {
                    "type": "Mode"
                },
                "SLOW_OUT": {
                    "type": "Mode"
                },
                "VERY_SLOW_OUT": {
                    "type": "Mode"
                },
                "FAST": {
                    "type": "Mode"
                },
                "MEDIUM": {
                    "type": "Mode"
                },
                "SLOW": {
                    "type": "Mode"
                },
                "VERY_SLOW": {
                    "type": "Mode"
                }
            },
            "functions": {},
            "parents": []
        },
        "ig": {
            "fields": {
                "BGM_TRACK_LIST": {
                    "type": "BGM_TRACK_LIST"
                },
                "BgmTrack": {
                    "type": "BgmTrackConstructor"
                },
                "Bgm": {
                    "type": "BgmConstructor"
                },
                "bgm": {
                    "type": "Bgm"
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.BgmTrack": {
            "fields": {
                "name": {
                    "type": "BGM_TRACK",
                    "isOptional": false
                },
                "track": {
                    "type": "ig.Track",
                    "isOptional": false
                }
            },
            "functions": {
                "get": {
                    "returnType": "ig.Track",
                    "args": []
                },
                "clearCached": {
                    "returnType": "void",
                    "args": []
                },
                "copy": {
                    "returnType": "ig.BgmTrack",
                    "args": []
                },
                "init": {
                    "returnType": "BgmTrack",
                    "args": [
                        {
                            "name": "name",
                            "type": "BGM_TRACK",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "ig.Bgm.Data": {
            "fields": {
                "defaultTrackSet": {
                    "type": "string",
                    "isOptional": false
                },
                "defaultTrackTypeStack": {
                    "type": "string[]",
                    "isOptional": false
                },
                "overloadDefault": {
                    "type": "boolean",
                    "isOptional": false
                },
                "paused": {
                    "type": "boolean",
                    "isOptional": false
                },
                "resumeOnChange": {
                    "type": "Nullable<unknown>",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.Bgm": {
            "fields": {},
            "functions": {
                "clear": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "mode",
                            "type": "ig.BGM_SWITCH_MODE",
                            "isOptional": true
                        }
                    ]
                },
                "onDeferredUpdate": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "Bgm",
                    "args": []
                }
            },
            "parents": [
                "ig.GameAddon"
            ]
        }
    },
    "game.feature.menu.gui.base-menu": {
        "sc.BaseMenu": {
            "fields": {
                "gfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "visible": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "addObservers": {
                    "returnType": "void",
                    "args": []
                },
                "removeObservers": {
                    "returnType": "void",
                    "args": []
                },
                "showMenu": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "previousMenu",
                            "type": "sc.BaseMenu",
                            "isOptional": true
                        },
                        {
                            "name": "prevSubmenu",
                            "type": "sc.MENU_SUBMENU",
                            "isOptional": true
                        }
                    ]
                },
                "hideMenu": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "afterMenu",
                            "type": "sc.BaseMenu",
                            "isOptional": true
                        },
                        {
                            "name": "nextSubmenu",
                            "type": "sc.MENU_SUBMENU",
                            "isOptional": true
                        }
                    ]
                },
                "exitMenu": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "BaseMenu",
                    "args": []
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc": {
            "fields": {
                "BaseMenu": {
                    "type": "BaseMenuConstructor"
                },
                "ListInfoMenu": {
                    "type": "ListInfoMenuConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.ListInfoMenu": {
            "fields": {
                "hotkeyHelp": {
                    "type": "sc.ButtonGui",
                    "isOptional": false
                },
                "hotkeySort": {
                    "type": "sc.ButtonGui",
                    "isOptional": false
                },
                "helpGui": {
                    "type": "sc.HelpScreen",
                    "isOptional": false
                },
                "list": {
                    "type": "sc.ListTabbedPane",
                    "isOptional": false
                },
                "info": {
                    "type": "ig.BoxGui",
                    "isOptional": true
                },
                "sortMenu": {
                    "type": "sc.SortMenu",
                    "isOptional": false
                }
            },
            "functions": {
                "createHelpGui": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "ListInfoMenu",
                    "args": [
                        {
                            "name": "list",
                            "type": "sc.ListTabbedPane",
                            "isOptional": false
                        },
                        {
                            "name": "info",
                            "type": "ig.BoxGui",
                            "isOptional": true
                        },
                        {
                            "name": "disableSorting",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": [
                "sc.BaseMenu",
                "sc.Model.Observer"
            ]
        }
    },
    "game.feature.interact.button-group": {
        "sc.MouseButtonGroup": {
            "fields": {
                "_counter": {
                    "type": "number",
                    "isOptional": false
                },
                "onButtonTraversal": {
                    "type": "unknown",
                    "isOptional": false
                }
            },
            "functions": {
                "addFocusGui": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "gui",
                            "type": "ig.FocusGui",
                            "isOptional": false
                        }
                    ]
                },
                "doButtonTraversal": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "regainFocus",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "isNonMouseMenuInput": {
                    "returnType": "false",
                    "args": []
                },
                "init": {
                    "returnType": "MouseButtonGroup",
                    "args": []
                }
            },
            "parents": [
                "ig.ButtonGroup"
            ]
        },
        "sc": {
            "fields": {
                "MouseButtonGroup": {
                    "type": "MouseButtonGroupConstructor"
                },
                "ButtonGroup": {
                    "type": "ButtonGroupConstructor"
                },
                "RowButtonGroup": {
                    "type": "RowButtonGroupConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.ButtonGroup": {
            "fields": {},
            "functions": {
                "onButtonTraversal": {
                    "returnType": "void",
                    "args": []
                },
                "doButtonTraversal": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "inputRegainded",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "isNonMouseMenuInput": {
                    "returnType": "boolean",
                    "args": []
                },
                "init": {
                    "returnType": "sc.ButtonGroup",
                    "args": []
                }
            },
            "parents": [
                "ig.ButtonGroup"
            ]
        },
        "sc.RowButtonGroup": {
            "fields": {
                "rowIndex": {
                    "type": "number[]",
                    "isOptional": false
                },
                "currentRow": {
                    "type": "number",
                    "isOptional": false
                },
                "_lastRowIndex": {
                    "type": "number",
                    "isOptional": false
                },
                "elements": {
                    "type": "sc.ButtonGui[][]",
                    "isOptional": false
                },
                "leftRightCallback": {
                    "type": "(stepRight: boolean, row: number) => void",
                    "isOptional": false
                }
            },
            "functions": {
                "addFocusGui": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "gui",
                            "type": "ig.FocusGui",
                            "isOptional": false
                        },
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "setLeftRightCallback": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "callback",
                            "type": "sc.RowButtonGroup['leftRightCallback']",
                            "isOptional": false
                        }
                    ]
                },
                "regainCurrentFocus": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "ignoreCallbacks",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "ignoreSounds",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "ignoreIfSame",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "stepRight": {
                    "returnType": "void",
                    "args": []
                },
                "stepLeft": {
                    "returnType": "void",
                    "args": []
                },
                "stepDown": {
                    "returnType": "void",
                    "args": []
                },
                "stepUp": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "sc.RowButtonGroup",
                    "args": []
                }
            },
            "parents": [
                "sc.ButtonGroup"
            ]
        }
    },
    "game.feature.quick-menu.gui.circle-menu": {
        "sc.RingMenuButton": {
            "fields": {
                "gfx": {
                    "type": "ig.Image",
                    "isOptional": false
                },
                "state": {
                    "type": "sc.QUICK_MENU_STATE",
                    "isOptional": false
                },
                "alpha": {
                    "type": "number",
                    "isOptional": false
                },
                "alphaTimer": {
                    "type": "number",
                    "isOptional": false
                },
                "endPos": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "origin": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "endPosActive": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "data": {
                    "type": "string",
                    "isOptional": false
                },
                "submitSound": {
                    "type": "ig.Sound",
                    "isOptional": false
                },
                "blockedSound": {
                    "type": "ig.Sound",
                    "isOptional": false
                }
            },
            "functions": {
                "show": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "initDelay",
                            "type": "number",
                            "isOptional": true
                        },
                        {
                            "name": "setPressed",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "hide": {
                    "returnType": "void",
                    "args": []
                },
                "activate": {
                    "returnType": "void",
                    "args": []
                },
                "deactivate": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "RingMenuButton",
                    "args": [
                        {
                            "name": "state",
                            "type": "sc.QUICK_MENU_STATE",
                            "isOptional": false
                        },
                        {
                            "name": "endPosX",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "endPosY",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.FocusGui"
            ]
        },
        "sc": {
            "fields": {
                "RingMenuButton": {
                    "type": "RingMenuButtonConstructor"
                },
                "ItemTimerOverlay": {
                    "type": "ItemTimerOverlayConstructor"
                },
                "QuickMenuButtonGroup": {
                    "type": "QuickMenuButtonGroupConstructor"
                },
                "QuickRingMenu": {
                    "type": "QuickRingMenuConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "sc.ItemTimerOverlay": {
            "fields": {
                "isActive": {
                    "type": "boolean",
                    "isOptional": false
                },
                "numberGui": {
                    "type": "sc.NumberGui",
                    "isOptional": false
                },
                "button": {
                    "type": "sc.RingMenuButton",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "ItemTimerOverlay",
                    "args": [
                        {
                            "name": "button",
                            "type": "sc.RingMenuButton",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.GuiElementBase"
            ]
        },
        "sc.QuickMenuButtonGroup": {
            "fields": {},
            "functions": {
                "setButtons": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "button1",
                            "type": "sc.RingMenuButton",
                            "isOptional": false
                        },
                        {
                            "name": "button2",
                            "type": "sc.RingMenuButton",
                            "isOptional": false
                        },
                        {
                            "name": "button3",
                            "type": "sc.RingMenuButton",
                            "isOptional": false
                        },
                        {
                            "name": "button4",
                            "type": "sc.RingMenuButton",
                            "isOptional": false
                        }
                    ]
                },
                "isNonMouseMenuInput": {
                    "returnType": "boolean",
                    "args": []
                },
                "doButtonTraversal": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "focusRegained",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "focusCurrentButton": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "newX",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "newY",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "ignoreCallbacks",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "ignoreSounds",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "ignoreIfSame",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "hasCD": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "buttonIndex",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "QuickMenuButtonGroup",
                    "args": []
                }
            },
            "parents": [
                "ig.ButtonGroup"
            ]
        },
        "sc.QuickRingMenu": {
            "fields": {
                "buttongroup": {
                    "type": "sc.QuickMenuButtonGroup",
                    "isOptional": false
                },
                "items": {
                    "type": "sc.RingMenuButton",
                    "isOptional": false
                },
                "map": {
                    "type": "sc.RingMenuButton",
                    "isOptional": false
                },
                "check": {
                    "type": "sc.RingMenuButton",
                    "isOptional": false
                },
                "party": {
                    "type": "sc.RingMenuButton",
                    "isOptional": false
                },
                "buttons": {
                    "type": "sc.RingMenuButton[]",
                    "isOptional": false
                }
            },
            "functions": {
                "enter": {
                    "returnType": "void",
                    "args": []
                },
                "exit": {
                    "returnType": "void",
                    "args": []
                },
                "show": {
                    "returnType": "void",
                    "args": []
                },
                "hide": {
                    "returnType": "void",
                    "args": []
                },
                "createButtons": {
                    "returnType": "void",
                    "args": []
                },
                "_unfocusAll": {
                    "returnType": "void",
                    "args": []
                },
                "_createRingButton": {
                    "returnType": "sc.RingMenuButton",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "entry",
                            "type": "sc.QUICK_MENU_STATE",
                            "isOptional": false
                        },
                        {
                            "name": "angles",
                            "type": "Vec2[]",
                            "isOptional": false
                        }
                    ]
                },
                "_updatePos": {
                    "returnType": "void",
                    "args": []
                },
                "_setStateActive": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "entry",
                            "type": "sc.QUICK_MENU_STATE",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "QuickRingMenu",
                    "args": []
                }
            },
            "parents": [
                "ig.GuiElementBase",
                "sc.Model.Observer"
            ]
        }
    },
    "impact.feature.gui.gui": {
        "ig.GuiRenderer": {
            "fields": {},
            "functions": {
                "addGfx": {
                    "returnType": "ig.GuiDrawable",
                    "args": [
                        {
                            "name": "gfx",
                            "type": "ig.Image | ig.ImageAtlasFragment",
                            "isOptional": false
                        },
                        {
                            "name": "posX",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "posY",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "srcX",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "srcY",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "sizeX",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "sizeY",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "flipX",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "flipY",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "addColor": {
                    "returnType": "ig.GuiDrawable",
                    "args": [
                        {
                            "name": "color",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "posX",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "posY",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "sizeX",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "sizeY",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "addPattern": {
                    "returnType": "ig.GuiDrawable",
                    "args": [
                        {
                            "name": "pattern",
                            "type": "ig.ImagePattern",
                            "isOptional": false
                        },
                        {
                            "name": "posX",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "posY",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "srcX",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "srcY",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "sizeX",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "sizeY",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "addText": {
                    "returnType": "ig.GuiDrawable",
                    "args": [
                        {
                            "name": "textBlock",
                            "type": "ig.TextBlock",
                            "isOptional": false
                        },
                        {
                            "name": "posX",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "posY",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "addTransform": {
                    "returnType": "ig.GuiTransform",
                    "args": []
                },
                "undoTransform": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "GuiRenderer",
                    "args": []
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "ig.Gui": {
            "fields": {
                "guiHooks": {
                    "type": "ig.GuiHook[]",
                    "isOptional": false
                },
                "namedGuiElements": {
                    "type": "Record<string, unknown>",
                    "isOptional": false
                },
                "renderer": {
                    "type": "ig.GuiRenderer",
                    "isOptional": false
                },
                "controlModule": {
                    "type": "sc.Control",
                    "isOptional": false
                }
            },
            "functions": {
                "onDeferredUpdate": {
                    "returnType": "void",
                    "args": []
                },
                "createEventGui": {
                    "returnType": "T",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "type",
                            "type": "Key",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "S",
                            "isOptional": false
                        },
                        {
                            "name": "free",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "spawnEventGui": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "gui",
                            "type": "ig.GuiElementBase",
                            "isOptional": false
                        }
                    ]
                },
                "freeEventGui": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "gui",
                            "type": "ig.GuiElementBase",
                            "isOptional": false
                        }
                    ]
                },
                "addGuiElement": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "guiElement",
                            "type": "ig.GuiElementBase",
                            "isOptional": false
                        }
                    ]
                },
                "removeGuiElement": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "guiElement",
                            "type": "ig.GuiElementBase",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "Gui",
                    "args": []
                }
            },
            "parents": [
                "ig.GameAddon"
            ]
        },
        "ig": {
            "fields": {
                "Gui": {
                    "type": "GuiConstructor"
                },
                "gui": {
                    "type": "ig.Gui"
                },
                "GuiHook": {
                    "type": "GuiHookConstructor"
                },
                "GuiDrawable": {
                    "type": "GuiDrawableConstructor"
                },
                "GuiTransform": {
                    "type": "GuiTransformConstructor"
                },
                "GuiElementBase": {
                    "type": "GuiElementBaseConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.GuiHook.State": {
            "fields": {
                "offsetX": {
                    "type": "number",
                    "isOptional": false
                },
                "offsetY": {
                    "type": "number",
                    "isOptional": false
                },
                "alpha": {
                    "type": "number",
                    "isOptional": false
                },
                "scaleX": {
                    "type": "number",
                    "isOptional": false
                },
                "scaleY": {
                    "type": "number",
                    "isOptional": false
                },
                "angle": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.GuiHook.Transition": {
            "fields": {
                "state": {
                    "type": "Partial<ig.GuiHook.State>",
                    "isOptional": false
                },
                "time": {
                    "type": "number",
                    "isOptional": false
                },
                "timeFunction": {
                    "type": "KeySpline",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.GuiHook.SizeTransition": {
            "fields": {
                "startWidth": {
                    "type": "number",
                    "isOptional": false
                },
                "width": {
                    "type": "number",
                    "isOptional": false
                },
                "startHeight": {
                    "type": "number",
                    "isOptional": false
                },
                "height": {
                    "type": "number",
                    "isOptional": false
                },
                "time": {
                    "type": "number",
                    "isOptional": false
                },
                "timeFunction": {
                    "type": "KeySpline",
                    "isOptional": false
                },
                "timer": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.GuiHook.ScreenCoords": {
            "fields": {
                "x": {
                    "type": "number",
                    "isOptional": false
                },
                "y": {
                    "type": "number",
                    "isOptional": false
                },
                "w": {
                    "type": "number",
                    "isOptional": false
                },
                "h": {
                    "type": "number",
                    "isOptional": false
                },
                "active": {
                    "type": "boolean",
                    "isOptional": false
                },
                "zIndex": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.GuiHook.AnimTargetState": {
            "fields": {
                "targetState": {
                    "type": "unknown",
                    "isOptional": false
                },
                "initState": {
                    "type": "unknown",
                    "isOptional": false
                },
                "timer": {
                    "type": "number",
                    "isOptional": false
                },
                "maxTime": {
                    "type": "number",
                    "isOptional": false
                },
                "timeFunction": {
                    "type": "KeySpline",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.GuiHook.PosTransition": {
            "fields": {
                "startX": {
                    "type": "number",
                    "isOptional": false
                },
                "startY": {
                    "type": "number",
                    "isOptional": false
                },
                "x": {
                    "type": "number",
                    "isOptional": false
                },
                "y": {
                    "type": "number",
                    "isOptional": false
                },
                "time": {
                    "type": "number",
                    "isOptional": false
                },
                "timeFunction": {
                    "type": "KeySpline",
                    "isOptional": false
                },
                "endCallback": {
                    "type": "() => void",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.GuiHook": {
            "fields": {
                "pos": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "size": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "pivot": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "scroll": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "align": {
                    "type": "{ x: ig.GUI_ALIGN; y: ig.GUI_ALIGN }",
                    "isOptional": false
                },
                "parentHook": {
                    "type": "Nullable<ig.GuiHook>",
                    "isOptional": false
                },
                "children": {
                    "type": "ig.GuiHook[]",
                    "isOptional": false
                },
                "mouseRecord": {
                    "type": "boolean",
                    "isOptional": false
                },
                "screenCoords": {
                    "type": "ig.GuiHook.ScreenCoords",
                    "isOptional": true
                },
                "mouseOver": {
                    "type": "boolean",
                    "isOptional": false
                },
                "localAlpha": {
                    "type": "number",
                    "isOptional": false
                },
                "zIndex": {
                    "type": "number",
                    "isOptional": false
                },
                "pauseGui": {
                    "type": "boolean",
                    "isOptional": false
                },
                "invisibleUpdate": {
                    "type": "boolean",
                    "isOptional": false
                },
                "screenBlocking": {
                    "type": "boolean",
                    "isOptional": false
                },
                "stateCallback": {
                    "type": "Nullable<() => void>",
                    "isOptional": false
                },
                "clip": {
                    "type": "boolean",
                    "isOptional": false
                },
                "temporary": {
                    "type": "boolean",
                    "isOptional": false
                },
                "transitions": {
                    "type": "{ [name: string]: ig.GuiHook.Transition }",
                    "isOptional": false
                },
                "gui": {
                    "type": "ig.GuiElementBase",
                    "isOptional": false
                },
                "currentState": {
                    "type": "ig.GuiHook.State",
                    "isOptional": false
                },
                "currentStateName": {
                    "type": "string",
                    "isOptional": false
                },
                "anim": {
                    "type": "ig.GuiHook.AnimTargetState",
                    "isOptional": false
                },
                "removeAfterTransition": {
                    "type": "boolean",
                    "isOptional": false
                },
                "posTransition": {
                    "type": "ig.GuiHook.PosTransition",
                    "isOptional": false
                },
                "scrollTransition": {
                    "type": "ig.GuiHook.PosTransition",
                    "isOptional": false
                },
                "_visible": {
                    "type": "boolean",
                    "isOptional": false
                },
                "_subState": {
                    "type": "{ subtreeTransition: boolean }",
                    "isOptional": false
                },
                "mapGuiInfo": {
                    "type": "{ name: string; type: keyof ig.GUI; settings: any; free?: boolean }",
                    "isOptional": true
                },
                "name": {
                    "type": "string",
                    "isOptional": false
                },
                "type": {
                    "type": "keyof ig.GUI",
                    "isOptional": false
                },
                "settings": {
                    "type": "any",
                    "isOptional": false
                },
                "free": {
                    "type": "boolean",
                    "isOptional": true
                },
                "drawSteps": {
                    "type": "ig.GuiDrawable[]",
                    "isOptional": false
                }
            },
            "functions": {
                "setMouseRecord": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "value",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "onAttach": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "newParentHook",
                            "type": "Nullable<ig.GuiHook>",
                            "isOptional": true
                        }
                    ]
                },
                "onDetach": {
                    "returnType": "void",
                    "args": []
                },
                "getChildGuiIndex": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "hook",
                            "type": "ig.GuiHook",
                            "isOptional": false
                        }
                    ]
                },
                "getChildGuiByIndex": {
                    "returnType": "ig.GuiHook",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "addChildHook": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "hook",
                            "type": "ig.GuiHook",
                            "isOptional": false
                        }
                    ]
                },
                "insertChildHook": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "hook",
                            "type": "ig.GuiHook",
                            "isOptional": false
                        },
                        {
                            "name": "index",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "removeChildHook": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "hook",
                            "type": "ig.GuiHook",
                            "isOptional": false
                        }
                    ]
                },
                "removeChildHookByIndex": {
                    "returnType": "ig.GuiHook",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "removeAllChildren": {
                    "returnType": "void",
                    "args": []
                },
                "doStateTransition": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "skipTransition",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "removeAfter",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "callback",
                            "type": "Nullable<() => void>",
                            "isOptional": true
                        },
                        {
                            "name": "initDelay",
                            "type": "number",
                            "isOptional": true
                        }
                    ]
                },
                "getStateTransitionProgress": {
                    "returnType": "unknown",
                    "args": []
                },
                "doTempStateTransition": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "stateData",
                            "type": "Partial<ig.GuiHook.State>",
                            "isOptional": false
                        },
                        {
                            "name": "time",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "keySpline",
                            "type": "KeySpline",
                            "isOptional": false
                        },
                        {
                            "name": "skipTransition",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "removeAfter",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "callback",
                            "type": "Nullable<() => void>",
                            "isOptional": true
                        },
                        {
                            "name": "initDelay",
                            "type": "number",
                            "isOptional": true
                        }
                    ]
                },
                "setScale": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "scaleX",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "scaleY",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "_setStateData": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "stateData",
                            "type": "Partial<ig.GuiHook.State>",
                            "isOptional": false
                        },
                        {
                            "name": "time",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "keySpline",
                            "type": "KeySpline",
                            "isOptional": false
                        },
                        {
                            "name": "skipTransition",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "removeAfter",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "callback",
                            "type": "Nullable<() => void>",
                            "isOptional": true
                        },
                        {
                            "name": "initDelay",
                            "type": "number",
                            "isOptional": true
                        }
                    ]
                },
                "doPosTranstition": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "time",
                            "type": "number",
                            "isOptional": true
                        },
                        {
                            "name": "timeFunction",
                            "type": "KeySpline",
                            "isOptional": true
                        },
                        {
                            "name": "initDelay",
                            "type": "number",
                            "isOptional": true
                        },
                        {
                            "name": "preserveTime",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "endCallback",
                            "type": "() => void",
                            "isOptional": true
                        }
                    ]
                },
                "getPosTransitionProgress": {
                    "returnType": "number",
                    "args": []
                },
                "doScrollTransition": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "time",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "timeFunction",
                            "type": "KeySpline",
                            "isOptional": true
                        },
                        {
                            "name": "endCallback",
                            "type": "Nullable<() => void>",
                            "isOptional": true
                        }
                    ]
                },
                "hasTransition": {
                    "returnType": "boolean",
                    "args": []
                },
                "getTransitionFactor": {
                    "returnType": "number",
                    "args": []
                },
                "setStateValue": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "state",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "attribute",
                            "type": "keyof ig.GuiHook.State",
                            "isOptional": false
                        },
                        {
                            "name": "value",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "updateState": {
                    "returnType": "boolean",
                    "args": []
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "ig.GuiHook.align": {
            "fields": {
                "x": {
                    "type": "ig.GUI_ALIGN",
                    "isOptional": false
                },
                "y": {
                    "type": "ig.GUI_ALIGN",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.GuiHook._subState": {
            "fields": {
                "subtreeTransition": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.GuiDrawable": {
            "fields": {},
            "functions": {
                "setAlpha": {
                    "returnType": "this",
                    "args": [
                        {
                            "name": "alpha",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "setCompositionMode": {
                    "returnType": "this",
                    "args": [
                        {
                            "name": "mode",
                            "type": "string",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "ig.GuiTransform": {
            "fields": {
                "translate": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "scale": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "rotate": {
                    "type": "number",
                    "isOptional": false
                },
                "pivot": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "alpha": {
                    "type": "number",
                    "isOptional": false
                },
                "clip": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "prePos": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "preAlpha": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "setAlpha": {
                    "returnType": "this",
                    "args": [
                        {
                            "name": "alpha",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "setClip": {
                    "returnType": "this",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "setTranslate": {
                    "returnType": "this",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "setScale": {
                    "returnType": "this",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "setRotate": {
                    "returnType": "this",
                    "args": [
                        {
                            "name": "r_",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "isComplex": {
                    "returnType": "boolean",
                    "args": []
                },
                "transform": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "kill": {
                    "returnType": "void",
                    "args": []
                },
                "clear": {
                    "returnType": "void",
                    "args": []
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "ig.GuiElementBase.Annotation.Content": {
            "fields": {
                "title": {
                    "type": "string",
                    "isOptional": false
                },
                "description": {
                    "type": "string",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.GuiElementBase.Annotation.Offset": {
            "fields": {
                "x": {
                    "type": "number",
                    "isOptional": false
                },
                "y": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.GuiElementBase.Annotation.Size": {
            "fields": {
                "x": {
                    "type": "number | 'dyn'",
                    "isOptional": false
                },
                "y": {
                    "type": "number | 'dyn'",
                    "isOptional": false
                },
                "offX": {
                    "type": "number",
                    "isOptional": true
                },
                "offY": {
                    "type": "number",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.GuiElementBase.Annotation.Index": {
            "fields": {
                "x": {
                    "type": "number",
                    "isOptional": false
                },
                "y": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.GuiElementBase.Annotation": {
            "fields": {
                "content": {
                    "type": "Annotation.Content",
                    "isOptional": false
                },
                "offset": {
                    "type": "Annotation.Offset",
                    "isOptional": true
                },
                "size": {
                    "type": "Annotation.Size",
                    "isOptional": true
                },
                "index": {
                    "type": "Annotation.Index",
                    "isOptional": true
                },
                "type": {
                    "type": "keyof sc.HELP_ANNO_TYPE",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.GuiElementBase": {
            "fields": {
                "transitions": {
                    "type": "{ [name: string]: ig.GuiHook.Transition }",
                    "isOptional": false
                },
                "hook": {
                    "type": "ig.GuiHook",
                    "isOptional": false
                },
                "annotation": {
                    "type": "GuiElementBase.Annotation",
                    "isOptional": true
                }
            },
            "functions": {
                "setPos": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": true
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": true
                        }
                    ]
                },
                "getDestPos": {
                    "returnType": "Vec2",
                    "args": []
                },
                "setScroll": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "getDestScroll": {
                    "returnType": "Vec2",
                    "args": []
                },
                "setSize": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "w_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "h_",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "setPivot": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "setAlign": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "x_",
                            "type": "ig.GUI_ALIGN",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "ig.GUI_ALIGN",
                            "isOptional": false
                        }
                    ]
                },
                "isVisible": {
                    "returnType": "boolean",
                    "args": []
                },
                "getChildGuiIndex": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "gui",
                            "type": "ig.GuiElementBase",
                            "isOptional": false
                        }
                    ]
                },
                "getChildGuiByIndex": {
                    "returnType": "ig.GuiHook",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "addChildGui": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "guiElement",
                            "type": "ig.GuiElementBase",
                            "isOptional": false
                        }
                    ]
                },
                "insertChildGui": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "guiElement",
                            "type": "ig.GuiElementBase",
                            "isOptional": false
                        },
                        {
                            "name": "index",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "removeChildGui": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "guiElement",
                            "type": "ig.GuiElementBase",
                            "isOptional": false
                        }
                    ]
                },
                "removeChildGuiByIndex": {
                    "returnType": "ig.GuiElementBase",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "removeAllChildren": {
                    "returnType": "void",
                    "args": []
                },
                "update": {
                    "returnType": "void",
                    "args": []
                },
                "updateDrawables": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "renderer",
                            "type": "ig.GuiRenderer",
                            "isOptional": false
                        }
                    ]
                },
                "remove": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "immediately",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "onAttach": {
                    "returnType": "void",
                    "args": []
                },
                "onDetach": {
                    "returnType": "void",
                    "args": []
                },
                "onVisibilityChange": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "visible",
                            "type": "boolean",
                            "isOptional": false
                        }
                    ]
                },
                "isMouseOver": {
                    "returnType": "boolean",
                    "args": []
                },
                "hide": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "args",
                            "type": "unknown[]",
                            "isOptional": false
                        }
                    ]
                },
                "show": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "args",
                            "type": "unknown[]",
                            "isOptional": false
                        }
                    ]
                },
                "doStateTransition": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "skipTransition",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "removeAfter",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "callback",
                            "type": "Nullable<() => void>",
                            "isOptional": true
                        },
                        {
                            "name": "initDelay",
                            "type": "number",
                            "isOptional": true
                        }
                    ]
                },
                "doTempStateTransition": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "stateData",
                            "type": "Partial<ig.GuiHook.State>",
                            "isOptional": false
                        },
                        {
                            "name": "time",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "keySpline",
                            "type": "KeySpline",
                            "isOptional": false
                        },
                        {
                            "name": "skipTransition",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "removeAfter",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "callback",
                            "type": "Nullable<() => void>",
                            "isOptional": true
                        },
                        {
                            "name": "initDelay",
                            "type": "number",
                            "isOptional": true
                        }
                    ]
                },
                "doPosTranstition": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "time",
                            "type": "number",
                            "isOptional": true
                        },
                        {
                            "name": "timeFunction",
                            "type": "KeySpline",
                            "isOptional": true
                        },
                        {
                            "name": "initDelay",
                            "type": "number",
                            "isOptional": true
                        },
                        {
                            "name": "preserveTime",
                            "type": "boolean",
                            "isOptional": true
                        },
                        {
                            "name": "endCallback",
                            "type": "() => void",
                            "isOptional": true
                        }
                    ]
                },
                "doScrollTransition": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "time",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "timeFunction",
                            "type": "KeySpline",
                            "isOptional": true
                        },
                        {
                            "name": "endCallback",
                            "type": "Nullable<() => void>",
                            "isOptional": true
                        }
                    ]
                },
                "hasTransition": {
                    "returnType": "boolean",
                    "args": []
                },
                "getTransitionFactor": {
                    "returnType": "number",
                    "args": []
                },
                "setStateValue": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "state",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "attribute",
                            "type": "keyof ig.GuiHook.State",
                            "isOptional": false
                        },
                        {
                            "name": "value",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "updateState": {
                    "returnType": "boolean",
                    "args": []
                },
                "init": {
                    "returnType": "GuiElementBase",
                    "args": []
                }
            },
            "parents": [
                "ig.Class"
            ]
        }
    },
    "impact.feature.interact.button-interact": {
        "ig.ButtonGroup": {
            "fields": {
                "buttonInteract": {
                    "type": "ig.ButtonInteractEntry",
                    "isOptional": false
                },
                "elements": {
                    "type": "ig.FocusGui[][]",
                    "isOptional": false
                },
                "selectionCallbacks": {
                    "type": "ig.ButtonGroup.SelectionCallback[]",
                    "isOptional": false
                },
                "pressCallbacks": {
                    "type": "ig.ButtonGroup.PressCallback[]",
                    "isOptional": false
                },
                "mouseFocusLostCallback": {
                    "type": "() => void",
                    "isOptional": false
                },
                "backButton": {
                    "type": "sc.ButtonGui",
                    "isOptional": false
                },
                "current": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "regain": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "largestIndex": {
                    "type": "Vec2",
                    "isOptional": false
                },
                "loopButtons": {
                    "type": "boolean",
                    "isOptional": false
                },
                "soundsOnPressed": {
                    "type": "boolean",
                    "isOptional": false
                },
                "enableMultiPressed": {
                    "type": "boolean",
                    "isOptional": false
                },
                "ignoreActiveFocus": {
                    "type": "boolean",
                    "isOptional": false
                },
                "selectionType": {
                    "type": "ig.BUTTON_GROUP_SELECT_TYPE",
                    "isOptional": false
                },
                "_lastInvokedPress": {
                    "type": "sc.ButtonGui",
                    "isOptional": false
                },
                "_isParallel": {
                    "type": "boolean",
                    "isOptional": false
                },
                "sounds": {
                    "type": "{ focus: ig.Sound }",
                    "isOptional": false
                }
            },
            "functions": {
                "addFocusGui": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "gui",
                            "type": "ig.FocusGui",
                            "isOptional": false
                        },
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "asBackButton",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                },
                "removeFocusGui": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "invokeCurrentButton": {
                    "returnType": "void",
                    "args": []
                },
                "setMouseFocusLostCallback": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "callback",
                            "type": "() => void",
                            "isOptional": false
                        }
                    ]
                },
                "addPressCallback": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "callback",
                            "type": "ig.ButtonGroup.PressCallback",
                            "isOptional": false
                        }
                    ]
                },
                "addSelectionCallback": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "callback",
                            "type": "ig.ButtonGroup.SelectionCallback",
                            "isOptional": false
                        }
                    ]
                },
                "clear": {
                    "returnType": "void",
                    "args": []
                },
                "getCurrentElement": {
                    "returnType": "ig.FocusGui",
                    "args": []
                },
                "isActive": {
                    "returnType": "boolean",
                    "args": []
                },
                "setCurrentFocus": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "focusCurrentButtonX": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "focusCurrentButtonY": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "focusCurrentButton": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "newX",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "newY",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "ignoreCallbacks",
                            "type": "Nullable<boolean>",
                            "isOptional": true
                        },
                        {
                            "name": "ignoreSounds",
                            "type": "Nullable<boolean>",
                            "isOptional": true
                        },
                        {
                            "name": "ignoreIfSame",
                            "type": "Nullable<boolean>",
                            "isOptional": true
                        },
                        {
                            "name": "ignoreEmptyCells",
                            "type": "Nullable<boolean>",
                            "isOptional": true
                        }
                    ]
                },
                "unfocusCurrentButton": {
                    "returnType": "void",
                    "args": []
                },
                "setPressedFocusGui": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "button",
                            "type": "sc.ButtonGui",
                            "isOptional": false
                        }
                    ]
                },
                "_setBackButton": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "button",
                            "type": "sc.ButtonGui",
                            "isOptional": false
                        }
                    ]
                },
                "_invokePressCallbacks": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "button",
                            "type": "ig.FocusGui",
                            "isOptional": false
                        },
                        {
                            "name": "fromMouse",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "ig.ButtonGroup.sounds": {
            "fields": {
                "focus": {
                    "type": "ig.Sound",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig": {
            "fields": {
                "ButtonGroup": {
                    "type": "ButtonGroupConstructor"
                },
                "ButtonInteractEntry": {
                    "type": "ButtonInteractEntryConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ButtonInteractEntry": {
            "fields": {
                "buttonGroupStack": {
                    "type": "sc.ButtonGroup[]",
                    "isOptional": false
                }
            },
            "functions": {
                "pushButtonGroup": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "buttonGroup",
                            "type": "ig.ButtonGroup",
                            "isOptional": false
                        }
                    ]
                },
                "addGlobalButton": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "button",
                            "type": "sc.ButtonGui",
                            "isOptional": false
                        },
                        {
                            "name": "hotkeyCallback",
                            "type": "() => boolean",
                            "isOptional": false
                        },
                        {
                            "name": "noDoubles",
                            "type": "Nullable<boolean>",
                            "isOptional": true
                        }
                    ]
                },
                "removeGlobalButton": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "button",
                            "type": "sc.ButtonGui",
                            "isOptional": false
                        }
                    ]
                },
                "addParallelGroup": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "buttongroup",
                            "type": "sc.ButtonGroup",
                            "isOptional": false
                        }
                    ]
                },
                "removeParallelGroup": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "buttongroup",
                            "type": "sc.ButtonGroup",
                            "isOptional": false
                        }
                    ]
                },
                "clearAllButtons": {
                    "returnType": "void",
                    "args": []
                },
                "removeButtonGroup": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "buttongroup",
                            "type": "sc.ButtonGroup",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "ButtonInteractEntry",
                    "args": []
                }
            },
            "parents": [
                "ig.InteractEntry"
            ]
        }
    },
    "impact.feature.effect.entities.effect": {
        "ig.ENTITY.Effect.Settings": {
            "fields": {
                "effect": {
                    "type": "Nullable<ig.Effect>",
                    "isOptional": true
                },
                "target": {
                    "type": "Nullable<ig.Entity>",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": [
                "ig.Entity.Settings",
                "ig.EffectSheet.SpawnSettings"
            ]
        },
        "ig.ENTITY.Effect": {
            "fields": {
                "offset": {
                    "type": "Vec3",
                    "isOptional": false
                },
                "rotOffset": {
                    "type": "Nullable<Vec2>",
                    "isOptional": true
                },
                "angle": {
                    "type": "number",
                    "isOptional": false
                },
                "flipX": {
                    "type": "boolean",
                    "isOptional": false
                },
                "duration": {
                    "type": "number",
                    "isOptional": false
                },
                "state": {
                    "type": "ig.EFFECT_STATE",
                    "isOptional": false
                },
                "effect": {
                    "type": "Nullable<ig.Effect>",
                    "isOptional": true
                },
                "target": {
                    "type": "Nullable<ig.Entity>",
                    "isOptional": true
                },
                "spriteFilter": {
                    "type": "number[]",
                    "isOptional": false
                },
                "timelineIndex": {
                    "type": "number",
                    "isOptional": false
                },
                "timer": {
                    "type": "number",
                    "isOptional": false
                },
                "looped": {
                    "type": "boolean",
                    "isOptional": false
                },
                "particles": {
                    "type": "unknown[]",
                    "isOptional": false
                },
                "runners": {
                    "type": "(ig.EffectParticleRunner | ig.EffectTimeRunner)[]",
                    "isOptional": false
                },
                "align": {
                    "type": "ig.ENTITY_ALIGN",
                    "isOptional": false
                },
                "target2": {
                    "type": "{\n          point?: Nullable<Vec3>;\n          entity?: Nullable<ig.Entity>;\n          align?: Nullable<ig.ENTITY_ALIGN>;\n          offset: Vec3;\n        }",
                    "isOptional": false
                },
                "attachGroup": {
                    "type": "string",
                    "isOptional": false
                },
                "callback": {
                    "type": "Nullable<ig.EffectSheet.EventCallback>",
                    "isOptional": false
                },
                "rotateFace": {
                    "type": "number",
                    "isOptional": false
                },
                "flipLeftFace": {
                    "type": "boolean",
                    "isOptional": false
                },
                "noMultiGroup": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "setIgnoreSlowdown": {
                    "returnType": "void",
                    "args": []
                },
                "stop": {
                    "returnType": "void",
                    "args": []
                },
                "isDone": {
                    "returnType": "boolean",
                    "args": []
                },
                "spawnParticle": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "entity",
                            "type": "string | (new (x: number, y: number, z: number, settings: S) => E)",
                            "isOptional": false
                        },
                        {
                            "name": "offset",
                            "type": "Nullable<NullablePartial<Vec3>>",
                            "isOptional": true
                        },
                        {
                            "name": "settings",
                            "type": "Nullable<S>",
                            "isOptional": true
                        },
                        {
                            "name": "forceTargetPos",
                            "type": "Nullable<boolean>",
                            "isOptional": true
                        }
                    ]
                },
                "init": {
                    "returnType": "Effect",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "ig.ENTITY.Effect.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Entity"
            ]
        },
        "ig.ENTITY.Effect.target2": {
            "fields": {
                "point": {
                    "type": "Nullable<Vec3>",
                    "isOptional": true
                },
                "entity": {
                    "type": "Nullable<ig.Entity>",
                    "isOptional": true
                },
                "align": {
                    "type": "Nullable<ig.ENTITY_ALIGN>",
                    "isOptional": true
                },
                "offset": {
                    "type": "Vec3",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ENTITY": {
            "fields": {
                "Effect": {
                    "type": "EffectConstructor"
                }
            },
            "functions": {},
            "parents": []
        }
    },
    "impact.feature.effect.effect-sheet": {
        "ig.EffectConfig": {
            "fields": {
                "_data": {
                    "type": "T",
                    "isOptional": false
                }
            },
            "functions": {
                "copy": {
                    "returnType": "this",
                    "args": []
                },
                "loadParticleData": {
                    "returnType": "ig.ParticleData",
                    "args": [
                        {
                            "name": "animSheet",
                            "type": "ig.AnimationSheet",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "ig.EffectStepBase.Settings",
                            "isOptional": false
                        },
                        {
                            "name": "cacheKey",
                            "type": "Nullable<string>",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Config<T>"
            ]
        },
        "ig.EffectConfig<T>": {
            "fields": {},
            "functions": {
                "init": {
                    "returnType": "EffectConfig<T>",
                    "args": [
                        {
                            "name": "data",
                            "type": "T",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": []
        },
        "ig": {
            "fields": {
                "EffectConfig": {
                    "type": "EffectConfigConstructor"
                },
                "ParticleState": {
                    "type": "ParticleStateConstructor"
                },
                "EffectSheet": {
                    "type": "EffectSheetConstructor"
                },
                "Effect": {
                    "type": "EffectConstructor"
                },
                "EffectStepBase": {
                    "type": "EffectStepBaseConstructor"
                },
                "EffectHandle": {
                    "type": "EffectHandleConstructor"
                },
                "EffectTimeRunner": {
                    "type": "EffectTimeRunnerConstructor"
                },
                "EffectParticleRunner": {
                    "type": "EffectParticleRunnerConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ParticleData": {
            "fields": {
                "anim": {
                    "type": "ig.BaseAnimationSet",
                    "isOptional": false
                },
                "followUpAnim": {
                    "type": "Nullable<ig.BaseAnimationSet>",
                    "isOptional": true
                },
                "postAnim": {
                    "type": "Nullable<ig.BaseAnimationSet>",
                    "isOptional": true
                },
                "state": {
                    "type": "ig.ParticleState",
                    "isOptional": false
                },
                "moveWithTarget": {
                    "type": "number",
                    "isOptional": false
                },
                "particleDuration": {
                    "type": "number",
                    "isOptional": false
                },
                "particleDurVariance": {
                    "type": "number",
                    "isOptional": false
                },
                "angleVary": {
                    "type": "number",
                    "isOptional": false
                },
                "randFlip": {
                    "type": "boolean",
                    "isOptional": false
                },
                "cancelable": {
                    "type": "boolean",
                    "isOptional": false
                },
                "light": {
                    "type": "ig.LIGHT_SIZE",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ParticleState": {
            "fields": {},
            "functions": {
                "initSprite": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "sprite",
                            "type": "ig.CubeSprite",
                            "isOptional": false
                        },
                        {
                            "name": "angle",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "flipX",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "ig.EffectSheet.EventCallback": {
            "fields": {},
            "functions": {
                "onEffectEvent": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "effect",
                            "type": "ig.ENTITY.Effect",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": []
        },
        "ig.EffectSheet.SpawnSettings": {
            "fields": {
                "target2": {
                    "type": "Nullable<ig.Entity>",
                    "isOptional": true
                },
                "target2Point": {
                    "type": "Nullable<Vec3>",
                    "isOptional": true
                },
                "target2Align": {
                    "type": "Nullable<ig.ENTITY_ALIGN>",
                    "isOptional": true
                },
                "target2Offset": {
                    "type": "Nullable<Vec3>",
                    "isOptional": true
                },
                "noMultiGroup": {
                    "type": "Nullable<boolean>",
                    "isOptional": true
                },
                "spriteFilter": {
                    "type": "Nullable<number[]>",
                    "isOptional": true
                },
                "offset": {
                    "type": "Nullable<Vec3>",
                    "isOptional": true
                },
                "rotOffset": {
                    "type": "Nullable<Vec2>",
                    "isOptional": true
                },
                "align": {
                    "type": "Nullable<keyof typeof ig.ENTITY_ALIGN | ig.ENTITY_ALIGN>",
                    "isOptional": true
                },
                "angle": {
                    "type": "Nullable<number>",
                    "isOptional": true
                },
                "flipX": {
                    "type": "Nullable<boolean>",
                    "isOptional": true
                },
                "rotateFace": {
                    "type": "Nullable<number>",
                    "isOptional": true
                },
                "flipLeftFace": {
                    "type": "Nullable<boolean>",
                    "isOptional": true
                },
                "duration": {
                    "type": "Nullable<number>",
                    "isOptional": true
                },
                "group": {
                    "type": "Nullable<string>",
                    "isOptional": true
                },
                "callback": {
                    "type": "Nullable<EventCallback>",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.EffectSheet": {
            "fields": {
                "cache": {
                    "type": "Record<string, ig.EffectSheet>",
                    "isOptional": false
                }
            },
            "functions": {
                "spawnOnTarget": {
                    "returnType": "ig.ENTITY.Effect",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "target",
                            "type": "ig.Entity",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "Nullable<ig.EffectSheet.SpawnSettings>",
                            "isOptional": true
                        }
                    ]
                },
                "spawnFixed": {
                    "returnType": "ig.ENTITY.Effect | null",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "target",
                            "type": "ig.Entity",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "Nullable<ig.EffectSheet.SpawnSettings>",
                            "isOptional": true
                        }
                    ]
                },
                "init": {
                    "returnType": "ig.EffectSheet",
                    "args": [
                        {
                            "name": "pathOrData",
                            "type": "string | unknown",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.JsonLoadable"
            ]
        },
        "ig.Effect": {
            "fields": {
                "id": {
                    "type": "string",
                    "isOptional": false
                },
                "steps": {
                    "type": "ig.EffectStepBase[]",
                    "isOptional": false
                },
                "loopStartIdx": {
                    "type": "number",
                    "isOptional": false
                },
                "loopStartTime": {
                    "type": "number",
                    "isOptional": false
                },
                "loopEndIdx": {
                    "type": "number",
                    "isOptional": false
                },
                "loopEndTime": {
                    "type": "number",
                    "isOptional": false
                },
                "maxTime": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "clearCached": {
                    "returnType": "void",
                    "args": []
                },
                "update": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "effect",
                            "type": "ig.ENTITY.Effect",
                            "isOptional": false
                        }
                    ]
                },
                "isEnding": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "effect",
                            "type": "ig.ENTITY.Effect",
                            "isOptional": false
                        }
                    ]
                },
                "isDone": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "effect",
                            "type": "ig.ENTITY.Effect",
                            "isOptional": false
                        }
                    ]
                },
                "getRemainingTime": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "effect",
                            "type": "ig.ENTITY.Effect",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "Effect",
                    "args": [
                        {
                            "name": "sheet",
                            "type": "ig.EffectSheet",
                            "isOptional": false
                        },
                        {
                            "name": "effectName",
                            "type": "string",
                            "isOptional": false
                        },
                        {
                            "name": "data",
                            "type": "unknown[]",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "ig.EffectStepBase.Settings": {
            "fields": {
                "anim": {
                    "type": "string",
                    "isOptional": false
                },
                "followUpAnim": {
                    "type": "Nullable<string>",
                    "isOptional": true
                },
                "postAnim": {
                    "type": "Nullable<string>",
                    "isOptional": true
                },
                "pAlpha": {
                    "type": "Nullable<number>",
                    "isOptional": true
                },
                "pScale": {
                    "type": "Nullable<number>",
                    "isOptional": true
                },
                "pRotate": {
                    "type": "Nullable<number>",
                    "isOptional": true
                },
                "angleVary": {
                    "type": "Nullable<number>",
                    "isOptional": true
                },
                "randFlip": {
                    "type": "Nullable<boolean>",
                    "isOptional": true
                },
                "moveWithTarget": {
                    "type": "Nullable<number>",
                    "isOptional": true
                },
                "pLight": {
                    "type": "keyof typeof ig.LIGHT_SIZE | null",
                    "isOptional": true
                },
                "particleDuration": {
                    "type": "Nullable<number>",
                    "isOptional": true
                },
                "particleDurVariance": {
                    "type": "Nullable<number>",
                    "isOptional": true
                },
                "cancelable": {
                    "type": "Nullable<boolean>",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.EffectStepBase": {
            "fields": {
                "_nextStep": {
                    "type": "Nullable<ig.EffectStepBase>",
                    "isOptional": false
                },
                "branches": {
                    "type": "Nullable<Record<string, ig.EffectStepBase>>",
                    "isOptional": false
                }
            },
            "functions": {
                "start": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "entity",
                            "type": "ig.ENTITY.Effect",
                            "isOptional": false
                        }
                    ]
                },
                "run": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "entity",
                            "type": "ig.ENTITY.Effect",
                            "isOptional": false
                        }
                    ]
                },
                "getNext": {
                    "returnType": "ig.EffectStepBase",
                    "args": [
                        {
                            "name": "entity",
                            "type": "ig.ENTITY.Effect",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.StepBase"
            ]
        },
        "ig.EffectHandle.Settings": {
            "fields": {
                "sheet": {
                    "type": "string",
                    "isOptional": false
                },
                "name": {
                    "type": "string",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.EffectHandle": {
            "fields": {
                "effectSheet": {
                    "type": "ig.EffectSheet",
                    "isOptional": false
                },
                "name": {
                    "type": "string",
                    "isOptional": false
                },
                "externalSheet": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "clearCached": {
                    "returnType": "void",
                    "args": []
                },
                "spawnOnTarget": {
                    "returnType": "ig.ENTITY.Effect",
                    "args": [
                        {
                            "name": "target",
                            "type": "ig.Entity",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "Nullable<ig.EffectSheet.SpawnSettings>",
                            "isOptional": true
                        }
                    ]
                },
                "spawnFixed": {
                    "returnType": "ig.ENTITY.Effect",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "target",
                            "type": "ig.Entity",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "Nullable<ig.EffectSheet.SpawnSettings>",
                            "isOptional": true
                        }
                    ]
                },
                "init": {
                    "returnType": "ig.EffectHandle",
                    "args": [
                        {
                            "name": "settings",
                            "type": "EffectHandle.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "ig.EffectRunnerBase": {
            "fields": {
                "step": {
                    "type": "ig.EffectStepBase",
                    "isOptional": false
                },
                "data": {
                    "type": "unknown",
                    "isOptional": false
                },
                "duration": {
                    "type": "number",
                    "isOptional": false
                },
                "_timer": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "update": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "effect",
                            "type": "ig.ENTITY.Effect",
                            "isOptional": false
                        }
                    ]
                },
                "cancel": {
                    "returnType": "boolean",
                    "args": [
                        {
                            "name": "effect",
                            "type": "ig.ENTITY.Effect",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "ig.EffectTimeRunner": {
            "fields": {},
            "functions": {
                "init": {
                    "returnType": "EffectTimeRunner",
                    "args": [
                        {
                            "name": "step",
                            "type": "ig.EffectStepBase",
                            "isOptional": false
                        },
                        {
                            "name": "data",
                            "type": "unknown",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "EffectRunnerBase"
            ]
        },
        "ig.EffectParticleRunner": {
            "fields": {
                "totalParticles": {
                    "type": "number",
                    "isOptional": false
                },
                "currentParticle": {
                    "type": "number",
                    "isOptional": false
                }
            },
            "functions": {
                "init": {
                    "returnType": "EffectParticleRunner",
                    "args": [
                        {
                            "name": "step",
                            "type": "ig.EffectStepBase",
                            "isOptional": false
                        },
                        {
                            "name": "data",
                            "type": "unknown",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "EffectRunnerBase"
            ]
        }
    },
    "impact.feature.effect.entities.effect-particle": {
        "ig.ParticleHandle": {
            "fields": {
                "entity": {
                    "type": "ig.ENTITY.Particle",
                    "isOptional": false
                },
                "syncFace": {
                    "type": "boolean",
                    "isOptional": true
                },
                "timer": {
                    "type": "number",
                    "isOptional": false
                },
                "maxTime": {
                    "type": "number",
                    "isOptional": false
                },
                "postAnimTime": {
                    "type": "number",
                    "isOptional": false
                },
                "pData": {
                    "type": "ig.ENTITY.Particle.Settings",
                    "isOptional": false
                },
                "particleState": {
                    "type": "ig.ParticleState",
                    "isOptional": false
                },
                "startAngle": {
                    "type": "number",
                    "isOptional": false
                },
                "angleSync": {
                    "type": "Nullable<number>",
                    "isOptional": false
                },
                "flipX": {
                    "type": "number",
                    "isOptional": false
                },
                "moveWithTarget": {
                    "type": "number",
                    "isOptional": false
                },
                "cancelable": {
                    "type": "boolean",
                    "isOptional": false
                }
            },
            "functions": {
                "cancel": {
                    "returnType": "void",
                    "args": []
                },
                "setData": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "data",
                            "type": "ig.ENTITY.Particle.Settings",
                            "isOptional": false
                        }
                    ]
                },
                "onUpdate": {
                    "returnType": "void",
                    "args": []
                },
                "initSprite": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "sprite",
                            "type": "ig.CubeSprite",
                            "isOptional": false
                        }
                    ]
                },
                "updateSprite": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "sprite",
                            "type": "ig.CubeSprite",
                            "isOptional": false
                        }
                    ]
                },
                "initAnimState": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "sprite",
                            "type": "ig.AnimationState",
                            "isOptional": false
                        }
                    ]
                },
                "updateAnimState": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "sprite",
                            "type": "ig.AnimationState",
                            "isOptional": false
                        }
                    ]
                },
                "initAnimations": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "sheet",
                            "type": "ig.AnimationSheet",
                            "isOptional": false
                        }
                    ]
                },
                "init": {
                    "returnType": "ParticleHandle",
                    "args": [
                        {
                            "name": "entity",
                            "type": "ig.ENTITY.Particle",
                            "isOptional": false
                        },
                        {
                            "name": "syncFace",
                            "type": "boolean",
                            "isOptional": true
                        }
                    ]
                }
            },
            "parents": [
                "ig.Class"
            ]
        },
        "ig": {
            "fields": {
                "ParticleHandle": {
                    "type": "ParticleHandleConstructor"
                },
                "FX_HOMING_FLY_TYPE": {
                    "type": "ig.FX_HOMING_FLY_TYPE"
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.FxHomingFly": {
            "fields": {},
            "functions": {
                "dist": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "t_",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                },
                "normal": {
                    "returnType": "number",
                    "args": [
                        {
                            "name": "t_",
                            "type": "number",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": []
        },
        "ig.FX_HOMING_FLY_TYPE": {
            "fields": {
                "FLY_ARC": {
                    "type": "FxHomingFly[]",
                    "isOptional": false
                },
                "EXPAND_DASH": {
                    "type": "FxHomingFly[]",
                    "isOptional": false
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ENTITY.Particle.Settings": {
            "fields": {
                "data": {
                    "type": "ig.ParticleData",
                    "isOptional": false
                },
                "collision": {
                    "type": "ig.COLLTYPE",
                    "isOptional": true
                },
                "vel": {
                    "type": "Vec2",
                    "isOptional": true
                },
                "friction": {
                    "type": "number",
                    "isOptional": true
                },
                "angle": {
                    "type": "number",
                    "isOptional": true
                },
                "angleSync": {
                    "type": "Nullable<number>",
                    "isOptional": true
                },
                "flipX": {
                    "type": "boolean",
                    "isOptional": true
                },
                "ownerEffect": {
                    "type": "ig.ENTITY.Effect",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": [
                "ig.Entity.Settings"
            ]
        },
        "ig.ENTITY.Particle": {
            "fields": {},
            "functions": {
                "init": {
                    "returnType": "Particle",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "ig.ENTITY.Particle.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.AnimatedEntity"
            ]
        },
        "ig.ENTITY": {
            "fields": {
                "Particle": {
                    "type": "ParticleConstructor"
                },
                "CopyParticle": {
                    "type": "CopyParticleConstructor"
                },
                "OffsetParticle": {
                    "type": "OffsetParticleConstructor"
                },
                "RhombusParticle": {
                    "type": "RhombusParticleConstructor"
                },
                "HomingParticle": {
                    "type": "HomingParticleConstructor"
                }
            },
            "functions": {},
            "parents": []
        },
        "ig.ENTITY.CopyParticle.Settings": {
            "fields": {},
            "functions": {},
            "parents": [
                "ig.Entity.Settings",
                "ig.Entity.Settings"
            ]
        },
        "ig.ENTITY.CopyParticle": {
            "fields": {},
            "functions": {
                "init": {
                    "returnType": "CopyParticle",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "ig.ENTITY.CopyParticle.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.Entity"
            ]
        },
        "ig.ENTITY.OffsetParticle.Settings": {
            "fields": {},
            "functions": {},
            "parents": [
                "ig.Entity.Settings"
            ]
        },
        "ig.ENTITY.OffsetParticle": {
            "fields": {},
            "functions": {
                "init": {
                    "returnType": "OffsetParticle",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "ig.ENTITY.OffsetParticle.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.ENTITY.Particle"
            ]
        },
        "ig.ENTITY.RhombusParticle.Settings": {
            "fields": {},
            "functions": {},
            "parents": [
                "ig.Entity.Settings"
            ]
        },
        "ig.ENTITY.RhombusParticle": {
            "fields": {},
            "functions": {
                "init": {
                    "returnType": "RhombusParticle",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "ig.ENTITY.RhombusParticle.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.ENTITY.Particle"
            ]
        },
        "ig.ENTITY.HomingParticle.Settings": {
            "fields": {
                "flyType": {
                    "type": "keyof typeof ig.FX_HOMING_FLY_TYPE",
                    "isOptional": true
                },
                "ownerEffect": {
                    "type": "number",
                    "isOptional": false
                },
                "normalXY": {
                    "type": "number",
                    "isOptional": false
                },
                "normalZ": {
                    "type": "number",
                    "isOptional": false
                },
                "phaseDurations": {
                    "type": "number[]",
                    "isOptional": true
                },
                "rotateMoveDir": {
                    "type": "boolean",
                    "isOptional": true
                },
                "target1Vary": {
                    "type": "number",
                    "isOptional": true
                },
                "target2Vary": {
                    "type": "number",
                    "isOptional": true
                }
            },
            "functions": {},
            "parents": [
                "ig.Entity.Settings"
            ]
        },
        "ig.ENTITY.HomingParticle": {
            "fields": {
                "inverse": {
                    "type": "boolean",
                    "isOptional": false
                },
                "flyType": {
                    "type": "ig.FX_HOMING_FLY_TYPE",
                    "isOptional": false
                },
                "ownerEffect": {
                    "type": "number",
                    "isOptional": false
                },
                "normalXY": {
                    "type": "number",
                    "isOptional": false
                },
                "normalZ": {
                    "type": "number",
                    "isOptional": false
                },
                "moveTimer": {
                    "type": "number",
                    "isOptional": false
                },
                "phaseDurations": {
                    "type": "number[]",
                    "isOptional": false
                },
                "autoTargetStuck": {
                    "type": "boolean",
                    "isOptional": false
                },
                "target1Vary": {
                    "type": "Nullable<Vec2>",
                    "isOptional": true
                },
                "target2Vary": {
                    "type": "Nullable<Vec2>",
                    "isOptional": true
                }
            },
            "functions": {
                "_initOffsetParticle": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "settings",
                            "type": "ig.ENTITY.HomingParticle.Settings",
                            "isOptional": false
                        }
                    ]
                },
                "_updatePos": {
                    "returnType": "void",
                    "args": [
                        {
                            "name": "pos",
                            "type": "Vec2",
                            "isOptional": true
                        }
                    ]
                },
                "update": {
                    "returnType": "void",
                    "args": []
                },
                "init": {
                    "returnType": "HomingParticle",
                    "args": [
                        {
                            "name": "x_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "y_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "z_",
                            "type": "number",
                            "isOptional": false
                        },
                        {
                            "name": "settings",
                            "type": "ig.ENTITY.HomingParticle.Settings",
                            "isOptional": false
                        }
                    ]
                }
            },
            "parents": [
                "ig.ENTITY.Particle"
            ]
        }
    }
}